{
  "swagger" : "2.0",
  "info" : {
    "title" : "Eos swagger definition",
    "version" : "1.0.4"
  },
  "host" : "emeia.fcsm.io",
  "schemes" : [ "https" ],
  "securityDefinitions" : {
    "jwt_token" : {
      "flow" : "password",
      "tokenUrl" : "https://emeia.fcsm.io/api/v1/auth/login",
      "type" : "oauth2",
      "scopes" : { }
    }
  },
  "paths" : {
    "/api/v1/analytics/metrics" : {
      "get" : {
        "description" : "Retrieve all metrics",
        "operationId" : "get_metrics",
        "responses" : {
          "200" : {
            "description" : "A list of all metrics",
            "schema" : {
              "type" : "object",
              "properties" : {
                "totalStorageUsage" : {
                  "type" : "array",
                  "description" : "Total disk usage",
                  "items" : {
                    "type" : "object",
                    "description" : "Metric with date and value fields",
                    "properties" : {
                      "date" : {
                        "type" : "string",
                        "format" : "date-time"
                      },
                      "value" : {
                        "type" : "integer",
                        "description" : "Metric value"
                      }
                    }
                  }
                },
                "totalComputeInstances" : {
                  "type" : "array",
                  "description" : "Total number of VMs",
                  "items" : {
                    "type" : "object",
                    "description" : "Metric with date and value fields",
                    "properties" : {
                      "date" : {
                        "type" : "string",
                        "format" : "date-time"
                      },
                      "value" : {
                        "type" : "integer",
                        "description" : "Metric value"
                      }
                    }
                  }
                },
                "totalMemoryUsage" : {
                  "type" : "array",
                  "description" : "Total memory usage",
                  "items" : {
                    "type" : "object",
                    "description" : "Metric with date and value fields",
                    "properties" : {
                      "date" : {
                        "type" : "string",
                        "format" : "date-time"
                      },
                      "value" : {
                        "type" : "integer",
                        "description" : "Metric value"
                      }
                    }
                  }
                },
                "totalEstimatedSpend" : {
                  "type" : "array",
                  "description" : "Total estimated spend",
                  "items" : {
                    "type" : "object",
                    "description" : "Metric with date and value fields",
                    "properties" : {
                      "date" : {
                        "type" : "string",
                        "format" : "date-time"
                      },
                      "value" : {
                        "type" : "integer",
                        "description" : "Metric value"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags" : [ "analytics" ]
      }
    },
    "/api/v1/analytics/platforms/{platformId}" : {
      "get" : {
        "description" : "Retrieve metrics for specific platform",
        "operationId" : "get_platform_metrics",
        "parameters" : [ {
          "name" : "platformId",
          "in" : "path",
          "type" : "string",
          "required" : true,
          "description" : "ID of platform"
        } ],
        "responses" : {
          "200" : {
            "description" : "Metrics for one platform",
            "schema" : {
              "type" : "object",
              "properties" : {
                "vms" : {
                  "type" : "integer",
                  "description" : "Total number of VMs"
                },
                "memory" : {
                  "type" : "integer",
                  "description" : "Current memory usage"
                },
                "storage" : {
                  "type" : "integer",
                  "description" : "Current storage usage"
                },
                "vcpus" : {
                  "type" : "integer",
                  "description" : "Amount of virtual CPU"
                }
              }
            }
          }
        },
        "tags" : [ "analytics" ]
      }
    },
    "/api/v1/analytics/summary" : {
      "get" : {
        "description" : "Retrieve usage summary",
        "operationId" : "get_summary",
        "responses" : {
          "200" : {
            "description" : "Print summary",
            "schema" : {
              "type" : "object",
              "properties" : {
                "subscriptions" : {
                  "type" : "integer",
                  "description" : "Total number of subscriptions"
                },
                "platforms" : {
                  "type" : "integer",
                  "description" : "Number of platforms with valid subscriptions"
                },
                "cost" : {
                  "type" : "integer",
                  "description" : "Current total cost"
                }
              }
            }
          }
        },
        "tags" : [ "analytics" ]
      }
    },
    "/api/v1/analytics/summaryUsage" : {
      "get" : {
        "description" : "Retrieve usage summary for all platforms",
        "operationId" : "get_summary_usage",
        "responses" : {
          "200" : {
            "description" : "Print summary",
            "schema" : {
              "type" : "object",
              "properties" : {
                "memoryUsage" : {
                  "type" : "integer",
                  "description" : "Total memory usage"
                },
                "networkTraffic" : {
                  "type" : "integer",
                  "description" : "Total network traffic"
                },
                "storageUsage" : {
                  "type" : "integer",
                  "description" : "Total storage usage"
                }
              }
            }
          }
        },
        "tags" : [ "analytics" ]
      }
    },
    "/api/v1/analytics/platformsUsage" : {
      "get" : {
        "description" : "Retrieve percentage platforms usage",
        "operationId" : "get_platforms_usage",
        "responses" : {
          "200" : {
            "description" : "Print summary",
            "schema" : {
              "type" : "object",
              "properties" : {
                "openstack" : {
                  "type" : "integer",
                  "description" : "Percentage platform usage"
                },
                "aws" : {
                  "type" : "integer",
                  "description" : "Percentage platform usage"
                }
              }
            }
          }
        },
        "tags" : [ "analytics" ]
      }
    },
    "/api/v1/analytics/operatingSystems" : {
      "get" : {
        "description" : "Retrieve information about operating systems in use",
        "operationId" : "get_operating_systems",
        "responses" : {
          "200" : {
            "description" : "Print summary",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Operating system"
                  },
                  "value" : {
                    "type" : "integer",
                    "description" : "amount of servers"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "analytics" ]
      }
    },
    "/api/v1/analytics/issues" : {
      "get" : {
        "description" : "Retrieve information about problems",
        "operationId" : "get_issues",
        "responses" : {
          "200" : {
            "description" : "Print summary",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "issue" : {
                    "type" : "string",
                    "description" : "Issue description"
                  },
                  "value" : {
                    "type" : "integer",
                    "description" : "amount of servers"
                  },
                  "severity" : {
                    "type" : "integer",
                    "description" : "Severity level",
                    "minimum" : 1,
                    "maximum" : 2
                  }
                }
              }
            }
          }
        },
        "tags" : [ "analytics" ]
      }
    },
    "/api/v1/application/blueprints" : {
      "get" : {
        "description" : "Retrieve all blueprints",
        "operationId" : "get_blueprints",
        "responses" : {
          "200" : {
            "description" : "A list of all blueprints",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "required" : [ "name", "description", "version", "components" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Unique identifier"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Blueprint name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Description of the blueprint."
                  },
                  "version" : {
                    "type" : "string",
                    "description" : "Version of the blueprint"
                  },
                  "modified" : {
                    "type" : "string",
                    "description" : "Last modification date",
                    "readOnly" : true
                  },
                  "components" : {
                    "type" : "array",
                    "description" : "Blueprints/templates of each component",
                    "minItems" : 1,
                    "uniqueItems" : true,
                    "items" : {
                      "type" : "object",
                      "required" : [ "name", "module", "port", "installation_time", "size", "version" ],
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "description" : "Template Name"
                        },
                        "module" : {
                          "type" : "string",
                          "description" : "Salt module to execute."
                        },
                        "port" : {
                          "type" : "integer",
                          "description" : "Component is exposed via this port",
                          "minimum" : 1,
                          "maximum" : 65535
                        },
                        "installation_time" : {
                          "type" : "integer",
                          "description" : "Estimated installation time of a component [seconds]",
                          "minimum" : 1
                        },
                        "size" : {
                          "type" : "integer",
                          "description" : "Number of instances to deploy. Each on separate virtual machine."
                        },
                        "version" : {
                          "type" : "string",
                          "description" : "Component version to deploy. e.g. 2.1-34"
                        },
                        "instance_aws" : {
                          "type" : "object",
                          "required" : [ "image", "size", "key", "volume_size" ],
                          "properties" : {
                            "image" : {
                              "type" : "string",
                              "description" : "Name of image with Operating System"
                            },
                            "size" : {
                              "type" : "string",
                              "description" : "Virtual Machine size. Direct mapping to flavors",
                              "enum" : [ "small", "medium", "large" ]
                            },
                            "key" : {
                              "type" : "string",
                              "description" : "SSH key name"
                            },
                            "volume_size" : {
                              "type" : "integer",
                              "description" : "Virtual disk size [GB]"
                            },
                            "networks" : {
                              "type" : "array",
                              "uniqueItems" : true,
                              "items" : {
                                "type" : "string",
                                "description" : "Virtual network for virtual machine"
                              }
                            },
                            "security_groups" : {
                              "type" : "array",
                              "uniqueItems" : true,
                              "items" : {
                                "type" : "string",
                                "description" : "Firewall rule for network traffic passthroug"
                              }
                            }
                          }
                        },
                        "instance_openstack" : {
                          "type" : "object",
                          "required" : [ "image", "size", "key", "volume_size" ],
                          "properties" : {
                            "image" : {
                              "type" : "string",
                              "description" : "Name of image with Operating System"
                            },
                            "size" : {
                              "type" : "string",
                              "description" : "Virtual Machine size. Direct mapping to flavors",
                              "enum" : [ "small", "medium", "large" ]
                            },
                            "key" : {
                              "type" : "string",
                              "description" : "SSH key name"
                            },
                            "volume_size" : {
                              "type" : "integer",
                              "description" : "Virtual disk size [GB]"
                            },
                            "networks" : {
                              "type" : "array",
                              "uniqueItems" : true,
                              "items" : {
                                "type" : "string",
                                "description" : "Virtual network for virtual machine"
                              }
                            },
                            "security_groups" : {
                              "type" : "array",
                              "uniqueItems" : true,
                              "items" : {
                                "type" : "string",
                                "description" : "Firewall rule for network traffic passthroug"
                              }
                            }
                          }
                        },
                        "instance_k5" : {
                          "type" : "object",
                          "required" : [ "image", "size", "key", "volume_size" ],
                          "properties" : {
                            "image" : {
                              "type" : "string",
                              "description" : "Name of image with Operating System"
                            },
                            "size" : {
                              "type" : "string",
                              "description" : "Virtual Machine size. Direct mapping to flavors",
                              "enum" : [ "small", "medium", "large" ]
                            },
                            "key" : {
                              "type" : "string",
                              "description" : "SSH key name"
                            },
                            "volume_size" : {
                              "type" : "integer",
                              "description" : "Virtual disk size [GB]"
                            },
                            "networks" : {
                              "type" : "array",
                              "uniqueItems" : true,
                              "items" : {
                                "type" : "string",
                                "description" : "Virtual network for virtual machine"
                              }
                            },
                            "security_groups" : {
                              "type" : "array",
                              "uniqueItems" : true,
                              "items" : {
                                "type" : "string",
                                "description" : "Firewall rule for network traffic passthroug"
                              }
                            }
                          }
                        },
                        "depends_on" : {
                          "type" : "string",
                          "description" : "In Multi-Component application this fields points to another component on which 'this' components depends on."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags" : [ "application" ]
      },
      "post" : {
        "description" : "Create blueprint",
        "operationId" : "create_blueprint",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "blueprint",
          "in" : "body",
          "description" : "Blueprint to create",
          "schema" : {
            "type" : "object",
            "required" : [ "name", "description", "version", "components" ],
            "properties" : {
              "id" : {
                "type" : "string",
                "description" : "Unique identifier"
              },
              "name" : {
                "type" : "string",
                "description" : "Blueprint name"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of the blueprint."
              },
              "version" : {
                "type" : "string",
                "description" : "Version of the blueprint"
              },
              "modified" : {
                "type" : "string",
                "description" : "Last modification date",
                "readOnly" : true
              },
              "components" : {
                "type" : "array",
                "description" : "Blueprints/templates of each component",
                "minItems" : 1,
                "uniqueItems" : true,
                "items" : {
                  "type" : "object",
                  "required" : [ "name", "module", "port", "installation_time", "size", "version" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Template Name"
                    },
                    "module" : {
                      "type" : "string",
                      "description" : "Salt module to execute."
                    },
                    "port" : {
                      "type" : "integer",
                      "description" : "Component is exposed via this port",
                      "minimum" : 1,
                      "maximum" : 65535
                    },
                    "installation_time" : {
                      "type" : "integer",
                      "description" : "Estimated installation time of a component [seconds]",
                      "minimum" : 1
                    },
                    "size" : {
                      "type" : "integer",
                      "description" : "Number of instances to deploy. Each on separate virtual machine."
                    },
                    "version" : {
                      "type" : "string",
                      "description" : "Component version to deploy. e.g. 2.1-34"
                    },
                    "instance_aws" : {
                      "type" : "object",
                      "required" : [ "image", "size", "key", "volume_size" ],
                      "properties" : {
                        "image" : {
                          "type" : "string",
                          "description" : "Name of image with Operating System"
                        },
                        "size" : {
                          "type" : "string",
                          "description" : "Virtual Machine size. Direct mapping to flavors",
                          "enum" : [ "small", "medium", "large" ]
                        },
                        "key" : {
                          "type" : "string",
                          "description" : "SSH key name"
                        },
                        "volume_size" : {
                          "type" : "integer",
                          "description" : "Virtual disk size [GB]"
                        },
                        "networks" : {
                          "type" : "array",
                          "uniqueItems" : true,
                          "items" : {
                            "type" : "string",
                            "description" : "Virtual network for virtual machine"
                          }
                        },
                        "security_groups" : {
                          "type" : "array",
                          "uniqueItems" : true,
                          "items" : {
                            "type" : "string",
                            "description" : "Firewall rule for network traffic passthroug"
                          }
                        }
                      }
                    },
                    "instance_openstack" : {
                      "type" : "object",
                      "required" : [ "image", "size", "key", "volume_size" ],
                      "properties" : {
                        "image" : {
                          "type" : "string",
                          "description" : "Name of image with Operating System"
                        },
                        "size" : {
                          "type" : "string",
                          "description" : "Virtual Machine size. Direct mapping to flavors",
                          "enum" : [ "small", "medium", "large" ]
                        },
                        "key" : {
                          "type" : "string",
                          "description" : "SSH key name"
                        },
                        "volume_size" : {
                          "type" : "integer",
                          "description" : "Virtual disk size [GB]"
                        },
                        "networks" : {
                          "type" : "array",
                          "uniqueItems" : true,
                          "items" : {
                            "type" : "string",
                            "description" : "Virtual network for virtual machine"
                          }
                        },
                        "security_groups" : {
                          "type" : "array",
                          "uniqueItems" : true,
                          "items" : {
                            "type" : "string",
                            "description" : "Firewall rule for network traffic passthroug"
                          }
                        }
                      }
                    },
                    "instance_k5" : {
                      "type" : "object",
                      "required" : [ "image", "size", "key", "volume_size" ],
                      "properties" : {
                        "image" : {
                          "type" : "string",
                          "description" : "Name of image with Operating System"
                        },
                        "size" : {
                          "type" : "string",
                          "description" : "Virtual Machine size. Direct mapping to flavors",
                          "enum" : [ "small", "medium", "large" ]
                        },
                        "key" : {
                          "type" : "string",
                          "description" : "SSH key name"
                        },
                        "volume_size" : {
                          "type" : "integer",
                          "description" : "Virtual disk size [GB]"
                        },
                        "networks" : {
                          "type" : "array",
                          "uniqueItems" : true,
                          "items" : {
                            "type" : "string",
                            "description" : "Virtual network for virtual machine"
                          }
                        },
                        "security_groups" : {
                          "type" : "array",
                          "uniqueItems" : true,
                          "items" : {
                            "type" : "string",
                            "description" : "Firewall rule for network traffic passthroug"
                          }
                        }
                      }
                    },
                    "depends_on" : {
                      "type" : "string",
                      "description" : "In Multi-Component application this fields points to another component on which 'this' components depends on."
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created blueprint",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "description", "version", "components" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Unique identifier"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Blueprint name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Description of the blueprint."
                },
                "version" : {
                  "type" : "string",
                  "description" : "Version of the blueprint"
                },
                "modified" : {
                  "type" : "string",
                  "description" : "Last modification date",
                  "readOnly" : true
                },
                "components" : {
                  "type" : "array",
                  "description" : "Blueprints/templates of each component",
                  "minItems" : 1,
                  "uniqueItems" : true,
                  "items" : {
                    "type" : "object",
                    "required" : [ "name", "module", "port", "installation_time", "size", "version" ],
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Template Name"
                      },
                      "module" : {
                        "type" : "string",
                        "description" : "Salt module to execute."
                      },
                      "port" : {
                        "type" : "integer",
                        "description" : "Component is exposed via this port",
                        "minimum" : 1,
                        "maximum" : 65535
                      },
                      "installation_time" : {
                        "type" : "integer",
                        "description" : "Estimated installation time of a component [seconds]",
                        "minimum" : 1
                      },
                      "size" : {
                        "type" : "integer",
                        "description" : "Number of instances to deploy. Each on separate virtual machine."
                      },
                      "version" : {
                        "type" : "string",
                        "description" : "Component version to deploy. e.g. 2.1-34"
                      },
                      "instance_aws" : {
                        "type" : "object",
                        "required" : [ "image", "size", "key", "volume_size" ],
                        "properties" : {
                          "image" : {
                            "type" : "string",
                            "description" : "Name of image with Operating System"
                          },
                          "size" : {
                            "type" : "string",
                            "description" : "Virtual Machine size. Direct mapping to flavors",
                            "enum" : [ "small", "medium", "large" ]
                          },
                          "key" : {
                            "type" : "string",
                            "description" : "SSH key name"
                          },
                          "volume_size" : {
                            "type" : "integer",
                            "description" : "Virtual disk size [GB]"
                          },
                          "networks" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Virtual network for virtual machine"
                            }
                          },
                          "security_groups" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Firewall rule for network traffic passthroug"
                            }
                          }
                        }
                      },
                      "instance_openstack" : {
                        "type" : "object",
                        "required" : [ "image", "size", "key", "volume_size" ],
                        "properties" : {
                          "image" : {
                            "type" : "string",
                            "description" : "Name of image with Operating System"
                          },
                          "size" : {
                            "type" : "string",
                            "description" : "Virtual Machine size. Direct mapping to flavors",
                            "enum" : [ "small", "medium", "large" ]
                          },
                          "key" : {
                            "type" : "string",
                            "description" : "SSH key name"
                          },
                          "volume_size" : {
                            "type" : "integer",
                            "description" : "Virtual disk size [GB]"
                          },
                          "networks" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Virtual network for virtual machine"
                            }
                          },
                          "security_groups" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Firewall rule for network traffic passthroug"
                            }
                          }
                        }
                      },
                      "instance_k5" : {
                        "type" : "object",
                        "required" : [ "image", "size", "key", "volume_size" ],
                        "properties" : {
                          "image" : {
                            "type" : "string",
                            "description" : "Name of image with Operating System"
                          },
                          "size" : {
                            "type" : "string",
                            "description" : "Virtual Machine size. Direct mapping to flavors",
                            "enum" : [ "small", "medium", "large" ]
                          },
                          "key" : {
                            "type" : "string",
                            "description" : "SSH key name"
                          },
                          "volume_size" : {
                            "type" : "integer",
                            "description" : "Virtual disk size [GB]"
                          },
                          "networks" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Virtual network for virtual machine"
                            }
                          },
                          "security_groups" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Firewall rule for network traffic passthroug"
                            }
                          }
                        }
                      },
                      "depends_on" : {
                        "type" : "string",
                        "description" : "In Multi-Component application this fields points to another component on which 'this' components depends on."
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request parameters/data",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Poor Implementation",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "application" ]
      }
    },
    "/api/v1/application/blueprints/{id}" : {
      "get" : {
        "description" : "Retrieve blueprint",
        "operationId" : "get_blueprint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "type" : "string",
          "required" : true,
          "x-example" : "58f40fdee76083000e0ad40f",
          "description" : "Blueprint identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "Blueprint",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "description", "version", "components" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Unique identifier"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Blueprint name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Description of the blueprint."
                },
                "version" : {
                  "type" : "string",
                  "description" : "Version of the blueprint"
                },
                "modified" : {
                  "type" : "string",
                  "description" : "Last modification date",
                  "readOnly" : true
                },
                "components" : {
                  "type" : "array",
                  "description" : "Blueprints/templates of each component",
                  "minItems" : 1,
                  "uniqueItems" : true,
                  "items" : {
                    "type" : "object",
                    "required" : [ "name", "module", "port", "installation_time", "size", "version" ],
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Template Name"
                      },
                      "module" : {
                        "type" : "string",
                        "description" : "Salt module to execute."
                      },
                      "port" : {
                        "type" : "integer",
                        "description" : "Component is exposed via this port",
                        "minimum" : 1,
                        "maximum" : 65535
                      },
                      "installation_time" : {
                        "type" : "integer",
                        "description" : "Estimated installation time of a component [seconds]",
                        "minimum" : 1
                      },
                      "size" : {
                        "type" : "integer",
                        "description" : "Number of instances to deploy. Each on separate virtual machine."
                      },
                      "version" : {
                        "type" : "string",
                        "description" : "Component version to deploy. e.g. 2.1-34"
                      },
                      "instance_aws" : {
                        "type" : "object",
                        "required" : [ "image", "size", "key", "volume_size" ],
                        "properties" : {
                          "image" : {
                            "type" : "string",
                            "description" : "Name of image with Operating System"
                          },
                          "size" : {
                            "type" : "string",
                            "description" : "Virtual Machine size. Direct mapping to flavors",
                            "enum" : [ "small", "medium", "large" ]
                          },
                          "key" : {
                            "type" : "string",
                            "description" : "SSH key name"
                          },
                          "volume_size" : {
                            "type" : "integer",
                            "description" : "Virtual disk size [GB]"
                          },
                          "networks" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Virtual network for virtual machine"
                            }
                          },
                          "security_groups" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Firewall rule for network traffic passthroug"
                            }
                          }
                        }
                      },
                      "instance_openstack" : {
                        "type" : "object",
                        "required" : [ "image", "size", "key", "volume_size" ],
                        "properties" : {
                          "image" : {
                            "type" : "string",
                            "description" : "Name of image with Operating System"
                          },
                          "size" : {
                            "type" : "string",
                            "description" : "Virtual Machine size. Direct mapping to flavors",
                            "enum" : [ "small", "medium", "large" ]
                          },
                          "key" : {
                            "type" : "string",
                            "description" : "SSH key name"
                          },
                          "volume_size" : {
                            "type" : "integer",
                            "description" : "Virtual disk size [GB]"
                          },
                          "networks" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Virtual network for virtual machine"
                            }
                          },
                          "security_groups" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Firewall rule for network traffic passthroug"
                            }
                          }
                        }
                      },
                      "instance_k5" : {
                        "type" : "object",
                        "required" : [ "image", "size", "key", "volume_size" ],
                        "properties" : {
                          "image" : {
                            "type" : "string",
                            "description" : "Name of image with Operating System"
                          },
                          "size" : {
                            "type" : "string",
                            "description" : "Virtual Machine size. Direct mapping to flavors",
                            "enum" : [ "small", "medium", "large" ]
                          },
                          "key" : {
                            "type" : "string",
                            "description" : "SSH key name"
                          },
                          "volume_size" : {
                            "type" : "integer",
                            "description" : "Virtual disk size [GB]"
                          },
                          "networks" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Virtual network for virtual machine"
                            }
                          },
                          "security_groups" : {
                            "type" : "array",
                            "uniqueItems" : true,
                            "items" : {
                              "type" : "string",
                              "description" : "Firewall rule for network traffic passthroug"
                            }
                          }
                        }
                      },
                      "depends_on" : {
                        "type" : "string",
                        "description" : "In Multi-Component application this fields points to another component on which 'this' components depends on."
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Blueprint not found"
          }
        },
        "tags" : [ "application" ]
      },
      "delete" : {
        "description" : "Delete blueprint",
        "operationId" : "delete_blueprint",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "type" : "string",
          "required" : true,
          "x-example" : "58f40fdee76083000e0ad40f",
          "description" : "Blueprint identifier"
        } ],
        "responses" : {
          "204" : {
            "description" : "Blueprint"
          },
          "404" : {
            "description" : "Blueprint not found"
          }
        },
        "tags" : [ "application" ]
      }
    },
    "/api/v1/application/applications" : {
      "get" : {
        "description" : "Retrieve applications",
        "operationId" : "get_applications",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "description" : "Return applications only created using given subscription"
        }, {
          "name" : "vmId",
          "in" : "query",
          "type" : "string",
          "description" : "Return applications which are atteched to this vm"
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all applications",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "required" : [ "name" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Application identifier"
                  },
                  "state" : {
                    "type" : "string",
                    "description" : "Component deployment state",
                    "enum" : [ "queued", "building", "deploying", "active", "error", "deleting" ]
                  },
                  "details" : {
                    "type" : "string",
                    "description" : "Used when state is error. Error details"
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "Application creation date",
                    "readOnly" : true
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name"
                  },
                  "subscriptionId" : {
                    "type" : "string",
                    "x-nullable" : true,
                    "description" : "Subscription id used to created and manage application"
                  },
                  "source" : {
                    "type" : "string",
                    "description" : "Type of application. Default standalone, addon when deployed on existing vm",
                    "enum" : [ "standalone", "addon" ]
                  },
                  "platformId" : {
                    "type" : "string",
                    "x-nullable" : true,
                    "description" : "Platform ID. Used to detect to which service connect to. OpenStack/AWS/K5"
                  },
                  "blueprintId" : {
                    "type" : "string",
                    "description" : "Id of the Blueprint used to create application"
                  },
                  "blueprintName" : {
                    "type" : "string",
                    "x-nullable" : true,
                    "description" : "Name of the Blueprint used to create application"
                  },
                  "components" : {
                    "type" : "array",
                    "description" : "Components of this application. e.g. Apache, MongoDB",
                    "minItems" : 0,
                    "uniqueItems" : true,
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "guid" : {
                          "type" : "string",
                          "description" : "Component identifier"
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Name"
                        },
                        "state" : {
                          "type" : "string",
                          "description" : "Component deployment state",
                          "enum" : [ "queued", "deploying", "active", "error" ]
                        },
                        "details" : {
                          "type" : "string",
                          "description" : "Used when state is error. Error details"
                        },
                        "version" : {
                          "type" : "string",
                          "description" : "Component version to deploy. e.g. 2.1-34"
                        },
                        "size" : {
                          "type" : "integer",
                          "description" : "Number of instances to deploy. Each on separate virtual machine."
                        },
                        "module" : {
                          "type" : "string",
                          "description" : "Salt module to execute."
                        },
                        "vms" : {
                          "type" : "array",
                          "description" : "Virtual machines on which this component is deployed",
                          "minItems" : 0,
                          "uniqueItems" : true,
                          "items" : {
                            "type" : "object",
                            "required" : [ "uid", "name" ],
                            "properties" : {
                              "uid" : {
                                "type" : "string",
                                "description" : "Virtual machine identifier"
                              },
                              "name" : {
                                "type" : "string",
                                "description" : "Virtual machine name [EOS specific]"
                              },
                              "details" : {
                                "type" : "string",
                                "description" : "Used when state is error. Error details"
                              },
                              "state" : {
                                "type" : "string",
                                "description" : "Virtual machine state.",
                                "enum" : [ "created", "deploying", "active", "error" ]
                              }
                            }
                          }
                        },
                        "depends_on" : {
                          "type" : "string",
                          "description" : "In Multi-Component application this fields points to another component on which 'this' components depends on."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags" : [ "application" ]
      },
      "post" : {
        "description" : "Create Application. When 'vms' list is given application's components will be deployed on selected vms.  Currenlty only single component Blueprint is supported for vms parameter. Addon application can be created only on standalone virtual machine (not created by application).",
        "operationId" : "create_application",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "application",
          "in" : "body",
          "description" : "Application to create",
          "schema" : {
            "type" : "object",
            "required" : [ "name", "subscriptionId", "blueprintId" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Application name"
              },
              "subscriptionId" : {
                "type" : "string",
                "description" : "Subscription identifier"
              },
              "blueprintId" : {
                "type" : "string",
                "description" : "Blueprint identifier to use during creating application"
              },
              "projectId" : {
                "type" : "string",
                "description" : "Project identifier",
                "x-nullable" : true
              },
              "vmId" : {
                "type" : "string",
                "description" : "VM identifier",
                "x-nullable" : true
              },
              "tags" : {
                "type" : "array",
                "description" : "Tags (name and value) assigned to a VM",
                "items" : {
                  "type" : "object",
                  "required" : [ "name", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name (key) of the tag"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value of the tag"
                    }
                  }
                },
                "x-nullable" : true
              },
              "availabilityZone" : {
                "type" : "string",
                "x-nullable" : true
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Created application. Application will not contain 'components' list. It will be populated during application deployment which is done in background.",
            "schema" : {
              "type" : "object",
              "required" : [ "name" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Application identifier"
                },
                "state" : {
                  "type" : "string",
                  "description" : "Component deployment state",
                  "enum" : [ "queued", "building", "deploying", "active", "error", "deleting" ]
                },
                "details" : {
                  "type" : "string",
                  "description" : "Used when state is error. Error details"
                },
                "created" : {
                  "type" : "string",
                  "description" : "Application creation date",
                  "readOnly" : true
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name"
                },
                "subscriptionId" : {
                  "type" : "string",
                  "x-nullable" : true,
                  "description" : "Subscription id used to created and manage application"
                },
                "source" : {
                  "type" : "string",
                  "description" : "Type of application. Default standalone, addon when deployed on existing vm",
                  "enum" : [ "standalone", "addon" ]
                },
                "platformId" : {
                  "type" : "string",
                  "x-nullable" : true,
                  "description" : "Platform ID. Used to detect to which service connect to. OpenStack/AWS/K5"
                },
                "blueprintId" : {
                  "type" : "string",
                  "description" : "Id of the Blueprint used to create application"
                },
                "blueprintName" : {
                  "type" : "string",
                  "x-nullable" : true,
                  "description" : "Name of the Blueprint used to create application"
                },
                "components" : {
                  "type" : "array",
                  "description" : "Components of this application. e.g. Apache, MongoDB",
                  "minItems" : 0,
                  "uniqueItems" : true,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "guid" : {
                        "type" : "string",
                        "description" : "Component identifier"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Name"
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "Component deployment state",
                        "enum" : [ "queued", "deploying", "active", "error" ]
                      },
                      "details" : {
                        "type" : "string",
                        "description" : "Used when state is error. Error details"
                      },
                      "version" : {
                        "type" : "string",
                        "description" : "Component version to deploy. e.g. 2.1-34"
                      },
                      "size" : {
                        "type" : "integer",
                        "description" : "Number of instances to deploy. Each on separate virtual machine."
                      },
                      "module" : {
                        "type" : "string",
                        "description" : "Salt module to execute."
                      },
                      "vms" : {
                        "type" : "array",
                        "description" : "Virtual machines on which this component is deployed",
                        "minItems" : 0,
                        "uniqueItems" : true,
                        "items" : {
                          "type" : "object",
                          "required" : [ "uid", "name" ],
                          "properties" : {
                            "uid" : {
                              "type" : "string",
                              "description" : "Virtual machine identifier"
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Virtual machine name [EOS specific]"
                            },
                            "details" : {
                              "type" : "string",
                              "description" : "Used when state is error. Error details"
                            },
                            "state" : {
                              "type" : "string",
                              "description" : "Virtual machine state.",
                              "enum" : [ "created", "deploying", "active", "error" ]
                            }
                          }
                        }
                      },
                      "depends_on" : {
                        "type" : "string",
                        "description" : "In Multi-Component application this fields points to another component on which 'this' components depends on."
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Wrong parameters for application creation"
          }
        },
        "tags" : [ "application" ]
      }
    },
    "/api/v1/application/applications/{id}" : {
      "get" : {
        "description" : "Retrieve application",
        "operationId" : "get_application",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "type" : "string",
          "required" : true,
          "x-example" : "58f40fdee76083000e0ad40f",
          "description" : "Application identifier"
        } ],
        "responses" : {
          "200" : {
            "description" : "Application",
            "schema" : {
              "type" : "object",
              "required" : [ "name" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Application identifier"
                },
                "state" : {
                  "type" : "string",
                  "description" : "Component deployment state",
                  "enum" : [ "queued", "building", "deploying", "active", "error", "deleting" ]
                },
                "details" : {
                  "type" : "string",
                  "description" : "Used when state is error. Error details"
                },
                "created" : {
                  "type" : "string",
                  "description" : "Application creation date",
                  "readOnly" : true
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name"
                },
                "subscriptionId" : {
                  "type" : "string",
                  "x-nullable" : true,
                  "description" : "Subscription id used to created and manage application"
                },
                "source" : {
                  "type" : "string",
                  "description" : "Type of application. Default standalone, addon when deployed on existing vm",
                  "enum" : [ "standalone", "addon" ]
                },
                "platformId" : {
                  "type" : "string",
                  "x-nullable" : true,
                  "description" : "Platform ID. Used to detect to which service connect to. OpenStack/AWS/K5"
                },
                "blueprintId" : {
                  "type" : "string",
                  "description" : "Id of the Blueprint used to create application"
                },
                "blueprintName" : {
                  "type" : "string",
                  "x-nullable" : true,
                  "description" : "Name of the Blueprint used to create application"
                },
                "components" : {
                  "type" : "array",
                  "description" : "Components of this application. e.g. Apache, MongoDB",
                  "minItems" : 0,
                  "uniqueItems" : true,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "guid" : {
                        "type" : "string",
                        "description" : "Component identifier"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Name"
                      },
                      "state" : {
                        "type" : "string",
                        "description" : "Component deployment state",
                        "enum" : [ "queued", "deploying", "active", "error" ]
                      },
                      "details" : {
                        "type" : "string",
                        "description" : "Used when state is error. Error details"
                      },
                      "version" : {
                        "type" : "string",
                        "description" : "Component version to deploy. e.g. 2.1-34"
                      },
                      "size" : {
                        "type" : "integer",
                        "description" : "Number of instances to deploy. Each on separate virtual machine."
                      },
                      "module" : {
                        "type" : "string",
                        "description" : "Salt module to execute."
                      },
                      "vms" : {
                        "type" : "array",
                        "description" : "Virtual machines on which this component is deployed",
                        "minItems" : 0,
                        "uniqueItems" : true,
                        "items" : {
                          "type" : "object",
                          "required" : [ "uid", "name" ],
                          "properties" : {
                            "uid" : {
                              "type" : "string",
                              "description" : "Virtual machine identifier"
                            },
                            "name" : {
                              "type" : "string",
                              "description" : "Virtual machine name [EOS specific]"
                            },
                            "details" : {
                              "type" : "string",
                              "description" : "Used when state is error. Error details"
                            },
                            "state" : {
                              "type" : "string",
                              "description" : "Virtual machine state.",
                              "enum" : [ "created", "deploying", "active", "error" ]
                            }
                          }
                        }
                      },
                      "depends_on" : {
                        "type" : "string",
                        "description" : "In Multi-Component application this fields points to another component on which 'this' components depends on."
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Blueprint not found"
          }
        },
        "tags" : [ "application" ]
      },
      "delete" : {
        "description" : "Delete application",
        "operationId" : "delete_application",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "type" : "string",
          "required" : true,
          "x-example" : "58f40fdee76083000e0ad40f",
          "description" : "Application identifier"
        }, {
          "name" : "vms",
          "in" : "query",
          "type" : "boolean",
          "required" : false,
          "x-example" : "vms=true",
          "description" : "Flag to delete (True) or just unmanage virtual machines (False)"
        } ],
        "responses" : {
          "204" : {
            "description" : "Application"
          },
          "400" : {
            "description" : "Application building is not yet finished"
          },
          "404" : {
            "description" : "Application not found"
          }
        },
        "tags" : [ "application" ]
      }
    },
    "/api/v1/application/vms/{id}" : {
      "delete" : {
        "description" : "Delete vm from application's components. It will only remove VM from database. It will not remove virtual machines from platforms.",
        "operationId" : "delete_vm_from_apps",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "type" : "string",
          "required" : true,
          "description" : "Virtual Machine unique identifier"
        } ],
        "responses" : {
          "204" : {
            "description" : "Removed"
          },
          "default" : {
            "description" : "Poor Implementation",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "application" ]
      }
    },
    "/api/v1/auth/login" : {
      "delete" : {
        "responses" : {
          "200" : {
            "description" : "Token deleted successfully"
          }
        },
        "tags" : [ "auth" ],
        "operationId" : "delete_auth_login"
      },
      "post" : {
        "parameters" : [ {
          "in" : "body",
          "name" : "credentials",
          "required" : true,
          "schema" : {
            "properties" : {
              "password" : {
                "type" : "string"
              },
              "username" : {
                "type" : "string"
              }
            },
            "required" : [ "username", "password" ],
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Token created successfully",
            "schema" : {
              "type" : "string"
            }
          },
          "403" : {
            "description" : "Incorrect credentials"
          }
        },
        "tags" : [ "auth" ],
        "operationId" : "post_auth_login"
      }
    },
    "/api/v1/configuration/platformAccess" : {
      "get" : {
        "summary" : "Get platform access configutation",
        "description" : "Get platform access configutation",
        "operationId" : "get_all_platform_access",
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of configurations for platforms",
              "items" : {
                "type" : "object",
                "properties" : {
                  "platformId" : {
                    "type" : "string",
                    "description" : "platform id"
                  },
                  "value" : {
                    "type" : "boolean",
                    "description" : "Specifies if platform is enabled"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "configuration" ]
      },
      "put" : {
        "summary" : "Set platform access configutation",
        "description" : "Set platform access configutation",
        "operationId" : "edit_platform_access",
        "parameters" : [ {
          "name" : "configuration",
          "in" : "body",
          "required" : true,
          "description" : "Configuration to set",
          "schema" : {
            "type" : "object",
            "description" : "Configuration to set",
            "properties" : {
              "configuration" : {
                "type" : "array",
                "description" : "List of configurations for platforms",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "platformId" : {
                      "type" : "string",
                      "description" : "platform id"
                    },
                    "value" : {
                      "type" : "boolean",
                      "description" : "Specifies if platform is enabled"
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Empty configuration given"
          }
        },
        "tags" : [ "configuration" ]
      }
    },
    "/api/v1/configuration/platformAccess/{platform_id}" : {
      "get" : {
        "summary" : "Get platform access value",
        "description" : "Get platform access value",
        "operationId" : "get_platform_access",
        "parameters" : [ {
          "name" : "platform_id",
          "in" : "path",
          "required" : true,
          "description" : "Platform id",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "boolean",
              "description" : "True or False if platform is enabled or not"
            }
          }
        },
        "tags" : [ "configuration" ]
      }
    },
    "/api/v1/configuration/mailProviders" : {
      "get" : {
        "summary" : "Get mail providers",
        "description" : "Get all mail providers",
        "operationId" : "get_mail_providers",
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of mail providers",
              "items" : {
                "type" : "object",
                "description" : "Default mail provider",
                "required" : [ "name", "service" ],
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Name for a provider instance"
                  },
                  "service" : {
                    "type" : "string",
                    "description" : "\"aws_ses\" or \"k5_smtp\""
                  },
                  "contractId" : {
                    "type" : "string",
                    "description" : "Contract id credentaials for K5 SMTP service"
                  },
                  "username" : {
                    "type" : "string",
                    "description" : "Username credentaials for K5 SMTP service"
                  },
                  "password" : {
                    "type" : "string",
                    "description" : "Password credentaials for K5 SMTP service"
                  },
                  "accessKey" : {
                    "type" : "string",
                    "description" : "Access key credentaials for AWS SES service"
                  },
                  "secretKey" : {
                    "type" : "string",
                    "description" : "Secret access key credentaials for AWS SES service"
                  },
                  "regionId" : {
                    "type" : "string",
                    "description" : "Region for AWS SES service (optional parameter)"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "configuration" ]
      },
      "post" : {
        "summary" : "Add provider data",
        "description" : "Add new provider data",
        "operationId" : "add_mail_provider",
        "parameters" : [ {
          "name" : "provider_data",
          "in" : "body",
          "required" : true,
          "description" : "Provider data",
          "schema" : {
            "type" : "object",
            "description" : "Default mail provider",
            "required" : [ "name", "service" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name for a provider instance"
              },
              "service" : {
                "type" : "string",
                "description" : "\"aws_ses\" or \"k5_smtp\""
              },
              "contractId" : {
                "type" : "string",
                "description" : "Contract id credentaials for K5 SMTP service"
              },
              "username" : {
                "type" : "string",
                "description" : "Username credentaials for K5 SMTP service"
              },
              "password" : {
                "type" : "string",
                "description" : "Password credentaials for K5 SMTP service"
              },
              "accessKey" : {
                "type" : "string",
                "description" : "Access key credentaials for AWS SES service"
              },
              "secretKey" : {
                "type" : "string",
                "description" : "Secret access key credentaials for AWS SES service"
              },
              "regionId" : {
                "type" : "string",
                "description" : "Region for AWS SES service (optional parameter)"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Default mail provider",
              "required" : [ "name", "service" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Name for a provider instance"
                },
                "service" : {
                  "type" : "string",
                  "description" : "\"aws_ses\" or \"k5_smtp\""
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Contract id credentaials for K5 SMTP service"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Username credentaials for K5 SMTP service"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password credentaials for K5 SMTP service"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key credentaials for AWS SES service"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key credentaials for AWS SES service"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region for AWS SES service (optional parameter)"
                }
              }
            }
          },
          "400" : {
            "description" : "Wrong provider service or provider name already exists"
          }
        },
        "tags" : [ "configuration" ]
      }
    },
    "/api/v1/configuration/mailProviders/{provider_id}" : {
      "get" : {
        "summary" : "Get provider data",
        "description" : "Get provider data",
        "operationId" : "get_mail_provider",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Provider id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Default mail provider",
              "required" : [ "name", "service" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Name for a provider instance"
                },
                "service" : {
                  "type" : "string",
                  "description" : "\"aws_ses\" or \"k5_smtp\""
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Contract id credentaials for K5 SMTP service"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Username credentaials for K5 SMTP service"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password credentaials for K5 SMTP service"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key credentaials for AWS SES service"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key credentaials for AWS SES service"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region for AWS SES service (optional parameter)"
                }
              }
            }
          },
          "404" : {
            "description" : "Provider id does not exist"
          }
        },
        "tags" : [ "configuration" ]
      },
      "put" : {
        "summary" : "Edit provider",
        "description" : "Edit provider",
        "operationId" : "edit_mail_provider",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Provider id"
        }, {
          "name" : "provider_data",
          "in" : "body",
          "required" : true,
          "description" : "Provider data",
          "schema" : {
            "type" : "object",
            "description" : "Default mail provider",
            "required" : [ "name", "service" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name for a provider instance"
              },
              "service" : {
                "type" : "string",
                "description" : "\"aws_ses\" or \"k5_smtp\""
              },
              "contractId" : {
                "type" : "string",
                "description" : "Contract id credentaials for K5 SMTP service"
              },
              "username" : {
                "type" : "string",
                "description" : "Username credentaials for K5 SMTP service"
              },
              "password" : {
                "type" : "string",
                "description" : "Password credentaials for K5 SMTP service"
              },
              "accessKey" : {
                "type" : "string",
                "description" : "Access key credentaials for AWS SES service"
              },
              "secretKey" : {
                "type" : "string",
                "description" : "Secret access key credentaials for AWS SES service"
              },
              "regionId" : {
                "type" : "string",
                "description" : "Region for AWS SES service (optional parameter)"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Default mail provider",
              "required" : [ "name", "service" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Name for a provider instance"
                },
                "service" : {
                  "type" : "string",
                  "description" : "\"aws_ses\" or \"k5_smtp\""
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Contract id credentaials for K5 SMTP service"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Username credentaials for K5 SMTP service"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password credentaials for K5 SMTP service"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key credentaials for AWS SES service"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key credentaials for AWS SES service"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region for AWS SES service (optional parameter)"
                }
              }
            }
          },
          "404" : {
            "description" : "Provider id does not exist"
          }
        },
        "tags" : [ "configuration" ]
      },
      "delete" : {
        "summary" : "Delete provider",
        "description" : "Delete provider",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Provider id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Provider is currently set as default and cannot be deleted"
          },
          "404" : {
            "description" : "Provider id does not exist"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "delete_configuration_mailProvider"
      }
    },
    "/api/v1/configuration/mailProviders/default" : {
      "get" : {
        "summary" : "Get default mail provider",
        "description" : "Get data for default mail provider",
        "operationId" : "set_default_mail_provider",
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Default mail provider",
              "required" : [ "name", "service" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Name for a provider instance"
                },
                "service" : {
                  "type" : "string",
                  "description" : "\"aws_ses\" or \"k5_smtp\""
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Contract id credentaials for K5 SMTP service"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Username credentaials for K5 SMTP service"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password credentaials for K5 SMTP service"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key credentaials for AWS SES service"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key credentaials for AWS SES service"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region for AWS SES service (optional parameter)"
                }
              }
            }
          },
          "404" : {
            "description" : "No default mail provider set"
          },
          "500" : {
            "description" : "More than one default provider set"
          }
        },
        "tags" : [ "configuration" ]
      }
    },
    "/api/v1/configuration/mailProviders/default/{provider_id}" : {
      "put" : {
        "summary" : "Set default mail provider",
        "description" : "Set default mail provider",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Provider id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Default mail provider",
              "required" : [ "name", "service" ],
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Name for a provider instance"
                },
                "service" : {
                  "type" : "string",
                  "description" : "\"aws_ses\" or \"k5_smtp\""
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Contract id credentaials for K5 SMTP service"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Username credentaials for K5 SMTP service"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password credentaials for K5 SMTP service"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key credentaials for AWS SES service"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key credentaials for AWS SES service"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region for AWS SES service (optional parameter)"
                }
              }
            }
          },
          "404" : {
            "description" : "Provider id does not exist"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "put_configuration_mailProviders_default"
      },
      "delete" : {
        "summary" : "Unset default mail provider",
        "description" : "Unset mail provider as default",
        "parameters" : [ {
          "name" : "provider_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Provider id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Provider id does not exist"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "delete_configuration_mailProviders_default"
      }
    },
    "/api/v1/configuration/managementToolTypes" : {
      "get" : {
        "summary" : "Get management tool types",
        "description" : "Get management tool types",
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string",
                    "x-deprecated" : true
                  },
                  "value" : {
                    "type" : "string",
                    "x-deprecated" : true
                  }
                }
              }
            }
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "get_configuration_managementToolTypes"
      }
    },
    "/api/v1/configuration/managementTools" : {
      "get" : {
        "summary" : "Get all mangement tools",
        "description" : "Get all management tools",
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "type" : {
                    "type" : "string",
                    "x-deprecated" : true
                  },
                  "toolTypeId" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "endpointUrl" : {
                    "type" : "string"
                  },
                  "username" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "get_configuration_managementTools"
      },
      "post" : {
        "summary" : "Create new management tool",
        "description" : "Create new management tool",
        "parameters" : [ {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "endpointUrl" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "type" : {
                "type" : "string",
                "x-deprecated" : true
              },
              "toolTypeId" : {
                "type" : "string"
              },
              "endpointUrl" : {
                "type" : "string"
              },
              "username" : {
                "type" : "string"
              },
              "password" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "string",
                  "x-deprecated" : true
                },
                "toolTypeId" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "endpointUrl" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid management tool type or url format or error saving data in database"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "post_configuration_managementTools"
      }
    },
    "/api/v1/configuration/managementTools/{tool_id}" : {
      "get" : {
        "summary" : "Get specified management tool",
        "description" : "Get specified management tool",
        "parameters" : [ {
          "name" : "tool_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Management tool id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "string",
                  "x-deprecated" : true
                },
                "toolTypeId" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "endpointUrl" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Wrong tool id format"
          },
          "404" : {
            "description" : "Unknown tool id"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "get_configuration_managementTool"
      },
      "put" : {
        "summary" : "Update specified management tool",
        "description" : "Update specified management tool",
        "parameters" : [ {
          "name" : "tool_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Management tool id"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "endpointUrl" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "endpointUrl" : {
                "type" : "string"
              },
              "username" : {
                "type" : "string"
              },
              "password" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "type" : {
                  "type" : "string",
                  "x-deprecated" : true
                },
                "toolTypeId" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "endpointUrl" : {
                  "type" : "string"
                },
                "username" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Wrong tool id or url format"
          },
          "404" : {
            "description" : "Unknown tool id"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "put_configuration_managementTool"
      }
    },
    "/api/v1/configuration/logo" : {
      "post" : {
        "summary" : "Send logo image to be stored",
        "consumes" : [ "multipart/form-data" ],
        "parameters" : [ {
          "name" : "logo",
          "in" : "formData",
          "description" : "Uploaded logo image",
          "required" : true,
          "type" : "file"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid request headers, unsupported image extension, error saving image."
          },
          "411" : {
            "description" : "Missing request header Content-Length"
          },
          "413" : {
            "description" : "Image is to large. Maximum image size is 0.5MB."
          },
          "415" : {
            "description" : "Unsupported Media Type"
          },
          "500" : {
            "description" : "Error while saving logo image"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "post_configuration_logo"
      },
      "get" : {
        "summary" : "Get logo image",
        "produces" : [ "image/png", "image/jpg", "image/jpeg", "image/svg+xml" ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "There is no image stored yet"
          }
        },
        "tags" : [ "configuration" ],
        "operationId" : "get_configuration_logo"
      }
    },
    "/api/v1/openstack/storage/volumes" : {
      "get" : {
        "summary" : "Get volumes",
        "description" : "Get volumes",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "flavors" : {
                  "type" : "array",
                  "description" : "List of volumes",
                  "items" : {
                    "type" : "object",
                    "description" : "Volume",
                    "properties" : {
                      "createdFromImage" : {
                        "type" : "object",
                        "description" : "Image id and name",
                        "properties" : {
                          "image_id" : {
                            "type" : "string"
                          },
                          "image_name" : {
                            "type" : "string"
                          }
                        }
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Volume name"
                      },
                      "id" : {
                        "type" : "string",
                        "description" : "Volume id"
                      },
                      "createdAt" : {
                        "type" : "string",
                        "description" : "Date of volume creation"
                      },
                      "status" : {
                        "type" : "string",
                        "description" : "Volume status, e.g. avilable, error"
                      },
                      "attachments" : {
                        "type" : "array",
                        "description" : "List of attachements",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "sizeInGb" : {
                        "type" : "integer",
                        "description" : "Volume size in GB"
                      },
                      "description" : {
                        "type" : "string",
                        "description" : "Volume description"
                      },
                      "encrypted" : {
                        "type" : "boolean",
                        "description" : "Specifies if volume is encrypted"
                      },
                      "availabilityZone" : {
                        "type" : "string",
                        "description" : "Availability zone"
                      },
                      "bootable" : {
                        "type" : "boolean",
                        "description" : "Specifies if volume is bootable"
                      },
                      "multiattach" : {
                        "type" : "boolean",
                        "description" : "Specifies if volume can be attached to multiple VMs"
                      },
                      "attached" : {
                        "type" : "boolean",
                        "description" : "Specifies if volume is attached to a VM"
                      }
                    }
                  }
                },
                "errors" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subscriptionId" : {
                        "type" : "string"
                      },
                      "message" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "storage", "openstack" ],
        "operationId" : "get_openstack_storage_volumes"
      },
      "post" : {
        "summary" : "Create volume",
        "description" : "Create new volume",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "volume",
          "in" : "body",
          "required" : true,
          "description" : "Volume creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "volumeSize" ],
            "properties" : {
              "volumeSize" : {
                "type" : "integer",
                "description" : "Disk size in GB"
              },
              "name" : {
                "type" : "string",
                "description" : "Volume name"
              },
              "description" : {
                "type" : "string",
                "description" : "Volume description"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Volume",
              "properties" : {
                "createdFromImage" : {
                  "type" : "object",
                  "description" : "Image id and name",
                  "properties" : {
                    "image_id" : {
                      "type" : "string"
                    },
                    "image_name" : {
                      "type" : "string"
                    }
                  }
                },
                "name" : {
                  "type" : "string",
                  "description" : "Volume name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "Volume id"
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "Date of volume creation"
                },
                "status" : {
                  "type" : "string",
                  "description" : "Volume status, e.g. avilable, error"
                },
                "attachments" : {
                  "type" : "array",
                  "description" : "List of attachements",
                  "items" : {
                    "type" : "string"
                  }
                },
                "sizeInGb" : {
                  "type" : "integer",
                  "description" : "Volume size in GB"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Volume description"
                },
                "encrypted" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume is encrypted"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "bootable" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume is bootable"
                },
                "multiattach" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume can be attached to multiple VMs"
                },
                "attached" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume is attached to a VM"
                }
              }
            }
          },
          "400" : {
            "description" : "Volume size must be > 1"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Creating new volume timed out"
          }
        },
        "tags" : [ "storage", "openstack" ],
        "operationId" : "post_openstack_storage_volumes"
      }
    },
    "/api/v1/openstack/storage/volumes/{volume_id}" : {
      "get" : {
        "summary" : "Get volume by id",
        "description" : "Get volume by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "volume_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Volume id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Volume",
              "properties" : {
                "createdFromImage" : {
                  "type" : "object",
                  "description" : "Image id and name",
                  "properties" : {
                    "image_id" : {
                      "type" : "string"
                    },
                    "image_name" : {
                      "type" : "string"
                    }
                  }
                },
                "name" : {
                  "type" : "string",
                  "description" : "Volume name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "Volume id"
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "Date of volume creation"
                },
                "status" : {
                  "type" : "string",
                  "description" : "Volume status, e.g. avilable, error"
                },
                "attachments" : {
                  "type" : "array",
                  "description" : "List of attachements",
                  "items" : {
                    "type" : "string"
                  }
                },
                "sizeInGb" : {
                  "type" : "integer",
                  "description" : "Volume size in GB"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Volume description"
                },
                "encrypted" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume is encrypted"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "bootable" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume is bootable"
                },
                "multiattach" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume can be attached to multiple VMs"
                },
                "attached" : {
                  "type" : "boolean",
                  "description" : "Specifies if volume is attached to a VM"
                }
              }
            }
          },
          "404" : {
            "description" : "Volume does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching volume information timed out"
          }
        },
        "tags" : [ "storage", "openstack" ],
        "operationId" : "get_openstack_storage_volume"
      },
      "delete" : {
        "summary" : "Delete volume",
        "description" : "Delete volume",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "volume_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Volume id"
        } ],
        "responses" : {
          "202" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string",
                  "default" : "Delete is in progress"
                }
              }
            }
          },
          "409" : {
            "description" : "Disk is not deletable right now. Disk status is printed"
          },
          "500" : {
            "description" : "Invalid status for the volume"
          }
        },
        "tags" : [ "storage", "openstack" ],
        "operationId" : "delete_openstack_storage_volume"
      },
      "put" : {
        "summary" : "Modify volume",
        "description" : "Modify volume",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "volume_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Volume id"
        }, {
          "name" : "edit_disk",
          "in" : "body",
          "description" : "Modyfy volume",
          "schema" : {
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "New volume name"
              },
              "description" : {
                "type" : "string",
                "description" : "New volume description"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Volume does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching volume information timed out"
          }
        },
        "tags" : [ "storage", "openstack" ],
        "operationId" : "put_openstack_storage_volume"
      }
    },
    "/api/v1/openstack/storage/volumes/{volume_id}/attatch" : {
      "put" : {
        "summary" : "Attach volume",
        "description" : "Attach volume",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "volume_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Volume id"
        }, {
          "name" : "vm_data",
          "in" : "body",
          "description" : "VM data",
          "required" : true,
          "schema" : {
            "required" : [ "vmId", "mountpoint" ],
            "properties" : {
              "vmId" : {
                "type" : "string",
                "description" : "VM id"
              },
              "mountpoint" : {
                "type" : "string",
                "description" : "Mount point"
              },
              "accessMode" : {
                "type" : "string",
                "description" : "Access mode (ro/rw)"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Access mode is not rw or ro"
          },
          "404" : {
            "description" : "Volume does not exist"
          },
          "500" : {
            "description" : "Attaching volume to VM failed"
          },
          "504" : {
            "description" : "Fetching volume information or attaching to VM timed out"
          }
        },
        "tags" : [ "storage", "openstack" ],
        "operationId" : "put_openstack_storage_volume_attatch"
      }
    },
    "/api/v1/openstack/storage/volumes/{volume_id}/detach" : {
      "put" : {
        "summary" : "Attach volume",
        "description" : "Attach volume",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "volume_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Volume id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "storage", "openstack" ],
        "operationId" : "put_openstack_storage_volume_detach"
      }
    },
    "/api/v1/aws/network/networks" : {
      "get" : {
        "summary" : "Get list of networks",
        "description" : "List of networks",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of networks",
              "items" : {
                "type" : "object",
                "description" : "Network",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "addressPrefix" : {
                    "type" : "string",
                    "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_networks"
      },
      "post" : {
        "summary" : "Create network",
        "description" : "Create new network",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network",
          "in" : "body",
          "required" : true,
          "description" : "Network creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "addressPrefix" ],
            "properties" : {
              "addressPrefix" : {
                "type" : "string",
                "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
              },
              "networkId" : {
                "type" : "string",
                "description" : "networkId - Network (VPC) ID"
              },
              "enableIPv6" : {
                "type" : "boolean",
                "description" : "enableIPv6 - if set to true, Amazon will allocate IPv6 range for this network. Defaults to false."
              },
              "instanceTenancy" : {
                "type" : "string",
                "description" : "instanceTenancy - defaults to shared. Set to 'dedicated' to create VPC for dedicated hosts."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Network",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "addressPrefix" : {
                  "type" : "string",
                  "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input values"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "post_aws_network_networks"
      }
    },
    "/api/v1/aws/network/networks/{network_id}" : {
      "get" : {
        "summary" : "Get details for a single network",
        "description" : "Get details for a single network",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Network id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Network",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "addressPrefix" : {
                  "type" : "string",
                  "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                },
                "virtualMachines" : {
                  "type" : "array",
                  "description" : "List of VMs",
                  "items" : {
                    "type" : "object",
                    "description" : "Virtual machine",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "VM id"
                      }
                    }
                  }
                },
                "subnets" : {
                  "type" : "array",
                  "description" : "List of Subnets",
                  "items" : {
                    "type" : "object",
                    "description" : "Subnet",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      },
                      "networkId" : {
                        "type" : "string",
                        "description" : "Network id"
                      },
                      "networkName" : {
                        "type" : "string",
                        "description" : "Network name"
                      },
                      "availabilityZone" : {
                        "type" : "string",
                        "description" : "Availability zone"
                      },
                      "addressPrefix" : {
                        "type" : "string",
                        "description" : "Address prefix for subnet"
                      },
                      "availableIpAddressCount" : {
                        "type" : "integer",
                        "description" : "Number of available IP addresses"
                      }
                    }
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "description" : "List of interfaces",
                  "items" : {
                    "type" : "object",
                    "description" : "Interface",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Interface id"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Interface name"
                      },
                      "description" : {
                        "type" : "string",
                        "description" : "Interface description"
                      },
                      "mac" : {
                        "type" : "string",
                        "description" : "Interface mac address"
                      },
                      "macAddress" : {
                        "type" : "string",
                        "description" : "Interface mac address"
                      },
                      "networkId" : {
                        "type" : "string",
                        "description" : "Network id"
                      },
                      "networkName" : {
                        "type" : "string",
                        "description" : "Network name"
                      },
                      "subnetId" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      },
                      "availabilityZone" : {
                        "type" : "string",
                        "description" : "Availability zone"
                      },
                      "attachment" : {
                        "type" : "object",
                        "description" : "Interface attachment",
                        "properties" : {
                          "id" : {
                            "type" : "string",
                            "description" : "Attachment id"
                          },
                          "virtualMachineId" : {
                            "type" : "string",
                            "description" : "Instance id"
                          },
                          "status" : {
                            "type" : "string",
                            "description" : "Status"
                          }
                        }
                      },
                      "subnet" : {
                        "type" : "object",
                        "description" : "Subnet",
                        "properties" : {
                          "id" : {
                            "type" : "string",
                            "description" : "Subnet id"
                          },
                          "networkId" : {
                            "type" : "string",
                            "description" : "Network id"
                          },
                          "networkName" : {
                            "type" : "string",
                            "description" : "Network name"
                          },
                          "availabilityZone" : {
                            "type" : "string",
                            "description" : "Availability zone"
                          },
                          "addressPrefix" : {
                            "type" : "string",
                            "description" : "Address prefix for subnet"
                          },
                          "availableIpAddressCount" : {
                            "type" : "integer",
                            "description" : "Number of available IP addresses"
                          }
                        }
                      },
                      "ipv4Addresses" : {
                        "type" : "array",
                        "description" : "List of Ips",
                        "items" : {
                          "type" : "object",
                          "description" : "Ip address",
                          "properties" : {
                            "id" : {
                              "type" : "string",
                              "description" : "Id"
                            },
                            "ip" : {
                              "type" : "string",
                              "description" : "Ip"
                            },
                            "dnsName" : {
                              "type" : "string",
                              "description" : "Dns name"
                            },
                            "associatedIp" : {
                              "type" : "string",
                              "description" : "Associated ip"
                            },
                            "associationId" : {
                              "type" : "string",
                              "description" : "Association id"
                            },
                            "allocationId" : {
                              "type" : "string",
                              "description" : "Allocation id"
                            },
                            "ownerId" : {
                              "type" : "string",
                              "description" : "Owner id"
                            },
                            "allowedActions" : {
                              "type" : "array",
                              "description" : "List of allowed actions",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "isPublic" : {
                              "type" : "boolean",
                              "description" : "Specifies if ip is public"
                            },
                            "isFloating" : {
                              "type" : "boolean",
                              "description" : "Specifies if ip is floating"
                            },
                            "isDirectlyAssociated" : {
                              "type" : "boolean",
                              "description" : "Specifies if ip is directly associated"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed network id"
          },
          "404" : {
            "description" : "Network does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_network"
      },
      "delete" : {
        "summary" : "Delete network",
        "description" : "Delete network",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Network id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Malformed network id"
          },
          "404" : {
            "description" : "Network does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "delete_aws_network_network"
      }
    },
    "/api/v1/aws/network/networks/{network_id}/subnets" : {
      "get" : {
        "summary" : "Get list of subnets",
        "description" : "List of subnets",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Network id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of Subnets",
              "items" : {
                "type" : "object",
                "description" : "Subnet",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Subnet id"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "networkName" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "availabilityZone" : {
                    "type" : "string",
                    "description" : "Availability zone"
                  },
                  "addressPrefix" : {
                    "type" : "string",
                    "description" : "Address prefix for subnet"
                  },
                  "availableIpAddressCount" : {
                    "type" : "integer",
                    "description" : "Number of available IP addresses"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed network id"
          },
          "404" : {
            "description" : "Network does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_network_subnets"
      },
      "post" : {
        "summary" : "Create subnet",
        "description" : "Create new subnet",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Network id"
        }, {
          "name" : "subnet",
          "in" : "body",
          "required" : true,
          "description" : "Subnet creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "availabilityZone", "addressPrefix" ],
            "properties" : {
              "networkId" : {
                "type" : "string",
                "description" : "Network id"
              },
              "availabilityZone" : {
                "type" : "string",
                "description" : "Availability zone"
              },
              "addressPrefix" : {
                "type" : "string",
                "description" : "Address prefix for subnet"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Subnet",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Subnet id"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "addressPrefix" : {
                  "type" : "string",
                  "description" : "Address prefix for subnet"
                },
                "availableIpAddressCount" : {
                  "type" : "integer",
                  "description" : "Number of available IP addresses"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input values or missing network id"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "post_aws_network_network_subnets"
      }
    },
    "/api/v1/aws/network/networks/{network_id}/interfaces" : {
      "get" : {
        "summary" : "Get list of network interfaces",
        "description" : "Get list of network interfaces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Network id"
        }, {
          "name" : "vmId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for VM id"
        }, {
          "name" : "subnetId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for subnet id"
        }, {
          "name" : "networkId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for network id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of interfaces",
              "items" : {
                "type" : "object",
                "description" : "Interface",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Interface id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Interface name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Interface description"
                  },
                  "mac" : {
                    "type" : "string",
                    "description" : "Interface mac address"
                  },
                  "macAddress" : {
                    "type" : "string",
                    "description" : "Interface mac address"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "networkName" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "subnetId" : {
                    "type" : "string",
                    "description" : "Subnet id"
                  },
                  "availabilityZone" : {
                    "type" : "string",
                    "description" : "Availability zone"
                  },
                  "attachment" : {
                    "type" : "object",
                    "description" : "Interface attachment",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Attachment id"
                      },
                      "virtualMachineId" : {
                        "type" : "string",
                        "description" : "Instance id"
                      },
                      "status" : {
                        "type" : "string",
                        "description" : "Status"
                      }
                    }
                  },
                  "subnet" : {
                    "type" : "object",
                    "description" : "Subnet",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      },
                      "networkId" : {
                        "type" : "string",
                        "description" : "Network id"
                      },
                      "networkName" : {
                        "type" : "string",
                        "description" : "Network name"
                      },
                      "availabilityZone" : {
                        "type" : "string",
                        "description" : "Availability zone"
                      },
                      "addressPrefix" : {
                        "type" : "string",
                        "description" : "Address prefix for subnet"
                      },
                      "availableIpAddressCount" : {
                        "type" : "integer",
                        "description" : "Number of available IP addresses"
                      }
                    }
                  },
                  "ipv4Addresses" : {
                    "type" : "array",
                    "description" : "List of Ips",
                    "items" : {
                      "type" : "object",
                      "description" : "Ip address",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Id"
                        },
                        "ip" : {
                          "type" : "string",
                          "description" : "Ip"
                        },
                        "dnsName" : {
                          "type" : "string",
                          "description" : "Dns name"
                        },
                        "associatedIp" : {
                          "type" : "string",
                          "description" : "Associated ip"
                        },
                        "associationId" : {
                          "type" : "string",
                          "description" : "Association id"
                        },
                        "allocationId" : {
                          "type" : "string",
                          "description" : "Allocation id"
                        },
                        "ownerId" : {
                          "type" : "string",
                          "description" : "Owner id"
                        },
                        "allowedActions" : {
                          "type" : "array",
                          "description" : "List of allowed actions",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "isPublic" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is public"
                        },
                        "isFloating" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is floating"
                        },
                        "isDirectlyAssociated" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is directly associated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Malformed network id"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_network_interfaces"
      },
      "post" : {
        "summary" : "Create interface",
        "description" : "Create new interface",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Network id"
        }, {
          "name" : "interface",
          "in" : "body",
          "required" : true,
          "description" : "Interface creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "description", "subnetId" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Interface description"
              },
              "subnetId" : {
                "type" : "string",
                "description" : "Subnet id"
              },
              "privateIpAddress" : {
                "type" : "string",
                "description" : "Private ip address"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Interface",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Interface id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Interface name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Interface description"
                },
                "mac" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "macAddress" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "subnetId" : {
                  "type" : "string",
                  "description" : "Subnet id"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "attachment" : {
                  "type" : "object",
                  "description" : "Interface attachment",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Attachment id"
                    },
                    "virtualMachineId" : {
                      "type" : "string",
                      "description" : "Instance id"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Status"
                    }
                  }
                },
                "subnet" : {
                  "type" : "object",
                  "description" : "Subnet",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Subnet id"
                    },
                    "networkId" : {
                      "type" : "string",
                      "description" : "Network id"
                    },
                    "networkName" : {
                      "type" : "string",
                      "description" : "Network name"
                    },
                    "availabilityZone" : {
                      "type" : "string",
                      "description" : "Availability zone"
                    },
                    "addressPrefix" : {
                      "type" : "string",
                      "description" : "Address prefix for subnet"
                    },
                    "availableIpAddressCount" : {
                      "type" : "integer",
                      "description" : "Number of available IP addresses"
                    }
                  }
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "description" : "List of Ips",
                  "items" : {
                    "type" : "object",
                    "description" : "Ip address",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Id"
                      },
                      "ip" : {
                        "type" : "string",
                        "description" : "Ip"
                      },
                      "dnsName" : {
                        "type" : "string",
                        "description" : "Dns name"
                      },
                      "associatedIp" : {
                        "type" : "string",
                        "description" : "Associated ip"
                      },
                      "associationId" : {
                        "type" : "string",
                        "description" : "Association id"
                      },
                      "allocationId" : {
                        "type" : "string",
                        "description" : "Allocation id"
                      },
                      "ownerId" : {
                        "type" : "string",
                        "description" : "Owner id"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "description" : "List of allowed actions",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "isPublic" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is public"
                      },
                      "isFloating" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is floating"
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is directly associated"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input values or missing network id"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "post_aws_network_network_interfaces"
      }
    },
    "/api/v1/aws/network/subnets" : {
      "get" : {
        "summary" : "Get list of subnets",
        "description" : "List of subnets",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of Subnets",
              "items" : {
                "type" : "object",
                "description" : "Subnet",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Subnet id"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "networkName" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "availabilityZone" : {
                    "type" : "string",
                    "description" : "Availability zone"
                  },
                  "addressPrefix" : {
                    "type" : "string",
                    "description" : "Address prefix for subnet"
                  },
                  "availableIpAddressCount" : {
                    "type" : "integer",
                    "description" : "Number of available IP addresses"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_subnets"
      },
      "post" : {
        "summary" : "Create subnet",
        "description" : "Create new subnet",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "subnet",
          "in" : "body",
          "required" : true,
          "description" : "Subnet creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "availabilityZone", "addressPrefix" ],
            "properties" : {
              "networkId" : {
                "type" : "string",
                "description" : "Network id"
              },
              "availabilityZone" : {
                "type" : "string",
                "description" : "Availability zone"
              },
              "addressPrefix" : {
                "type" : "string",
                "description" : "Address prefix for subnet"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Subnet",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Subnet id"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "addressPrefix" : {
                  "type" : "string",
                  "description" : "Address prefix for subnet"
                },
                "availableIpAddressCount" : {
                  "type" : "integer",
                  "description" : "Number of available IP addresses"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "post_aws_network_subnets"
      }
    },
    "/api/v1/aws/network/subnets/{subnet_id}" : {
      "get" : {
        "summary" : "Get details for a single subnet",
        "description" : "Get details for a single subnet",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "subnet_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Subnet id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Subnet",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Subnet id"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "addressPrefix" : {
                  "type" : "string",
                  "description" : "Address prefix for subnet"
                },
                "availableIpAddressCount" : {
                  "type" : "integer",
                  "description" : "Number of available IP addresses"
                }
              }
            }
          },
          "404" : {
            "description" : "Subnet does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_subnet"
      },
      "delete" : {
        "summary" : "Delete subnet",
        "description" : "Delete subnet",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "subnet_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Subnet id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Malformed subnet id"
          },
          "404" : {
            "description" : "Subnet does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "delete_aws_network_subnet"
      }
    },
    "/api/v1/aws/network/subnets/{subnet_id}/interfaces" : {
      "get" : {
        "summary" : "Get list of network interfaces",
        "description" : "List of network interfaces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "subnet_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Subnet id"
        }, {
          "name" : "vmId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for VM id"
        }, {
          "name" : "subnetId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for subnet id"
        }, {
          "name" : "networkId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for network id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of interfaces",
              "items" : {
                "type" : "object",
                "description" : "Interface",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Interface id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Interface name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Interface description"
                  },
                  "mac" : {
                    "type" : "string",
                    "description" : "Interface mac address"
                  },
                  "macAddress" : {
                    "type" : "string",
                    "description" : "Interface mac address"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "networkName" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "subnetId" : {
                    "type" : "string",
                    "description" : "Subnet id"
                  },
                  "availabilityZone" : {
                    "type" : "string",
                    "description" : "Availability zone"
                  },
                  "attachment" : {
                    "type" : "object",
                    "description" : "Interface attachment",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Attachment id"
                      },
                      "virtualMachineId" : {
                        "type" : "string",
                        "description" : "Instance id"
                      },
                      "status" : {
                        "type" : "string",
                        "description" : "Status"
                      }
                    }
                  },
                  "subnet" : {
                    "type" : "object",
                    "description" : "Subnet",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      },
                      "networkId" : {
                        "type" : "string",
                        "description" : "Network id"
                      },
                      "networkName" : {
                        "type" : "string",
                        "description" : "Network name"
                      },
                      "availabilityZone" : {
                        "type" : "string",
                        "description" : "Availability zone"
                      },
                      "addressPrefix" : {
                        "type" : "string",
                        "description" : "Address prefix for subnet"
                      },
                      "availableIpAddressCount" : {
                        "type" : "integer",
                        "description" : "Number of available IP addresses"
                      }
                    }
                  },
                  "ipv4Addresses" : {
                    "type" : "array",
                    "description" : "List of Ips",
                    "items" : {
                      "type" : "object",
                      "description" : "Ip address",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Id"
                        },
                        "ip" : {
                          "type" : "string",
                          "description" : "Ip"
                        },
                        "dnsName" : {
                          "type" : "string",
                          "description" : "Dns name"
                        },
                        "associatedIp" : {
                          "type" : "string",
                          "description" : "Associated ip"
                        },
                        "associationId" : {
                          "type" : "string",
                          "description" : "Association id"
                        },
                        "allocationId" : {
                          "type" : "string",
                          "description" : "Allocation id"
                        },
                        "ownerId" : {
                          "type" : "string",
                          "description" : "Owner id"
                        },
                        "allowedActions" : {
                          "type" : "array",
                          "description" : "List of allowed actions",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "isPublic" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is public"
                        },
                        "isFloating" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is floating"
                        },
                        "isDirectlyAssociated" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is directly associated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Subnet does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_subnet_interfaces"
      },
      "post" : {
        "summary" : "Create interface",
        "description" : "Create new interface",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "subnet_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Subnet id"
        }, {
          "name" : "interface",
          "in" : "body",
          "required" : true,
          "description" : "Interface creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "description", "subnetId" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Interface description"
              },
              "subnetId" : {
                "type" : "string",
                "description" : "Subnet id"
              },
              "privateIpAddress" : {
                "type" : "string",
                "description" : "Private ip address"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Interface",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Interface id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Interface name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Interface description"
                },
                "mac" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "macAddress" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "subnetId" : {
                  "type" : "string",
                  "description" : "Subnet id"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "attachment" : {
                  "type" : "object",
                  "description" : "Interface attachment",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Attachment id"
                    },
                    "virtualMachineId" : {
                      "type" : "string",
                      "description" : "Instance id"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Status"
                    }
                  }
                },
                "subnet" : {
                  "type" : "object",
                  "description" : "Subnet",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Subnet id"
                    },
                    "networkId" : {
                      "type" : "string",
                      "description" : "Network id"
                    },
                    "networkName" : {
                      "type" : "string",
                      "description" : "Network name"
                    },
                    "availabilityZone" : {
                      "type" : "string",
                      "description" : "Availability zone"
                    },
                    "addressPrefix" : {
                      "type" : "string",
                      "description" : "Address prefix for subnet"
                    },
                    "availableIpAddressCount" : {
                      "type" : "integer",
                      "description" : "Number of available IP addresses"
                    }
                  }
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "description" : "List of Ips",
                  "items" : {
                    "type" : "object",
                    "description" : "Ip address",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Id"
                      },
                      "ip" : {
                        "type" : "string",
                        "description" : "Ip"
                      },
                      "dnsName" : {
                        "type" : "string",
                        "description" : "Dns name"
                      },
                      "associatedIp" : {
                        "type" : "string",
                        "description" : "Associated ip"
                      },
                      "associationId" : {
                        "type" : "string",
                        "description" : "Association id"
                      },
                      "allocationId" : {
                        "type" : "string",
                        "description" : "Allocation id"
                      },
                      "ownerId" : {
                        "type" : "string",
                        "description" : "Owner id"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "description" : "List of allowed actions",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "isPublic" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is public"
                      },
                      "isFloating" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is floating"
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is directly associated"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input values or missing network id"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "post_aws_network_subnet_interfaces"
      }
    },
    "/api/v1/aws/network/interfaces" : {
      "get" : {
        "summary" : "Get list of network interfaces",
        "description" : "List of network interfaces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for VM id"
        }, {
          "name" : "subnetId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for subnet id"
        }, {
          "name" : "networkId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter interfaces for network id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of interfaces",
              "items" : {
                "type" : "object",
                "description" : "Interface",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Interface id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Interface name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Interface description"
                  },
                  "mac" : {
                    "type" : "string",
                    "description" : "Interface mac address"
                  },
                  "macAddress" : {
                    "type" : "string",
                    "description" : "Interface mac address"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "networkName" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "subnetId" : {
                    "type" : "string",
                    "description" : "Subnet id"
                  },
                  "availabilityZone" : {
                    "type" : "string",
                    "description" : "Availability zone"
                  },
                  "attachment" : {
                    "type" : "object",
                    "description" : "Interface attachment",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Attachment id"
                      },
                      "virtualMachineId" : {
                        "type" : "string",
                        "description" : "Instance id"
                      },
                      "status" : {
                        "type" : "string",
                        "description" : "Status"
                      }
                    }
                  },
                  "subnet" : {
                    "type" : "object",
                    "description" : "Subnet",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      },
                      "networkId" : {
                        "type" : "string",
                        "description" : "Network id"
                      },
                      "networkName" : {
                        "type" : "string",
                        "description" : "Network name"
                      },
                      "availabilityZone" : {
                        "type" : "string",
                        "description" : "Availability zone"
                      },
                      "addressPrefix" : {
                        "type" : "string",
                        "description" : "Address prefix for subnet"
                      },
                      "availableIpAddressCount" : {
                        "type" : "integer",
                        "description" : "Number of available IP addresses"
                      }
                    }
                  },
                  "ipv4Addresses" : {
                    "type" : "array",
                    "description" : "List of Ips",
                    "items" : {
                      "type" : "object",
                      "description" : "Ip address",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Id"
                        },
                        "ip" : {
                          "type" : "string",
                          "description" : "Ip"
                        },
                        "dnsName" : {
                          "type" : "string",
                          "description" : "Dns name"
                        },
                        "associatedIp" : {
                          "type" : "string",
                          "description" : "Associated ip"
                        },
                        "associationId" : {
                          "type" : "string",
                          "description" : "Association id"
                        },
                        "allocationId" : {
                          "type" : "string",
                          "description" : "Allocation id"
                        },
                        "ownerId" : {
                          "type" : "string",
                          "description" : "Owner id"
                        },
                        "allowedActions" : {
                          "type" : "array",
                          "description" : "List of allowed actions",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "isPublic" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is public"
                        },
                        "isFloating" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is floating"
                        },
                        "isDirectlyAssociated" : {
                          "type" : "boolean",
                          "description" : "Specifies if ip is directly associated"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Subnet does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_interfaces"
      },
      "post" : {
        "summary" : "Create interface",
        "description" : "Create new interface",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "interface",
          "in" : "body",
          "required" : true,
          "description" : "Interface creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "description", "subnetId" ],
            "properties" : {
              "description" : {
                "type" : "string",
                "description" : "Interface description"
              },
              "subnetId" : {
                "type" : "string",
                "description" : "Subnet id"
              },
              "privateIpAddress" : {
                "type" : "string",
                "description" : "Private ip address"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Interface",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Interface id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Interface name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Interface description"
                },
                "mac" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "macAddress" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "subnetId" : {
                  "type" : "string",
                  "description" : "Subnet id"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "attachment" : {
                  "type" : "object",
                  "description" : "Interface attachment",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Attachment id"
                    },
                    "virtualMachineId" : {
                      "type" : "string",
                      "description" : "Instance id"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Status"
                    }
                  }
                },
                "subnet" : {
                  "type" : "object",
                  "description" : "Subnet",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Subnet id"
                    },
                    "networkId" : {
                      "type" : "string",
                      "description" : "Network id"
                    },
                    "networkName" : {
                      "type" : "string",
                      "description" : "Network name"
                    },
                    "availabilityZone" : {
                      "type" : "string",
                      "description" : "Availability zone"
                    },
                    "addressPrefix" : {
                      "type" : "string",
                      "description" : "Address prefix for subnet"
                    },
                    "availableIpAddressCount" : {
                      "type" : "integer",
                      "description" : "Number of available IP addresses"
                    }
                  }
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "description" : "List of Ips",
                  "items" : {
                    "type" : "object",
                    "description" : "Ip address",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Id"
                      },
                      "ip" : {
                        "type" : "string",
                        "description" : "Ip"
                      },
                      "dnsName" : {
                        "type" : "string",
                        "description" : "Dns name"
                      },
                      "associatedIp" : {
                        "type" : "string",
                        "description" : "Associated ip"
                      },
                      "associationId" : {
                        "type" : "string",
                        "description" : "Association id"
                      },
                      "allocationId" : {
                        "type" : "string",
                        "description" : "Allocation id"
                      },
                      "ownerId" : {
                        "type" : "string",
                        "description" : "Owner id"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "description" : "List of allowed actions",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "isPublic" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is public"
                      },
                      "isFloating" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is floating"
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is directly associated"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input values or missing network id"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "post_aws_network_interfaces"
      }
    },
    "/api/v1/aws/network/interfaces/{interface_id}" : {
      "get" : {
        "summary" : "Get details for a single interface",
        "description" : "Get details for a single interface",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "interface_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Interface id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Interface",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Interface id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Interface name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Interface description"
                },
                "mac" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "macAddress" : {
                  "type" : "string",
                  "description" : "Interface mac address"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "subnetId" : {
                  "type" : "string",
                  "description" : "Subnet id"
                },
                "availabilityZone" : {
                  "type" : "string",
                  "description" : "Availability zone"
                },
                "attachment" : {
                  "type" : "object",
                  "description" : "Interface attachment",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Attachment id"
                    },
                    "virtualMachineId" : {
                      "type" : "string",
                      "description" : "Instance id"
                    },
                    "status" : {
                      "type" : "string",
                      "description" : "Status"
                    }
                  }
                },
                "subnet" : {
                  "type" : "object",
                  "description" : "Subnet",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Subnet id"
                    },
                    "networkId" : {
                      "type" : "string",
                      "description" : "Network id"
                    },
                    "networkName" : {
                      "type" : "string",
                      "description" : "Network name"
                    },
                    "availabilityZone" : {
                      "type" : "string",
                      "description" : "Availability zone"
                    },
                    "addressPrefix" : {
                      "type" : "string",
                      "description" : "Address prefix for subnet"
                    },
                    "availableIpAddressCount" : {
                      "type" : "integer",
                      "description" : "Number of available IP addresses"
                    }
                  }
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "description" : "List of Ips",
                  "items" : {
                    "type" : "object",
                    "description" : "Ip address",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Id"
                      },
                      "ip" : {
                        "type" : "string",
                        "description" : "Ip"
                      },
                      "dnsName" : {
                        "type" : "string",
                        "description" : "Dns name"
                      },
                      "associatedIp" : {
                        "type" : "string",
                        "description" : "Associated ip"
                      },
                      "associationId" : {
                        "type" : "string",
                        "description" : "Association id"
                      },
                      "allocationId" : {
                        "type" : "string",
                        "description" : "Allocation id"
                      },
                      "ownerId" : {
                        "type" : "string",
                        "description" : "Owner id"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "description" : "List of allowed actions",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "isPublic" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is public"
                      },
                      "isFloating" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is floating"
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean",
                        "description" : "Specifies if ip is directly associated"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request specified malformed interface id"
          },
          "404" : {
            "description" : "Non-existing interface ID specified"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_interface"
      },
      "delete" : {
        "summary" : "Delete interface",
        "description" : "Delete interface",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "interface_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Interface id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Malformed interface id"
          },
          "404" : {
            "description" : "Interface with specified ID does not exist."
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "delete_aws_network_interface"
      }
    },
    "/api/v1/aws/network/securityGroups" : {
      "get" : {
        "summary" : "Get list of security groups",
        "description" : "List of security groups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "query",
          "type" : "string",
          "required" : false,
          "description" : "Filter security groups for VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of security groups",
              "items" : {
                "type" : "object",
                "description" : "Security group",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Security group id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Security group name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Security group description"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "networkName" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "ingressRules" : {
                    "type" : "array",
                    "description" : "Ingress rules",
                    "items" : {
                      "type" : "object",
                      "description" : "Security group",
                      "properties" : {
                        "protocol" : {
                          "type" : "string",
                          "description" : "Ip protocol"
                        },
                        "toPort" : {
                          "type" : "integer",
                          "description" : "ToPort"
                        },
                        "fromPort" : {
                          "type" : "integer",
                          "description" : "FromPort"
                        },
                        "addressPrefixes" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "properties" : {
                              "addressPrefix" : {
                                "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "egressRules" : {
                    "type" : "array",
                    "description" : "Egress rules",
                    "items" : {
                      "type" : "object",
                      "description" : "Security group",
                      "properties" : {
                        "protocol" : {
                          "type" : "string",
                          "description" : "Ip protocol"
                        },
                        "toPort" : {
                          "type" : "integer",
                          "description" : "ToPort"
                        },
                        "fromPort" : {
                          "type" : "integer",
                          "description" : "FromPort"
                        },
                        "addressPrefixes" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string",
                            "properties" : {
                              "addressPrefix" : {
                                "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Virtual machine does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "502" : {
            "description" : "Unable to fetch virtual machine details"
          },
          "504" : {
            "description" : "Unable to fetch virtual machine details. Request timed out."
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_securityGroups"
      },
      "post" : {
        "summary" : "Create new security group",
        "description" : "Create new security group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "security_group",
          "in" : "body",
          "required" : true,
          "description" : "Security group creation data",
          "schema" : {
            "type" : "object",
            "required" : [ "name", "description" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Security group name"
              },
              "description" : {
                "type" : "string",
                "description" : "Security group description"
              },
              "networkId" : {
                "type" : "string",
                "description" : "Network id"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Security group",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Security group id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Security group name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Security group description"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "ingressRules" : {
                  "type" : "array",
                  "description" : "Ingress rules",
                  "items" : {
                    "type" : "object",
                    "description" : "Security group",
                    "properties" : {
                      "protocol" : {
                        "type" : "string",
                        "description" : "Ip protocol"
                      },
                      "toPort" : {
                        "type" : "integer",
                        "description" : "ToPort"
                      },
                      "fromPort" : {
                        "type" : "integer",
                        "description" : "FromPort"
                      },
                      "addressPrefixes" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "properties" : {
                            "addressPrefix" : {
                              "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "egressRules" : {
                  "type" : "array",
                  "description" : "Egress rules",
                  "items" : {
                    "type" : "object",
                    "description" : "Security group",
                    "properties" : {
                      "protocol" : {
                        "type" : "string",
                        "description" : "Ip protocol"
                      },
                      "toPort" : {
                        "type" : "integer",
                        "description" : "ToPort"
                      },
                      "fromPort" : {
                        "type" : "integer",
                        "description" : "FromPort"
                      },
                      "addressPrefixes" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "properties" : {
                            "addressPrefix" : {
                              "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid input values"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "post_aws_network_securityGroups"
      }
    },
    "/api/v1/aws/network/securityGroups/{security_group_id}" : {
      "get" : {
        "summary" : "Get details for a single security group",
        "description" : "Get details for a single security group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "security_group_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Security group",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Security group id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Security group name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Security group description"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "networkName" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "ingressRules" : {
                  "type" : "array",
                  "description" : "Ingress rules",
                  "items" : {
                    "type" : "object",
                    "description" : "Security group",
                    "properties" : {
                      "protocol" : {
                        "type" : "string",
                        "description" : "Ip protocol"
                      },
                      "toPort" : {
                        "type" : "integer",
                        "description" : "ToPort"
                      },
                      "fromPort" : {
                        "type" : "integer",
                        "description" : "FromPort"
                      },
                      "addressPrefixes" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "properties" : {
                            "addressPrefix" : {
                              "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "egressRules" : {
                  "type" : "array",
                  "description" : "Egress rules",
                  "items" : {
                    "type" : "object",
                    "description" : "Security group",
                    "properties" : {
                      "protocol" : {
                        "type" : "string",
                        "description" : "Ip protocol"
                      },
                      "toPort" : {
                        "type" : "integer",
                        "description" : "ToPort"
                      },
                      "fromPort" : {
                        "type" : "integer",
                        "description" : "FromPort"
                      },
                      "addressPrefixes" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string",
                          "properties" : {
                            "addressPrefix" : {
                              "description" : "Address prefix for subnet (i.e., 10.0.0.0/24)"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Request specified malformed security group id"
          },
          "404" : {
            "description" : "Non-existing security group id specified"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "get_aws_network_securityGroup"
      },
      "delete" : {
        "summary" : "Delete security group",
        "description" : "Delete security group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "security_group_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Malformed security group id"
          },
          "404" : {
            "description" : "Security group with specified id does not exist."
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "delete_aws_network_securityGroup"
      }
    },
    "/api/v1/aws/network/vms/{vm_id}/securityGroups/{security_group_id}" : {
      "put" : {
        "summary" : "Assign Security Group (specified by ID) to a specified VM (specified by ID)",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "security_group_id",
          "in" : "path",
          "description" : "ID of Security Group",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Security group is already assigned to VM"
          },
          "201" : {
            "description" : "Security group was assigned to VM"
          },
          "400" : {
            "description" : "Malformed security group name or vm id"
          },
          "404" : {
            "description" : "VM or Security Group does not exist"
          },
          "500" : {
            "description" : "Unknown error occurred"
          },
          "502" : {
            "description" : "Error when communicating with external service"
          },
          "504" : {
            "description" : "Request has timed out"
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "put_aws_network_vm_securityGroup"
      },
      "delete" : {
        "summary" : "Delete Security Group (specified by ID) from a specified VM (specified by ID)",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "security_group_name",
          "in" : "path",
          "description" : "ID of Security Group",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Security group was not assigned to VM"
          },
          "204" : {
            "description" : "Security group was removed from VM"
          },
          "400" : {
            "description" : "Malformed security group name or vm id"
          },
          "404" : {
            "description" : "VM or Security Group does not exist"
          },
          "500" : {
            "description" : "Unknown error occurred"
          },
          "502" : {
            "description" : "Error when communicating with external service"
          },
          "504" : {
            "description" : "Request has timed out"
          }
        },
        "tags" : [ "network", "aws" ],
        "operationId" : "delete_aws_network_vm_securityGroup"
      }
    },
    "/api/v1/azure/network/interfaces" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "resourceGroupId" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "location" : {
                    "type" : "string"
                  },
                  "primary" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "virtualMachine" : {
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "macAddress" : {
                    "type" : "string"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "networkName" : {
                    "type" : "string"
                  },
                  "networkId" : {
                    "type" : "string"
                  },
                  "ipv4Addresses" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "ip" : {
                          "type" : "string"
                        },
                        "name" : {
                          "type" : "string"
                        },
                        "primary" : {
                          "type" : "boolean",
                          "default" : false
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "subnetId" : {
                          "type" : "string"
                        },
                        "allowedActions" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        },
                        "isDirectlyAssociated" : {
                          "type" : "boolean"
                        },
                        "isFloating" : {
                          "type" : "boolean"
                        },
                        "isPublic" : {
                          "type" : "boolean"
                        },
                        "dnsName" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "List network interfaces",
        "operationId" : "get_network_interfaces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "vmId",
          "in" : "query",
          "type" : "string",
          "description" : "vmId - filter by virtual machine ID"
        } ],
        "tags" : [ "azure", "network" ]
      },
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "location" : {
                  "type" : "string"
                },
                "primary" : {
                  "type" : "boolean",
                  "default" : false
                },
                "virtualMachine" : {
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "resourceGroupId" : {
                      "type" : "string"
                    },
                    "platformId" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "macAddress" : {
                  "type" : "string"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "networkName" : {
                  "type" : "string"
                },
                "networkId" : {
                  "type" : "string"
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "ip" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "primary" : {
                        "type" : "boolean",
                        "default" : false
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "subnetId" : {
                        "type" : "string"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "dnsName" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Create a new network interface",
        "operationId" : "post_network_interfaces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "name", "subnetPlatformId" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name",
                "description" : "name is required"
              },
              "subnetPlatformId" : {
                "type" : "string",
                "title" : "subnetPlatformId",
                "description" : "subnetPlatformId is required (full ID)"
              },
              "resourceGroupId" : {
                "type" : "string",
                "title" : "resourceGroupId"
              },
              "securityGroupId" : {
                "type" : "string",
                "title" : "securityGroupId"
              }
            },
            "type" : "object"
          }
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/interfaces/{interface_id}" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Successfully deleted network interface"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete a network interface",
        "operationId" : "delete_network_interface",
        "tags" : [ "azure", "network" ],
        "parameters" : [ {
          "name" : "interface_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "location" : {
                  "type" : "string"
                },
                "primary" : {
                  "type" : "boolean",
                  "default" : false
                },
                "virtualMachine" : {
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "resourceGroupId" : {
                      "type" : "string"
                    },
                    "platformId" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "macAddress" : {
                  "type" : "string"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "networkName" : {
                  "type" : "string"
                },
                "networkId" : {
                  "type" : "string"
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "ip" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "primary" : {
                        "type" : "boolean",
                        "default" : false
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "subnetId" : {
                        "type" : "string"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "dnsName" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get details for a single network interface",
        "operationId" : "get_network_interface",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "interface_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/interfaces/{interface_id}/attachSecurityGroup" : {
      "put" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "location" : {
                  "type" : "string"
                },
                "primary" : {
                  "type" : "boolean",
                  "default" : false
                },
                "virtualMachine" : {
                  "properties" : {
                    "id" : {
                      "type" : "string"
                    },
                    "resourceGroupId" : {
                      "type" : "string"
                    },
                    "platformId" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "macAddress" : {
                  "type" : "string"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "networkName" : {
                  "type" : "string"
                },
                "networkId" : {
                  "type" : "string"
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "ip" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "primary" : {
                        "type" : "boolean",
                        "default" : false
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "subnetId" : {
                        "type" : "string"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "dnsName" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Attach a security group to interface",
        "operationId" : "put_security_group_attachment",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "securityGroupId" ],
            "properties" : {
              "securityGroupId" : {
                "type" : "string",
                "title" : "securityGroupId",
                "description" : "securityGroupId is required"
              }
            },
            "type" : "object"
          }
        }, {
          "name" : "interface_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/networks" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string"
                  },
                  "resourceGroupId" : {
                    "type" : "string"
                  },
                  "location" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "subnets" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "platformId" : {
                          "type" : "string"
                        },
                        "resourceGroupId" : {
                          "type" : "string"
                        },
                        "addressPrefix" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "List virtual networks",
        "operationId" : "get_virtual_networks",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        } ],
        "tags" : [ "azure", "network" ]
      },
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "location" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "subnets" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "addressPrefix" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Create a new virtual network",
        "operationId" : "post_virtual_networks",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name",
                "description" : "name is required"
              },
              "resourceGroupId" : {
                "type" : "string",
                "title" : "resourceGroupId"
              }
            },
            "type" : "object"
          }
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/networks/{virtual_network_id}" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Successfully deleted virtual network"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete a single virtual network",
        "operationId" : "delete_virtual_network",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "virtual_network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "location" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "subnets" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "addressPrefix" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get details for a single virtual network",
        "operationId" : "get_virtual_network",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "virtual_network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/networks/{virtual_network_id}/subnets" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string"
                  },
                  "resourceGroupId" : {
                    "type" : "string"
                  },
                  "addressPrefix" : {
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "List subnets",
        "operationId" : "get_subnets",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "virtual_network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      },
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "addressPrefix" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Create a new subnet",
        "operationId" : "post_subnets",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "addressPrefix", "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name",
                "description" : "name is required"
              },
              "addressPrefix" : {
                "type" : "string",
                "title" : "addressPrefix",
                "description" : "addressPrefix is required (such as '10.0.0.0/24')"
              }
            },
            "type" : "object"
          }
        }, {
          "name" : "virtual_network_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/publicIpAddresses" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string"
                  },
                  "resourceGroupId" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "location" : {
                    "type" : "string"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "ipAddress" : {
                    "type" : "string"
                  },
                  "configuration" : {
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "privateIp" : {
                    "type" : "string"
                  },
                  "subnet" : {
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "List public IP addresses",
        "operationId" : "get_public_ip_addresses",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/securityGroups" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "key" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "location" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string"
                  },
                  "resourceGroupId" : {
                    "type" : "string"
                  },
                  "rules" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "description" : {
                          "type" : "string"
                        },
                        "name" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "platformId" : {
                          "type" : "string"
                        },
                        "resourceGroupId" : {
                          "type" : "string"
                        },
                        "protocol" : {
                          "type" : "string"
                        },
                        "direction" : {
                          "type" : "string"
                        },
                        "destinationAddressPrefix" : {
                          "type" : "string"
                        },
                        "destinationPortRange" : {
                          "type" : "string"
                        },
                        "sourceAddressPrefix" : {
                          "type" : "string"
                        },
                        "sourcePortRange" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "interfaces" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "resourceGroupId" : {
                          "type" : "string"
                        },
                        "platformId" : {
                          "type" : "string"
                        },
                        "name" : {
                          "type" : "string"
                        },
                        "location" : {
                          "type" : "string"
                        },
                        "primary" : {
                          "type" : "boolean",
                          "default" : false
                        },
                        "virtualMachine" : {
                          "properties" : {
                            "id" : {
                              "type" : "string"
                            },
                            "resourceGroupId" : {
                              "type" : "string"
                            },
                            "platformId" : {
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "macAddress" : {
                          "type" : "string"
                        },
                        "tags" : {
                          "type" : "array",
                          "items" : {
                            "properties" : {
                              "key" : {
                                "type" : "string"
                              },
                              "value" : {
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          }
                        },
                        "networkName" : {
                          "type" : "string"
                        },
                        "networkId" : {
                          "type" : "string"
                        },
                        "ipv4Addresses" : {
                          "type" : "array",
                          "items" : {
                            "properties" : {
                              "ip" : {
                                "type" : "string"
                              },
                              "name" : {
                                "type" : "string"
                              },
                              "primary" : {
                                "type" : "boolean",
                                "default" : false
                              },
                              "id" : {
                                "type" : "string"
                              },
                              "subnetId" : {
                                "type" : "string"
                              },
                              "allowedActions" : {
                                "type" : "array",
                                "items" : {
                                  "type" : "string"
                                }
                              },
                              "isDirectlyAssociated" : {
                                "type" : "boolean"
                              },
                              "isFloating" : {
                                "type" : "boolean"
                              },
                              "isPublic" : {
                                "type" : "boolean"
                              },
                              "dnsName" : {
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          }
                        }
                      },
                      "type" : "object"
                    }
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "List security groups",
        "operationId" : "get_security_groups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "vmId",
          "in" : "query",
          "type" : "string",
          "description" : "vmId - filter security groups for a specified virtual machine"
        } ],
        "tags" : [ "azure", "network" ]
      },
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "location" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "rules" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "description" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "protocol" : {
                        "type" : "string"
                      },
                      "direction" : {
                        "type" : "string"
                      },
                      "destinationAddressPrefix" : {
                        "type" : "string"
                      },
                      "destinationPortRange" : {
                        "type" : "string"
                      },
                      "sourceAddressPrefix" : {
                        "type" : "string"
                      },
                      "sourcePortRange" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "location" : {
                        "type" : "string"
                      },
                      "primary" : {
                        "type" : "boolean",
                        "default" : false
                      },
                      "virtualMachine" : {
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "resourceGroupId" : {
                            "type" : "string"
                          },
                          "platformId" : {
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "macAddress" : {
                        "type" : "string"
                      },
                      "tags" : {
                        "type" : "array",
                        "items" : {
                          "properties" : {
                            "key" : {
                              "type" : "string"
                            },
                            "value" : {
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        }
                      },
                      "networkName" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "ipv4Addresses" : {
                        "type" : "array",
                        "items" : {
                          "properties" : {
                            "ip" : {
                              "type" : "string"
                            },
                            "name" : {
                              "type" : "string"
                            },
                            "primary" : {
                              "type" : "boolean",
                              "default" : false
                            },
                            "id" : {
                              "type" : "string"
                            },
                            "subnetId" : {
                              "type" : "string"
                            },
                            "allowedActions" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "isDirectlyAssociated" : {
                              "type" : "boolean"
                            },
                            "isFloating" : {
                              "type" : "boolean"
                            },
                            "isPublic" : {
                              "type" : "boolean"
                            },
                            "dnsName" : {
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        }
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Create a new security group",
        "operationId" : "post_security_groups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name",
                "description" : "name is required"
              }
            },
            "type" : "object"
          }
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/securityGroups/{security_group_id}" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Successfully deleted given security group"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete a single security group",
        "operationId" : "delete_security_group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "security_group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "key" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "location" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "rules" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "description" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "protocol" : {
                        "type" : "string"
                      },
                      "direction" : {
                        "type" : "string"
                      },
                      "destinationAddressPrefix" : {
                        "type" : "string"
                      },
                      "destinationPortRange" : {
                        "type" : "string"
                      },
                      "sourceAddressPrefix" : {
                        "type" : "string"
                      },
                      "sourcePortRange" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "platformId" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "location" : {
                        "type" : "string"
                      },
                      "primary" : {
                        "type" : "boolean",
                        "default" : false
                      },
                      "virtualMachine" : {
                        "properties" : {
                          "id" : {
                            "type" : "string"
                          },
                          "resourceGroupId" : {
                            "type" : "string"
                          },
                          "platformId" : {
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "macAddress" : {
                        "type" : "string"
                      },
                      "tags" : {
                        "type" : "array",
                        "items" : {
                          "properties" : {
                            "key" : {
                              "type" : "string"
                            },
                            "value" : {
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        }
                      },
                      "networkName" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "ipv4Addresses" : {
                        "type" : "array",
                        "items" : {
                          "properties" : {
                            "ip" : {
                              "type" : "string"
                            },
                            "name" : {
                              "type" : "string"
                            },
                            "primary" : {
                              "type" : "boolean",
                              "default" : false
                            },
                            "id" : {
                              "type" : "string"
                            },
                            "subnetId" : {
                              "type" : "string"
                            },
                            "allowedActions" : {
                              "type" : "array",
                              "items" : {
                                "type" : "string"
                              }
                            },
                            "isDirectlyAssociated" : {
                              "type" : "boolean"
                            },
                            "isFloating" : {
                              "type" : "boolean"
                            },
                            "isPublic" : {
                              "type" : "boolean"
                            },
                            "dnsName" : {
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        }
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get details for a single security group",
        "operationId" : "get_security_group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "security_group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/azure/network/subnets/{subnet_id}" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Successfully deleted subnet"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete a single subnet",
        "operationId" : "delete_subnet",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "subnet_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "addressPrefix" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get details for a single subnet",
        "operationId" : "get_subnet",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "subnet_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "network" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/floatingIps" : {
      "get" : {
        "summary" : "List all floating IPs for specified project",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "vmId",
          "in" : "query",
          "required" : false,
          "description" : "Id of VM. Allows to filter resources for specified VM",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of floating ips",
              "items" : {
                "type" : "object",
                "required" : [ "fixedIpAddress", "floatingIpAddress", "floatingNetworkId", "id", "interfaceId", "routerId", "status", "projectId" ],
                "properties" : {
                  "fixedIpAddress" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "floatingIpAddress" : {
                    "type" : "string"
                  },
                  "floatingNetworkId" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "interfaceId" : {
                    "description" : "The interface to which this IP is attached to (may be null)",
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "routerId" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "status" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "get_k5_network_project_floatingIps"
      },
      "post" : {
        "summary" : "Create a new Floating IP for specified project",
        "operationId" : "createFloatingIp",
        "parameters" : [ {
          "name" : "floatingIp",
          "in" : "body",
          "description" : "Attributes for creating Floating IP",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "floatingNetworkId", "availabilityZone" ],
            "properties" : {
              "availabilityZone" : {
                "type" : "string"
              },
              "floatingNetworkId" : {
                "type" : "string"
              },
              "portId" : {
                "type" : "string",
                "x-nullable" : true
              },
              "fixedIpAddress" : {
                "type" : "string",
                "x-nullable" : true
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The created Floating IP",
            "schema" : {
              "type" : "object",
              "required" : [ "fixedIpAddress", "floatingIpAddress", "floatingNetworkId", "id", "interfaceId", "routerId", "status", "projectId" ],
              "properties" : {
                "fixedIpAddress" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "floatingIpAddress" : {
                  "type" : "string"
                },
                "floatingNetworkId" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "interfaceId" : {
                  "description" : "The interface to which this IP is attached to (may be null)",
                  "type" : "string",
                  "x-nullable" : true
                },
                "routerId" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/floatingIps/{id}" : {
      "get" : {
        "summary" : "Get details of specified Floating IP for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of Floating IP",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Floating object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "fixedIpAddress", "floatingIpAddress", "floatingNetworkId", "id", "interfaceId", "routerId", "status", "projectId" ],
              "properties" : {
                "fixedIpAddress" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "floatingIpAddress" : {
                  "type" : "string"
                },
                "floatingNetworkId" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "interfaceId" : {
                  "description" : "The interface to which this IP is attached to (may be null)",
                  "type" : "string",
                  "x-nullable" : true
                },
                "routerId" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "get_k5_network_project_floatingIp"
      },
      "delete" : {
        "summary" : "Removes Floating IP with given id for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of Floating IP",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_floatingIp"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/vms/{vm_id}/assignFloatingIp" : {
      "put" : {
        "summary" : "Assign floating IP for given VM",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "required" : false,
          "description" : "Arguments",
          "schema" : {
            "type" : "object",
            "required" : [ "interfaceId", "floatingIpId" ],
            "properties" : {
              "interfaceId" : {
                "type" : "string"
              },
              "fixedIpAddress" : {
                "type" : "string",
                "x-nullable" : true
              },
              "floatingIpId" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Assigned floating IP",
            "schema" : {
              "type" : "object",
              "required" : [ "fixedIpAddress", "floatingIpAddress", "floatingNetworkId", "id", "interfaceId", "routerId", "status", "projectId" ],
              "properties" : {
                "fixedIpAddress" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "floatingIpAddress" : {
                  "type" : "string"
                },
                "floatingNetworkId" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "interfaceId" : {
                  "description" : "The interface to which this IP is attached to (may be null)",
                  "type" : "string",
                  "x-nullable" : true
                },
                "routerId" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Unable to assign floating IP",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "put_k5_network_project_vm_assignFloatingIp"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/vms/{vm_id}/unassignFloatingIp" : {
      "delete" : {
        "summary" : "Unassign flaoting IP from given VM",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of a VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of a K5 project",
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of a subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "required" : true,
          "description" : "Floating ip information",
          "schema" : {
            "type" : "object",
            "properties" : {
              "floatingIpId" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Unable to unassign floating IP",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_vm_unassignFloatingIp"
      }
    },
    "/api/v1/k5/network/vms/{vm_id}/securityGroups" : {
      "get" : {
        "summary" : "List Security Groups for specified VM",
        "description" : "Deprecated. Use /floatingIps?vmId=id",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "required" : [ "id", "name", "description", "projectId", "rules" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "rules" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "direction" : {
                          "type" : "string"
                        },
                        "ethertype" : {
                          "type" : "string"
                        },
                        "portRangeMax" : {
                          "type" : "integer"
                        },
                        "portRangeMin" : {
                          "type" : "integer"
                        },
                        "protocol" : {
                          "type" : "string",
                          "x-nullable" : true
                        },
                        "cidr" : {
                          "type" : "string",
                          "x-nullable" : true
                        },
                        "securityGroupId" : {
                          "type" : "string"
                        },
                        "projectId" : {
                          "type" : "string"
                        }
                      }
                    },
                    "description" : "List of rules"
                  }
                }
              },
              "description" : "List of security groups"
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "get_k5_network_vm_securityGroups"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/vms/{vm_id}/securityGroups/{security_group_id}" : {
      "put" : {
        "summary" : "Assign Security Group by name to specified VM for specified project",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "security_group_id",
          "in" : "path",
          "description" : "ID of Security Group",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Security group is already assigned to VM"
          },
          "201" : {
            "description" : "Security group was assigned to VM"
          },
          "400" : {
            "description" : "Malformed security group name or vm id"
          },
          "404" : {
            "description" : "VM or Security Group does not exist"
          },
          "500" : {
            "description" : "Unknown error occurred"
          },
          "502" : {
            "description" : "Error when communicating with external service"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "put_k5_network_project_vm_securityGroup"
      },
      "delete" : {
        "summary" : "Delete Security Group by name from specified VM for specified project",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "security_group_id",
          "in" : "path",
          "description" : "ID of Security Group",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Security group was not assigned to VM"
          },
          "204" : {
            "description" : "Security group was removed from VM"
          },
          "400" : {
            "description" : "Malformed security group name or vm id"
          },
          "404" : {
            "description" : "VM or Security Group does not exist"
          },
          "500" : {
            "description" : "Unknown error occurred"
          },
          "502" : {
            "description" : "Error when communicating with external service"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_vm_securityGroup"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/networks" : {
      "get" : {
        "summary" : "List all networks for given subscription and project",
        "operationId" : "get_networks",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "shared",
          "in" : "query",
          "description" : "Shared parameter to filter networks. If True request will return shared networks, if False networks which are not shered, if missing all networks.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "isExternal",
          "in" : "query",
          "description" : "External parameter to filter networks. If True request will return external networks, if False networks which are not external, if missing all networks.",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of networks",
              "items" : {
                "type" : "object",
                "required" : [ "id", "name", "adminStateUp", "status", "shared", "availabilityZone", "projectId" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "adminStateUp" : {
                    "type" : "boolean"
                  },
                  "status" : {
                    "type" : "string"
                  },
                  "shared" : {
                    "type" : "boolean"
                  },
                  "subnets" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "subnetId" ],
                      "properties" : {
                        "subnetId" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string",
                    "x-nullable" : true
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Invalid json payload",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "post" : {
        "summary" : "Create new network for specified project",
        "operationId" : "create_network",
        "parameters" : [ {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "adminStateUp", "availabilityZone" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "adminStateUp" : {
                "type" : "boolean"
              },
              "availabilityZone" : {
                "type" : "string"
              },
              "shared" : {
                "type" : "boolean"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "new network",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "adminStateUp", "status", "shared", "availabilityZone", "projectId" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "shared" : {
                  "type" : "boolean"
                },
                "subnets" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "subnetId" ],
                    "properties" : {
                      "subnetId" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string",
                  "x-nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "409" : {
            "description" : "Resource limit exceeded",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/networks/{networkId}" : {
      "get" : {
        "summary" : "Get details of specified network for specifed project",
        "operationId" : "get_network",
        "parameters" : [ {
          "name" : "networkId",
          "in" : "path",
          "description" : "ID of network",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Network object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "adminStateUp", "status", "shared", "availabilityZone", "projectId" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "shared" : {
                  "type" : "boolean"
                },
                "subnets" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "subnetId" ],
                    "properties" : {
                      "subnetId" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string",
                  "x-nullable" : true
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "put" : {
        "summary" : "Update network for specified project",
        "operationId" : "update_network",
        "parameters" : [ {
          "name" : "networkId",
          "in" : "path",
          "description" : "ID of network",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "adminStateUp" : {
                "type" : "boolean"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Modified network",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "adminStateUp", "status", "shared", "availabilityZone", "projectId" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "shared" : {
                  "type" : "boolean"
                },
                "subnets" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "subnetId" ],
                    "properties" : {
                      "subnetId" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string",
                  "x-nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "delete" : {
        "summary" : "Deletes network for specified project",
        "operationId" : "delete_network",
        "parameters" : [ {
          "name" : "networkId",
          "in" : "path",
          "description" : "ID of network",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Network marked for deletion successfully"
          },
          "409" : {
            "description" : "Resource conflict. Unable to remove network",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/subnets" : {
      "get" : {
        "summary" : "List all subnets for given subscription and project",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of subnets",
              "items" : {
                "type" : "object",
                "required" : [ "name", "networkId", "availabilityZone", "cidr" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "dhcpEnabled" : {
                    "type" : "boolean"
                  },
                  "networkId" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "dnsNameServers" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "allocationPools" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "start", "end" ],
                      "properties" : {
                        "start" : {
                          "type" : "string"
                        },
                        "end" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "hostRoutes" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "destination", "nextHop" ],
                      "properties" : {
                        "destination" : {
                          "type" : "string"
                        },
                        "nextHop" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "ipVersion" : {
                    "type" : "integer"
                  },
                  "gatewayIp" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "cidr" : {
                    "type" : "string"
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "get_k5_network_project_subnets"
      },
      "post" : {
        "summary" : "Create new subnet for specified project",
        "operationId" : "create_subnet",
        "parameters" : [ {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "networkId", "availabilityZone", "ipVersion", "cidr" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "dhcpEnabled" : {
                "type" : "boolean"
              },
              "availabilityZone" : {
                "type" : "string"
              },
              "networkId" : {
                "type" : "string"
              },
              "dnsNameServers" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "allocationPools" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "required" : [ "start", "end" ],
                  "properties" : {
                    "start" : {
                      "type" : "string",
                      "description" : "start parameter must be in cidr"
                    },
                    "end" : {
                      "type" : "string",
                      "description" : "end parameter must be in cidr"
                    }
                  }
                }
              },
              "ipVersion" : {
                "type" : "integer"
              },
              "gatewayIp" : {
                "type" : "string"
              },
              "cidr" : {
                "type" : "string"
              },
              "hostRoutes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "required" : [ "destination", "nextHop" ],
                  "properties" : {
                    "destination" : {
                      "type" : "string"
                    },
                    "nextHop" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "new subnet",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "networkId", "availabilityZone", "cidr" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "dhcpEnabled" : {
                  "type" : "boolean"
                },
                "networkId" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "dnsNameServers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "allocationPools" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "start", "end" ],
                    "properties" : {
                      "start" : {
                        "type" : "string"
                      },
                      "end" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "hostRoutes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "destination", "nextHop" ],
                    "properties" : {
                      "destination" : {
                        "type" : "string"
                      },
                      "nextHop" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "ipVersion" : {
                  "type" : "integer"
                },
                "gatewayIp" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "cidr" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/subnets/{subnetId}" : {
      "get" : {
        "summary" : "Get details of specified subnet for specified project",
        "parameters" : [ {
          "name" : "subnetId",
          "in" : "path",
          "description" : "ID of subnet",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Subnet object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "networkId", "availabilityZone", "cidr" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "dhcpEnabled" : {
                  "type" : "boolean"
                },
                "networkId" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "dnsNameServers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "allocationPools" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "start", "end" ],
                    "properties" : {
                      "start" : {
                        "type" : "string"
                      },
                      "end" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "hostRoutes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "destination", "nextHop" ],
                    "properties" : {
                      "destination" : {
                        "type" : "string"
                      },
                      "nextHop" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "ipVersion" : {
                  "type" : "integer"
                },
                "gatewayIp" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "cidr" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "get_k5_network_project_subnet"
      },
      "put" : {
        "summary" : "Update subnet for specified project",
        "operationId" : "update_subnet",
        "parameters" : [ {
          "name" : "subnetId",
          "in" : "path",
          "description" : "ID of subnet",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "dhcpEnabled" : {
                "type" : "boolean"
              },
              "dnsNameServers" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "gatewayIp" : {
                "type" : "string"
              },
              "hostRoutes" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "required" : [ "destination", "nextHop" ],
                  "properties" : {
                    "destination" : {
                      "type" : "string"
                    },
                    "nextHop" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Modified subnet",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "networkId", "availabilityZone", "cidr" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "dhcpEnabled" : {
                  "type" : "boolean"
                },
                "networkId" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "dnsNameServers" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "allocationPools" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "start", "end" ],
                    "properties" : {
                      "start" : {
                        "type" : "string"
                      },
                      "end" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "hostRoutes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "destination", "nextHop" ],
                    "properties" : {
                      "destination" : {
                        "type" : "string"
                      },
                      "nextHop" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "ipVersion" : {
                  "type" : "integer"
                },
                "gatewayIp" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "cidr" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "delete" : {
        "summary" : "Deletes subnet for specified project",
        "parameters" : [ {
          "name" : "subnetId",
          "in" : "path",
          "description" : "ID of subnet",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Subnbet deleted"
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "409" : {
            "description" : "Resource conflict. Unable to remove network",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_subnet"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/securityGroups" : {
      "post" : {
        "summary" : "Create Security Group for specified project",
        "parameters" : [ {
          "name" : "data",
          "in" : "body",
          "description" : "Security Group data",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "description" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        }, {
          "name" : "vmId",
          "in" : "query",
          "required" : false,
          "description" : "Id of VM. Allows to filter resources for specified VM",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Created new Security Group",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "description", "projectId", "rules" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "rules" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "direction" : {
                        "type" : "string"
                      },
                      "ethertype" : {
                        "type" : "string"
                      },
                      "portRangeMax" : {
                        "type" : "integer"
                      },
                      "portRangeMin" : {
                        "type" : "integer"
                      },
                      "protocol" : {
                        "type" : "string",
                        "x-nullable" : true
                      },
                      "cidr" : {
                        "type" : "string",
                        "x-nullable" : true
                      },
                      "securityGroupId" : {
                        "type" : "string"
                      },
                      "projectId" : {
                        "type" : "string"
                      }
                    }
                  },
                  "description" : "List of rules"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "post_k5_network_project_securityGroups"
      },
      "get" : {
        "summary" : "List all Security Groups for specified project",
        "operationId" : "getSecurityGroups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "List of security groups",
              "items" : {
                "type" : "object",
                "required" : [ "id", "name", "description", "projectId", "rules" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "rules" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "direction" : {
                          "type" : "string"
                        },
                        "ethertype" : {
                          "type" : "string"
                        },
                        "portRangeMax" : {
                          "type" : "integer"
                        },
                        "portRangeMin" : {
                          "type" : "integer"
                        },
                        "protocol" : {
                          "type" : "string",
                          "x-nullable" : true
                        },
                        "cidr" : {
                          "type" : "string",
                          "x-nullable" : true
                        },
                        "securityGroupId" : {
                          "type" : "string"
                        },
                        "projectId" : {
                          "type" : "string"
                        }
                      }
                    },
                    "description" : "List of rules"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/securityGroups/{id}" : {
      "get" : {
        "summary" : "Get specified Security Group for specified_project",
        "operationId" : "getSecurityGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Security Group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Security Group with specified ID",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "description", "projectId", "rules" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "rules" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "direction" : {
                        "type" : "string"
                      },
                      "ethertype" : {
                        "type" : "string"
                      },
                      "portRangeMax" : {
                        "type" : "integer"
                      },
                      "portRangeMin" : {
                        "type" : "integer"
                      },
                      "protocol" : {
                        "type" : "string",
                        "x-nullable" : true
                      },
                      "cidr" : {
                        "type" : "string",
                        "x-nullable" : true
                      },
                      "securityGroupId" : {
                        "type" : "string"
                      },
                      "projectId" : {
                        "type" : "string"
                      }
                    }
                  },
                  "description" : "List of rules"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "delete" : {
        "summary" : "Delete specified Security Group for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Security Group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_securityGroup"
      },
      "put" : {
        "summary" : "Update specified Security Group for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Security Group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "Security Group data",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "description" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Updated specified Security Group",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "description", "projectId", "rules" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "rules" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "direction" : {
                        "type" : "string"
                      },
                      "ethertype" : {
                        "type" : "string"
                      },
                      "portRangeMax" : {
                        "type" : "integer"
                      },
                      "portRangeMin" : {
                        "type" : "integer"
                      },
                      "protocol" : {
                        "type" : "string",
                        "x-nullable" : true
                      },
                      "cidr" : {
                        "type" : "string",
                        "x-nullable" : true
                      },
                      "securityGroupId" : {
                        "type" : "string"
                      },
                      "projectId" : {
                        "type" : "string"
                      }
                    }
                  },
                  "description" : "List of rules"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "put_k5_network_project_securityGroup"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/securityGroups/{security_group_id}/rules" : {
      "get" : {
        "summary" : "Get Rules for specified Security Group for specified project",
        "parameters" : [ {
          "name" : "security_group_id",
          "in" : "path",
          "description" : "Security Group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Rules for specified Security Group ID",
            "schema" : {
              "type" : "array",
              "description" : "list of security group rules",
              "items" : {
                "type" : "object",
                "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "direction" : {
                    "type" : "string"
                  },
                  "ethertype" : {
                    "type" : "string"
                  },
                  "portRangeMax" : {
                    "type" : "integer"
                  },
                  "portRangeMin" : {
                    "type" : "integer"
                  },
                  "protocol" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "cidr" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "securityGroupId" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "get_k5_network_project_securityGroup_rules"
      },
      "post" : {
        "summary" : "Create new Rule for specified Security Group",
        "parameters" : [ {
          "name" : "security_group_id",
          "in" : "path",
          "description" : "Security Group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "rule",
          "in" : "body",
          "description" : "Create new Rule for specified Security Group",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "direction" ],
            "properties" : {
              "cidr" : {
                "type" : "string"
              },
              "direction" : {
                "type" : "string",
                "enum" : [ "ingress", "egress" ]
              },
              "protocol" : {
                "type" : "string",
                "enum" : [ "tcp", "udp", "icmp" ]
              },
              "portRangeMin" : {
                "type" : "integer"
              },
              "portRangeMax" : {
                "type" : "integer"
              },
              "remoteGroupId" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Created new Rule for specified Security Group",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "direction" : {
                  "type" : "string"
                },
                "ethertype" : {
                  "type" : "string"
                },
                "portRangeMax" : {
                  "type" : "integer"
                },
                "portRangeMin" : {
                  "type" : "integer"
                },
                "protocol" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "cidr" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "securityGroupId" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "post_k5_network_project_securityGroup_rules"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/securityGroups/{security_group_id}/rules/{security_group_rule_id}" : {
      "get" : {
        "summary" : "Get specified Rule for specified Security Group",
        "parameters" : [ {
          "name" : "security_group_id",
          "in" : "path",
          "description" : "Security Group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "security_group_rule_id",
          "in" : "path",
          "description" : "Security Group Rule ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Security Rule for Specified Security Group",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "direction", "ethertype", "portRangeMax", "portRangeMin", "protocol", "cidr", "securityGroupId", "projectId" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "direction" : {
                  "type" : "string"
                },
                "ethertype" : {
                  "type" : "string"
                },
                "portRangeMax" : {
                  "type" : "integer"
                },
                "portRangeMin" : {
                  "type" : "integer"
                },
                "protocol" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "cidr" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "securityGroupId" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "get_k5_network_project_securityGroup_rule"
      },
      "delete" : {
        "summary" : "Delete specified Security Rule for spacified Security Group",
        "parameters" : [ {
          "name" : "security_group_id",
          "in" : "path",
          "description" : "Security Group ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "security_group_rule_id",
          "in" : "path",
          "description" : "Security Group Rule ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "required" : true,
          "description" : "Id of K5 project",
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : ""
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_securityGroup_rule"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/routers" : {
      "get" : {
        "summary" : "List all routers for specified project",
        "operationId" : "get_routers",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of routers",
            "schema" : {
              "type" : "array",
              "description" : "list of routers",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "adminStateUp" : {
                    "type" : "boolean"
                  },
                  "status" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "externalGatewayInfo" : {
                    "type" : "object",
                    "x-nullable" : true,
                    "properties" : {
                      "networkId" : {
                        "type" : "string",
                        "x-nullable" : true
                      },
                      "enableStat" : {
                        "type" : "string"
                      }
                    }
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  },
                  "routes" : {
                    "type" : "array",
                    "x-nullable" : true,
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "networkId" : {
                          "type" : "string"
                        },
                        "enableStat" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "subscriptionId" : {
                    "type" : "string"
                  },
                  "subscriptionName" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "post" : {
        "summary" : "Create router for specified project",
        "description" : "Create new router",
        "operationId" : "create_router",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "Router data",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "availabilityZone" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "availabilityZone" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "externalGatewayInfo" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "properties" : {
                    "networkId" : {
                      "type" : "string",
                      "x-nullable" : true
                    },
                    "enableStat" : {
                      "type" : "string"
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "routes" : {
                  "type" : "array",
                  "x-nullable" : true,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "networkId" : {
                        "type" : "string"
                      },
                      "enableStat" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/routers/{id}" : {
      "get" : {
        "summary" : "List specified router details",
        "operationId" : "get_router",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "externalGatewayInfo" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "properties" : {
                    "networkId" : {
                      "type" : "string",
                      "x-nullable" : true
                    },
                    "enableStat" : {
                      "type" : "string"
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "routes" : {
                  "type" : "array",
                  "x-nullable" : true,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "networkId" : {
                        "type" : "string"
                      },
                      "enableStat" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "delete" : {
        "summary" : "Delete router for specified project",
        "operationId" : "delete_router",
        "description" : "Delete router",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "put" : {
        "summary" : "Edit router data",
        "operationId" : "edit_router",
        "description" : "Edit router name, adminStateUp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "required" : true,
          "description" : "Details of the router that will be created",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "adminStateUp" : {
                "type" : "boolean"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "externalGatewayInfo" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "properties" : {
                    "networkId" : {
                      "type" : "string",
                      "x-nullable" : true
                    },
                    "enableStat" : {
                      "type" : "string"
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "routes" : {
                  "type" : "array",
                  "x-nullable" : true,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "networkId" : {
                        "type" : "string"
                      },
                      "enableStat" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/routers/{id}/externalGateway" : {
      "delete" : {
        "summary" : "Detach network from router",
        "description" : "Detach network from router",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "externalGatewayInfo" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "properties" : {
                    "networkId" : {
                      "type" : "string",
                      "x-nullable" : true
                    },
                    "enableStat" : {
                      "type" : "string"
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "routes" : {
                  "type" : "array",
                  "x-nullable" : true,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "networkId" : {
                        "type" : "string"
                      },
                      "enableStat" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_router_externalGateway"
      },
      "put" : {
        "summary" : "Attach network to router",
        "description" : "Attach network to router",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "networkId",
          "in" : "body",
          "required" : true,
          "description" : "Network id to attach to router",
          "schema" : {
            "type" : "object",
            "properties" : {
              "networkId" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "externalGatewayInfo" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "properties" : {
                    "networkId" : {
                      "type" : "string",
                      "x-nullable" : true
                    },
                    "enableStat" : {
                      "type" : "string"
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "routes" : {
                  "type" : "array",
                  "x-nullable" : true,
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "networkId" : {
                        "type" : "string"
                      },
                      "enableStat" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "put_k5_network_project_router_externalGateway"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/interfaces" : {
      "get" : {
        "summary" : "List interfaces for specified project",
        "operationId" : "get_interfaces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "vmId",
          "in" : "query",
          "description" : "K5 VM ID to filter interfaces for specified VM",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "deviceId",
          "in" : "query",
          "description" : "K5 deviceId to filter interfaces for specified router",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "networkId",
          "in" : "query",
          "description" : "K5 networkId to filter interfaces for specified network",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of interfaces",
            "schema" : {
              "type" : "array",
              "description" : "list of interfaces",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "adminStateUp" : {
                    "type" : "boolean"
                  },
                  "status" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "portId" : {
                    "type" : "string"
                  },
                  "networkId" : {
                    "type" : "string"
                  },
                  "networkName" : {
                    "type" : "string"
                  },
                  "macAddress" : {
                    "type" : "string"
                  },
                  "ipv4Addresses" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "subnetId" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "ip" : {
                          "type" : "string"
                        },
                        "associatedIp" : {
                          "type" : "string"
                        },
                        "networkId" : {
                          "type" : "string"
                        },
                        "isFloating" : {
                          "type" : "boolean"
                        },
                        "isPublic" : {
                          "type" : "boolean"
                        },
                        "isDirectlyAddociated" : {
                          "type" : "boolean"
                        },
                        "allowedActions" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  },
                  "subscriptionId" : {
                    "type" : "string"
                  },
                  "subscriptionName" : {
                    "type" : "string"
                  },
                  "provisioning" : {
                    "type" : "boolean"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Only one of vmId, deviceId, networkId  can be specified"
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "post" : {
        "summary" : "Create interfaces for specified project",
        "description" : "Create new port",
        "operationId" : "create_interface",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "Interface data",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "availabilityZone", "adminStateUp", "securityGroups", "networkId" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "availabilityZone" : {
                "type" : "string"
              },
              "adminStateUp" : {
                "type" : "boolean"
              },
              "securityGroups" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "networkId" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "portId" : {
                  "type" : "string"
                },
                "networkId" : {
                  "type" : "string"
                },
                "networkName" : {
                  "type" : "string"
                },
                "macAddress" : {
                  "type" : "string"
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subnetId" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "ip" : {
                        "type" : "string"
                      },
                      "associatedIp" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "isDirectlyAddociated" : {
                        "type" : "boolean"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/interfaces/{id}" : {
      "get" : {
        "summary" : "List specified interface details",
        "operationId" : "get_interface",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of interface",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "portId" : {
                  "type" : "string"
                },
                "networkId" : {
                  "type" : "string"
                },
                "networkName" : {
                  "type" : "string"
                },
                "macAddress" : {
                  "type" : "string"
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subnetId" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "ip" : {
                        "type" : "string"
                      },
                      "associatedIp" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "isDirectlyAddociated" : {
                        "type" : "boolean"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "put" : {
        "summary" : "Edit Interface data",
        "operationId" : "edit_interface",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of interface",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "adminStateUp" : {
                "type" : "boolean"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "portId" : {
                  "type" : "string"
                },
                "networkId" : {
                  "type" : "string"
                },
                "networkName" : {
                  "type" : "string"
                },
                "macAddress" : {
                  "type" : "string"
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subnetId" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "ip" : {
                        "type" : "string"
                      },
                      "associatedIp" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "isDirectlyAddociated" : {
                        "type" : "boolean"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "delete" : {
        "summary" : "Delete interface",
        "operationId" : "delete_interface",
        "description" : "Delete interface",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of interface",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/k5/network/projects/{project_id}/interfaces/attach" : {
      "put" : {
        "summary" : "Attach interface to specified router",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "routerId",
          "in" : "query",
          "description" : "Id of a router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subnetId",
          "in" : "query",
          "description" : "Id of a subnet",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "portId",
          "in" : "query",
          "description" : "Id of a port",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "subnetId" : {
                  "type" : "string"
                },
                "portId" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "put_k5_network_project_interfaces_attach"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/interfaces/detach" : {
      "delete" : {
        "summary" : "Detach interface from specified router",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "routerId",
          "in" : "query",
          "description" : "Id of a router",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subnetId",
          "in" : "query",
          "description" : "Id of a subnet",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "portId",
          "in" : "query",
          "description" : "Id of a port",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "subnetId" : {
                  "type" : "string"
                },
                "portId" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "network", "k5" ],
        "operationId" : "delete_k5_network_project_interfaces_detach"
      }
    },
    "/api/v1/k5/network/projects/{project_id}/vms/{vm_id}/interface/{id}" : {
      "put" : {
        "summary" : "Assign interface to VM",
        "operationId" : "assign_interface_to_vm",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of interface",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "description" : "Id of VM",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : false,
          "schema" : {
            "type" : "object",
            "properties" : {
              "networkId" : {
                "type" : "string"
              },
              "fixedIpAddress" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "status" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "portId" : {
                  "type" : "string"
                },
                "networkId" : {
                  "type" : "string"
                },
                "networkName" : {
                  "type" : "string"
                },
                "macAddress" : {
                  "type" : "string"
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subnetId" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "ip" : {
                        "type" : "string"
                      },
                      "associatedIp" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "isDirectlyAddociated" : {
                        "type" : "boolean"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "boolean"
                }
              }
            }
          }
        },
        "tags" : [ "network", "k5" ]
      },
      "delete" : {
        "summary" : "Detach interface from VM",
        "operationId" : "detach_interface_from_vm",
        "description" : "Detach interface",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of interface",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "description" : "Id of VM",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          }
        },
        "tags" : [ "network", "k5" ]
      }
    },
    "/api/v1/openstack/network/interfaces" : {
      "get" : {
        "summary" : "Get interfaces",
        "description" : "Get all interfaces",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of interfaces",
              "items" : {
                "type" : "object",
                "description" : "Interface",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Port id"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "state" : {
                    "type" : "string",
                    "description" : "State, e.g. ACTIVE"
                  },
                  "adminState" : {
                    "type" : "boolean",
                    "description" : "Administrative state"
                  },
                  "macAddress" : {
                    "type" : "string",
                    "description" : "MAC address"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Port name"
                  },
                  "fixedIps" : {
                    "type" : "array",
                    "description" : "List of fixed IPs for a port",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "subnetId" : {
                          "type" : "string",
                          "description" : "Subnet id"
                        },
                        "ipAddress" : {
                          "type" : "string",
                          "description" : "IP address of a port"
                        }
                      }
                    }
                  },
                  "ipv4Addresses" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "description" : "TODO",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "ip" : {
                          "type" : "string"
                        },
                        "associatedIp" : {
                          "type" : "string"
                        },
                        "dnsName" : {
                          "type" : "string"
                        },
                        "networkId" : {
                          "type" : "string"
                        },
                        "subnetId" : {
                          "type" : "string"
                        },
                        "isFloating" : {
                          "type" : "boolean"
                        },
                        "isPublic" : {
                          "type" : "boolean"
                        },
                        "isDirectlyAssociated" : {
                          "type" : "boolean"
                        },
                        "allowedActions" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching list of ports timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_interfaces"
      }
    },
    "/api/v1/openstack/network/interfaces/{interfaceId}" : {
      "get" : {
        "summary" : "Get interface by id",
        "description" : "Get interface by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "interfaceId",
          "in" : "path",
          "required" : true,
          "description" : "Interface id",
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Interface",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Port id"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "state" : {
                  "type" : "string",
                  "description" : "State, e.g. ACTIVE"
                },
                "adminState" : {
                  "type" : "boolean",
                  "description" : "Administrative state"
                },
                "macAddress" : {
                  "type" : "string",
                  "description" : "MAC address"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Port name"
                },
                "fixedIps" : {
                  "type" : "array",
                  "description" : "List of fixed IPs for a port",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subnetId" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      },
                      "ipAddress" : {
                        "type" : "string",
                        "description" : "IP address of a port"
                      }
                    }
                  }
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "description" : "TODO",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "ip" : {
                        "type" : "string"
                      },
                      "associatedIp" : {
                        "type" : "string"
                      },
                      "dnsName" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "subnetId" : {
                        "type" : "string"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Interface does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching interface details timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_interface"
      }
    },
    "/api/v1/openstack/network/vm/{vmId}/interfaces" : {
      "get" : {
        "summary" : "Get interfaces for VM",
        "description" : "Get list of ports for specified VM id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of ports",
              "items" : {
                "type" : "object",
                "description" : "Interface",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Port id"
                  },
                  "networkId" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "state" : {
                    "type" : "string",
                    "description" : "State, e.g. ACTIVE"
                  },
                  "adminState" : {
                    "type" : "boolean",
                    "description" : "Administrative state"
                  },
                  "macAddress" : {
                    "type" : "string",
                    "description" : "MAC address"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Port name"
                  },
                  "fixedIps" : {
                    "type" : "array",
                    "description" : "List of fixed IPs for a port",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "subnetId" : {
                          "type" : "string",
                          "description" : "Subnet id"
                        },
                        "ipAddress" : {
                          "type" : "string",
                          "description" : "IP address of a port"
                        }
                      }
                    }
                  },
                  "ipv4Addresses" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "description" : "TODO",
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "ip" : {
                          "type" : "string"
                        },
                        "associatedIp" : {
                          "type" : "string"
                        },
                        "dnsName" : {
                          "type" : "string"
                        },
                        "networkId" : {
                          "type" : "string"
                        },
                        "subnetId" : {
                          "type" : "string"
                        },
                        "isFloating" : {
                          "type" : "boolean"
                        },
                        "isPublic" : {
                          "type" : "boolean"
                        },
                        "isDirectlyAssociated" : {
                          "type" : "boolean"
                        },
                        "allowedActions" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "VM does not exist"
          },
          "500" : {
            "description" : "Unhandled error occurred."
          },
          "504" : {
            "description" : "Fetching VM information timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_vm_interfaces"
      }
    },
    "/api/v1/openstack/network/vm/{vmId}/interface/{interfaceId}" : {
      "get" : {
        "summary" : "Get interfaces for VM",
        "description" : "Get list of ports for specified VM id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "interfaceId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Interface id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Interface",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Port id"
                },
                "networkId" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "state" : {
                  "type" : "string",
                  "description" : "State, e.g. ACTIVE"
                },
                "adminState" : {
                  "type" : "boolean",
                  "description" : "Administrative state"
                },
                "macAddress" : {
                  "type" : "string",
                  "description" : "MAC address"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Port name"
                },
                "fixedIps" : {
                  "type" : "array",
                  "description" : "List of fixed IPs for a port",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subnetId" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      },
                      "ipAddress" : {
                        "type" : "string",
                        "description" : "IP address of a port"
                      }
                    }
                  }
                },
                "ipv4Addresses" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "description" : "TODO",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "ip" : {
                        "type" : "string"
                      },
                      "associatedIp" : {
                        "type" : "string"
                      },
                      "dnsName" : {
                        "type" : "string"
                      },
                      "networkId" : {
                        "type" : "string"
                      },
                      "subnetId" : {
                        "type" : "string"
                      },
                      "isFloating" : {
                        "type" : "boolean"
                      },
                      "isPublic" : {
                        "type" : "boolean"
                      },
                      "isDirectlyAssociated" : {
                        "type" : "boolean"
                      },
                      "allowedActions" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "VM does not exist or invalid interface id"
          },
          "500" : {
            "description" : "Unhandled error occurred"
          },
          "504" : {
            "description" : "Fetching VM information timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_vm_interface"
      }
    },
    "/api/v1/openstack/network/networks" : {
      "get" : {
        "summary" : "Get networks data",
        "description" : "Get networks data",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of networks",
              "items" : {
                "type" : "object",
                "description" : "Network",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Network id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Network name"
                  },
                  "adminStateUp" : {
                    "type" : "boolean"
                  },
                  "subnets" : {
                    "type" : "array",
                    "description" : "List of subnets",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "subnetId" : {
                          "type" : "string",
                          "description" : "Subnet id"
                        }
                      }
                    }
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Network status e.g. ACTIVE"
                  },
                  "shared" : {
                    "type" : "boolean",
                    "description" : "Specifies if network is shared"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_networks"
      }
    },
    "/api/v1/openstack/network/networks/{network_id}" : {
      "get" : {
        "summary" : "Get network by id",
        "description" : "Get network by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "network_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Network id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Network",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Network id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Network name"
                },
                "adminStateUp" : {
                  "type" : "boolean"
                },
                "subnets" : {
                  "type" : "array",
                  "description" : "List of subnets",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "subnetId" : {
                        "type" : "string",
                        "description" : "Subnet id"
                      }
                    }
                  }
                },
                "status" : {
                  "type" : "string",
                  "description" : "Network status e.g. ACTIVE"
                },
                "shared" : {
                  "type" : "boolean",
                  "description" : "Specifies if network is shared"
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_network"
      }
    },
    "/api/v1/openstack/network/securityGroups" : {
      "get" : {
        "summary" : "Get security groups",
        "description" : "Get security groups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of security groups",
              "items" : {
                "type" : "object",
                "description" : "Security group",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Security group id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Security group name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Security group description"
                  },
                  "rules" : {
                    "type" : "array",
                    "description" : "List of security group rules",
                    "items" : {
                      "type" : "object",
                      "description" : "Security group rule",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Security group id"
                        },
                        "securityGroupId" : {
                          "type" : "string",
                          "description" : "Security group id"
                        },
                        "protocol" : {
                          "type" : "string",
                          "description" : "Protocol e.g. tcp, udp"
                        },
                        "portRangeMin" : {
                          "type" : "integer",
                          "description" : "Minimum port number"
                        },
                        "portRangeMax" : {
                          "type" : "integer",
                          "description" : "Maximum port number"
                        },
                        "cidr" : {
                          "type" : "string",
                          "description" : "CIDR IP address"
                        },
                        "ethertype" : {
                          "type" : "string",
                          "description" : "Ethernet protocol e.g. IPv4, IPv6"
                        },
                        "direction" : {
                          "type" : "string",
                          "description" : "Direction e.g. ingress or egress"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching security groups timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_securityGroups"
      },
      "post" : {
        "summary" : "Create securty group",
        "description" : "Create securty group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "security_group_data",
          "in" : "body",
          "required" : true,
          "description" : "Security group data",
          "schema" : {
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "New security group name"
              },
              "description" : {
                "type" : "string",
                "description" : "Description of new security group"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Security group",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Security group id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Security group name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Security group description"
                },
                "rules" : {
                  "type" : "array",
                  "description" : "List of security group rules",
                  "items" : {
                    "type" : "object",
                    "description" : "Security group rule",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Security group id"
                      },
                      "securityGroupId" : {
                        "type" : "string",
                        "description" : "Security group id"
                      },
                      "protocol" : {
                        "type" : "string",
                        "description" : "Protocol e.g. tcp, udp"
                      },
                      "portRangeMin" : {
                        "type" : "integer",
                        "description" : "Minimum port number"
                      },
                      "portRangeMax" : {
                        "type" : "integer",
                        "description" : "Maximum port number"
                      },
                      "cidr" : {
                        "type" : "string",
                        "description" : "CIDR IP address"
                      },
                      "ethertype" : {
                        "type" : "string",
                        "description" : "Ethernet protocol e.g. IPv4, IPv6"
                      },
                      "direction" : {
                        "type" : "string",
                        "description" : "Direction e.g. ingress or egress"
                      }
                    }
                  }
                }
              }
            }
          },
          "504" : {
            "description" : "Creating new security group timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "post_openstack_network_securityGroups"
      }
    },
    "/api/v1/openstack/network/securityGroups/{securityGroupId}" : {
      "get" : {
        "summary" : "Get security groups",
        "description" : "Get security groups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "securityGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Security group",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Security group id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Security group name"
                },
                "description" : {
                  "type" : "string",
                  "description" : "Security group description"
                },
                "rules" : {
                  "type" : "array",
                  "description" : "List of security group rules",
                  "items" : {
                    "type" : "object",
                    "description" : "Security group rule",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Security group id"
                      },
                      "securityGroupId" : {
                        "type" : "string",
                        "description" : "Security group id"
                      },
                      "protocol" : {
                        "type" : "string",
                        "description" : "Protocol e.g. tcp, udp"
                      },
                      "portRangeMin" : {
                        "type" : "integer",
                        "description" : "Minimum port number"
                      },
                      "portRangeMax" : {
                        "type" : "integer",
                        "description" : "Maximum port number"
                      },
                      "cidr" : {
                        "type" : "string",
                        "description" : "CIDR IP address"
                      },
                      "ethertype" : {
                        "type" : "string",
                        "description" : "Ethernet protocol e.g. IPv4, IPv6"
                      },
                      "direction" : {
                        "type" : "string",
                        "description" : "Direction e.g. ingress or egress"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Exception from neutron"
          },
          "404" : {
            "description" : "Security group does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching security group timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_securityGroup"
      },
      "delete" : {
        "summary" : "Delete security group",
        "description" : "Delete security group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "securityGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Security group does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Deleting security group timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "delete_openstack_network_securityGroup"
      }
    },
    "/api/v1/openstack/network/vm/{vmId}/securityGroups" : {
      "get" : {
        "summary" : "Get security groups for VM",
        "description" : "Get security groups for VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of security groups for VM",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Security group id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Security group name"
                  },
                  "description" : {
                    "type" : "string",
                    "description" : "Security group description"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "VM does not exist"
          },
          "500" : {
            "description" : "Unhandled error occurred"
          },
          "504" : {
            "description" : "Fetching VM information timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_vm_securityGroups"
      }
    },
    "/api/v1/openstack/network/vm/{vmId}/securityGroup/{securityGroupId}" : {
      "put" : {
        "summary" : "Associate security group to a VM",
        "description" : "Associate security group to a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "securityGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "201" : {
            "description" : "Security group was assigned to VM"
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "VM or security group do not exist"
          },
          "500" : {
            "description" : "Unhandled error occurred"
          },
          "504" : {
            "description" : "Fetching VM information timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "put_openstack_network_vm_securityGroup"
      },
      "delete" : {
        "summary" : "Remove security group from a VM",
        "description" : "Remove security group from a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "securityGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "VM or security group do not exist"
          },
          "500" : {
            "description" : "Unhandled error occurred"
          },
          "504" : {
            "description" : "Fetching VM information timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "delete_openstack_network_vm_securityGroup"
      }
    },
    "/api/v1/openstack/network/securityGroups/{securityGroupId}/rules" : {
      "get" : {
        "summary" : "Get rules for security group",
        "description" : "Get rules for security group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "securityGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of rules for a security group",
              "items" : {
                "type" : "object",
                "description" : "Security group rule",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Security group id"
                  },
                  "securityGroupId" : {
                    "type" : "string",
                    "description" : "Security group id"
                  },
                  "protocol" : {
                    "type" : "string",
                    "description" : "Protocol e.g. tcp, udp"
                  },
                  "portRangeMin" : {
                    "type" : "integer",
                    "description" : "Minimum port number"
                  },
                  "portRangeMax" : {
                    "type" : "integer",
                    "description" : "Maximum port number"
                  },
                  "cidr" : {
                    "type" : "string",
                    "description" : "CIDR IP address"
                  },
                  "ethertype" : {
                    "type" : "string",
                    "description" : "Ethernet protocol e.g. IPv4, IPv6"
                  },
                  "direction" : {
                    "type" : "string",
                    "description" : "Direction e.g. ingress or egress"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching security group rules timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_securityGroup_rules"
      },
      "post" : {
        "summary" : "Create security group rule",
        "description" : "Create security group rule",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "securityGroupId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Security group id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Security group rule",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Security group id"
                },
                "securityGroupId" : {
                  "type" : "string",
                  "description" : "Security group id"
                },
                "protocol" : {
                  "type" : "string",
                  "description" : "Protocol e.g. tcp, udp"
                },
                "portRangeMin" : {
                  "type" : "integer",
                  "description" : "Minimum port number"
                },
                "portRangeMax" : {
                  "type" : "integer",
                  "description" : "Maximum port number"
                },
                "cidr" : {
                  "type" : "string",
                  "description" : "CIDR IP address"
                },
                "ethertype" : {
                  "type" : "string",
                  "description" : "Ethernet protocol e.g. IPv4, IPv6"
                },
                "direction" : {
                  "type" : "string",
                  "description" : "Direction e.g. ingress or egress"
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request or invalid parameters: protocol, direction, port range"
          },
          "404" : {
            "description" : "VM does not exist"
          },
          "500" : {
            "description" : "Unhandled error occurred"
          },
          "504" : {
            "description" : "Fetching VM information timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "post_openstack_network_securityGroup_rules"
      }
    },
    "/api/v1/openstack/network/floatingIps" : {
      "get" : {
        "summary" : "Get list of floating IPs",
        "description" : "Get list of floating IPs",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of security groups",
              "items" : {
                "type" : "object",
                "description" : "Floating IP",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Floating IP id"
                  },
                  "interfaceId" : {
                    "type" : "string",
                    "description" : "Interface Id for a floating ip"
                  },
                  "routerId" : {
                    "type" : "string",
                    "description" : "Router id"
                  },
                  "fixedIpAddress" : {
                    "type" : "string",
                    "description" : "Fixed IP address"
                  },
                  "floatingIpAddress" : {
                    "type" : "string",
                    "description" : "Floating IP address"
                  },
                  "floatingNetworkId" : {
                    "type" : "string",
                    "description" : "Network id of the floating ip"
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status e.g. ACTIVE"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching list of floating IPs timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_floatingIps"
      }
    },
    "/api/v1/openstack/network/floatingIps/{floating_ip_id}" : {
      "get" : {
        "summary" : "Get floating IP",
        "description" : "Get floating IP by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "floating_ip_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Floating IP id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Floating IP",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Floating IP id"
                },
                "interfaceId" : {
                  "type" : "string",
                  "description" : "Interface Id for a floating ip"
                },
                "routerId" : {
                  "type" : "string",
                  "description" : "Router id"
                },
                "fixedIpAddress" : {
                  "type" : "string",
                  "description" : "Fixed IP address"
                },
                "floatingIpAddress" : {
                  "type" : "string",
                  "description" : "Floating IP address"
                },
                "floatingNetworkId" : {
                  "type" : "string",
                  "description" : "Network id of the floating ip"
                },
                "status" : {
                  "type" : "string",
                  "description" : "Status e.g. ACTIVE"
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching floating IP timed out"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_floatingIp"
      }
    },
    "/api/v1/openstack/network/vm/{vmId}/floatingIp" : {
      "get" : {
        "summary" : "Get floating IP for VM",
        "description" : "Get floating IP for VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of floating IPs for VM",
              "items" : {
                "type" : "object",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Floating IP id"
                  },
                  "fixedIpAddress" : {
                    "type" : "string",
                    "description" : "Fixed IP address"
                  },
                  "floatingIpAddress" : {
                    "type" : "string",
                    "description" : "Floating IP address"
                  },
                  "instanceId" : {
                    "type" : "string",
                    "description" : "VM id"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "VM not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "get_openstack_network_vm_floatingIp"
      }
    },
    "/api/v1/openstack/network/vms/{vmId}/assignFloatingIp" : {
      "put" : {
        "summary" : "Assign floating IP to a VM",
        "description" : "Automatically associate random free floating IP to a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Floating IP",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Floating IP id"
                },
                "interfaceId" : {
                  "type" : "string",
                  "description" : "Interface Id for a floating ip"
                },
                "routerId" : {
                  "type" : "string",
                  "description" : "Router id"
                },
                "fixedIpAddress" : {
                  "type" : "string",
                  "description" : "Fixed IP address"
                },
                "floatingIpAddress" : {
                  "type" : "string",
                  "description" : "Floating IP address"
                },
                "floatingNetworkId" : {
                  "type" : "string",
                  "description" : "Network id of the floating ip"
                },
                "status" : {
                  "type" : "string",
                  "description" : "Status e.g. ACTIVE"
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "put_openstack_network_vm_assignFloatingIp"
      }
    },
    "/api/v1/openstack/network/vms/{vmId}/unassignFloatingIp" : {
      "delete" : {
        "summary" : "Unassign floating IP from a VM",
        "description" : "Unassign floating IP from a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vmId",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "data",
          "in" : "body",
          "required" : true,
          "description" : "Floating IP information",
          "schema" : {
            "type" : "object",
            "properties" : {
              "floatingIpId" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Unable to unassign floating IP from a given VM"
          }
        },
        "tags" : [ "network", "openstack" ],
        "operationId" : "delete_openstack_network_vm_unassignFloatingIp"
      }
    },
    "/api/v1/notification/email" : {
      "post" : {
        "summary" : "Send email",
        "description" : "Send email",
        "operationId" : "send_email",
        "parameters" : [ {
          "name" : "message",
          "in" : "body",
          "required" : true,
          "description" : "Message data",
          "schema" : {
            "type" : "object",
            "description" : "Send Email",
            "required" : [ "subject", "body", "recipients" ],
            "properties" : {
              "subject" : {
                "type" : "string",
                "description" : "Email subject"
              },
              "body" : {
                "type" : "string",
                "description" : "Email body"
              },
              "recipients" : {
                "type" : "array",
                "description" : "List of recipients email addresses",
                "items" : {
                  "type" : "string"
                }
              },
              "providerId" : {
                "type" : "string",
                "description" : "Optional parameter to specify provider id (managed in config service)"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "unsupported mail provider"
          }
        },
        "tags" : [ "notification" ]
      }
    },
    "/api/v1/policy/workshifts" : {
      "get" : {
        "tags" : [ "workshift", "policy" ],
        "summary" : "Find workshifts",
        "operationId" : "find_workshifts",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vmId",
          "in" : "query",
          "description" : "ID of the VM",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "platformCategory",
          "in" : "query",
          "description" : "Project ID in case of K5. Resource group in case of Azure.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "vmId" : {
                    "type" : "string"
                  },
                  "subscriptionId" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string",
                    "enum" : [ "aws", "openstack", "k5", "azure" ]
                  },
                  "start" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  },
                  "stop" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  },
                  "platformCategory" : {
                    "description" : "Project ID in case of K5. Resource group in case of Azure.",
                    "x-nullable" : true,
                    "type" : "string"
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query params"
          },
          "500" : {
            "description" : "Internal server error"
          }
        }
      },
      "post" : {
        "tags" : [ "workshift", "policy" ],
        "summary" : "Create a workshift",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "workshift",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "subscriptionId", "vmId", "start", "stop" ],
            "properties" : {
              "subscriptionId" : {
                "type" : "string"
              },
              "platformId" : {
                "type" : "string",
                "enum" : [ "aws", "openstack", "k5", "azure" ],
                "x-nullable" : true
              },
              "vmId" : {
                "type" : "string",
                "format" : "uuid"
              },
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "platformCategory" : {
                "description" : "Project ID in case of K5. Resource group in case of Azure.",
                "x-nullable" : true,
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "vmId" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string",
                  "enum" : [ "aws", "openstack", "k5", "azure" ]
                },
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "platformCategory" : {
                  "description" : "Project ID in case of K5. Resource group in case of Azure.",
                  "x-nullable" : true,
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query params"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "operationId" : "post_policy_workshifts"
      }
    },
    "/api/v1/policy/workshifts/{vm_id}" : {
      "put" : {
        "tags" : [ "workshift", "policy" ],
        "summary" : "Update an existing workshift",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "VM id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "workshift",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "vmId" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string",
                  "enum" : [ "aws", "openstack", "k5", "azure" ]
                },
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "platformCategory" : {
                  "description" : "Project ID in case of K5. Resource group in case of Azure.",
                  "x-nullable" : true,
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query params"
          },
          "404" : {
            "description" : "Workshift with given ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "operationId" : "put_policy_workshift"
      },
      "get" : {
        "tags" : [ "workshift", "policy" ],
        "summary" : "Get workshift by vm id",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "VM id",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "platformCategory",
          "in" : "query",
          "description" : "Project ID in case of K5. Resource group in case of Azure.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successful operation",
            "schema" : {
              "type" : "object",
              "properties" : {
                "vmId" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string",
                  "enum" : [ "aws", "openstack", "k5", "azure" ]
                },
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "platformCategory" : {
                  "description" : "Project ID in case of K5. Resource group in case of Azure.",
                  "x-nullable" : true,
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid query params"
          },
          "404" : {
            "description" : "Workshift with given VM ID not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "operationId" : "get_policy_workshift"
      },
      "delete" : {
        "tags" : [ "workshift", "policy" ],
        "summary" : "Delete a workshift",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "VM id to delete workshift for",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "platformCategory",
          "in" : "query",
          "description" : "Project ID in case of K5. Resource group in case of Azure.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Workshift deleted"
          },
          "400" : {
            "description" : "Invalid VM ID supplied"
          },
          "404" : {
            "description" : "Workshift not found"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "operationId" : "delete_policy_workshift"
      }
    },
    "/api/v1/subscription/subscriptions" : {
      "get" : {
        "summary" : "Get subscriptions",
        "description" : "Retrieve list of all subscriptions",
        "operationId" : "get_all",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "type" : "string",
          "description" : "Return only subscriptions to which given user has an access to"
        }, {
          "name" : "platformId",
          "in" : "query",
          "type" : "string",
          "description" : "Filter subscription by given platform id (openStack , aws, k5, ...)."
        } ],
        "responses" : {
          "200" : {
            "description" : "List of subscriptions",
            "schema" : {
              "type" : "array",
              "description" : "List of subscriptions",
              "items" : {
                "type" : "object",
                "required" : [ "id", "platformId", "name", "ownerId", "regionId" ],
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Id of a subscription"
                  },
                  "platformId" : {
                    "type" : "string",
                    "description" : "Id of a platform"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Name of a subscription"
                  },
                  "regionId" : {
                    "type" : "string",
                    "description" : "Region of a subscription"
                  },
                  "ownerId" : {
                    "type" : "string",
                    "description" : "Id of a subscription owner"
                  },
                  "provisioning" : {
                    "type" : "boolean",
                    "description" : "States if provisioning is enabled",
                    "x-deprecated" : true
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "Date when subscription was created",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "Date of last subscription update",
                    "readOnly" : true
                  },
                  "contractId" : {
                    "type" : "string",
                    "description" : "Subscription contract id for OpenStack|K5 account"
                  },
                  "username" : {
                    "type" : "string",
                    "description" : "Subscription username for OpenStack|subscription"
                  },
                  "password" : {
                    "type" : "string",
                    "description" : "Password for a subscription for Openstack|K5 subscription"
                  },
                  "accessKey" : {
                    "type" : "string",
                    "description" : "Access key ID for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                  },
                  "secretKey" : {
                    "type" : "string",
                    "description" : "Secret access key for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                  },
                  "tenantId" : {
                    "type" : "string",
                    "description" : "Tenant ID for Azure."
                  },
                  "platformSubscriptionId" : {
                    "type" : "string",
                    "description" : "Subscription ID for Azure."
                  },
                  "policy" : {
                    "type" : "object",
                    "description" : "Policy definition",
                    "properties" : {
                      "management" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "monitoring" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "backup" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "patching" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "workloadManagement" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "workshiftRule" : {
                        "type" : "object",
                        "properties" : {
                          "status" : {
                            "type" : "string",
                            "enum" : [ "optional", "required", "disabled" ]
                          },
                          "defaultWorkshift" : {
                            "type" : "object",
                            "description" : "Workshift definition",
                            "properties" : {
                              "start" : {
                                "type" : "object",
                                "properties" : {
                                  "minute" : {
                                    "type" : "integer",
                                    "minimum" : 0,
                                    "maximum" : 59
                                  },
                                  "hour" : {
                                    "type" : "integer",
                                    "minimum" : 0,
                                    "maximum" : 23
                                  },
                                  "days" : {
                                    "type" : "array",
                                    "minItems" : 1,
                                    "items" : {
                                      "type" : "string",
                                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                    },
                                    "uniqueItems" : true
                                  }
                                },
                                "x-nullable" : true
                              },
                              "stop" : {
                                "type" : "object",
                                "properties" : {
                                  "minute" : {
                                    "type" : "integer",
                                    "minimum" : 0,
                                    "maximum" : 59
                                  },
                                  "hour" : {
                                    "type" : "integer",
                                    "minimum" : 0,
                                    "maximum" : 23
                                  },
                                  "days" : {
                                    "type" : "array",
                                    "minItems" : 1,
                                    "items" : {
                                      "type" : "string",
                                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                    },
                                    "uniqueItems" : true
                                  }
                                },
                                "x-nullable" : true
                              }
                            },
                            "x-nullable" : true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request parameters/data",
            "schema" : {
              "type" : "object",
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "subscription" ]
      },
      "post" : {
        "summary" : "Create subscription",
        "description" : "Create new subscription. Provided credentials are validated against target platform",
        "operationId" : "create",
        "parameters" : [ {
          "name" : "subscription",
          "in" : "body",
          "required" : true,
          "description" : "Details of the subscription that will be created",
          "schema" : {
            "type" : "object",
            "required" : [ "platformId", "name", "policy", "regionId" ],
            "properties" : {
              "platformId" : {
                "type" : "string",
                "description" : "Id of a platform"
              },
              "name" : {
                "type" : "string",
                "description" : "Name of a subscription. Must be 1 to 32 char long, no trailing whitespace allowed.",
                "pattern" : "^[\\w-][\\w -]{,31}(?<! )$"
              },
              "provisioning" : {
                "type" : "boolean",
                "description" : "States if provisioning is enabled",
                "x-deprecated" : true
              },
              "contractId" : {
                "type" : "string",
                "description" : "Subscription contract id for OpenStack|K5 account"
              },
              "username" : {
                "type" : "string",
                "description" : "Subscription username for OpenStack|subscription"
              },
              "password" : {
                "type" : "string",
                "description" : "Password for a subscription for Openstack|K5 subscription"
              },
              "accessKey" : {
                "type" : "string",
                "description" : "Access key ID for AWS subscription. Parameter for AWS subscription only"
              },
              "secretKey" : {
                "type" : "string",
                "description" : "Secret access key for AWS subscription. Parameter for AWS subscription only"
              },
              "policy" : {
                "type" : "object",
                "description" : "Policy definition",
                "properties" : {
                  "management" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "monitoring" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "backup" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "patching" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workloadManagement" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workshiftRule" : {
                    "type" : "object",
                    "properties" : {
                      "status" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "defaultWorkshift" : {
                        "type" : "object",
                        "description" : "Workshift definition",
                        "properties" : {
                          "start" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          },
                          "stop" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          }
                        },
                        "x-nullable" : true
                      }
                    }
                  }
                }
              },
              "regionId" : {
                "type" : "string",
                "description" : "Region of a subscription"
              }
            }
          }
        }, {
          "name" : "userid",
          "in" : "header",
          "required" : true,
          "type" : "string",
          "description" : "User ID"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "platformId", "name", "ownerId", "regionId" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Id of a subscription"
                },
                "platformId" : {
                  "type" : "string",
                  "description" : "Id of a platform"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of a subscription"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region of a subscription"
                },
                "ownerId" : {
                  "type" : "string",
                  "description" : "Id of a subscription owner"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled",
                  "x-deprecated" : true
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "Date when subscription was created",
                  "readOnly" : true
                },
                "updatedAt" : {
                  "type" : "string",
                  "description" : "Date of last subscription update",
                  "readOnly" : true
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Subscription contract id for OpenStack|K5 account"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Subscription username for OpenStack|subscription"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password for a subscription for Openstack|K5 subscription"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key ID for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                },
                "tenantId" : {
                  "type" : "string",
                  "description" : "Tenant ID for Azure."
                },
                "platformSubscriptionId" : {
                  "type" : "string",
                  "description" : "Subscription ID for Azure."
                },
                "policy" : {
                  "type" : "object",
                  "description" : "Policy definition",
                  "properties" : {
                    "management" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "monitoring" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "backup" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "patching" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "workloadManagement" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "workshiftRule" : {
                      "type" : "object",
                      "properties" : {
                        "status" : {
                          "type" : "string",
                          "enum" : [ "optional", "required", "disabled" ]
                        },
                        "defaultWorkshift" : {
                          "type" : "object",
                          "description" : "Workshift definition",
                          "properties" : {
                            "start" : {
                              "type" : "object",
                              "properties" : {
                                "minute" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 59
                                },
                                "hour" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 23
                                },
                                "days" : {
                                  "type" : "array",
                                  "minItems" : 1,
                                  "items" : {
                                    "type" : "string",
                                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                  },
                                  "uniqueItems" : true
                                }
                              },
                              "x-nullable" : true
                            },
                            "stop" : {
                              "type" : "object",
                              "properties" : {
                                "minute" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 59
                                },
                                "hour" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 23
                                },
                                "days" : {
                                  "type" : "array",
                                  "minItems" : 1,
                                  "items" : {
                                    "type" : "string",
                                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                  },
                                  "uniqueItems" : true
                                }
                              },
                              "x-nullable" : true
                            }
                          },
                          "x-nullable" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid parameters or credentials validation failure"
          },
          "500" : {
            "description" : "Subscription validation failed",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "subscription" ]
      }
    },
    "/api/v1/subscription/subscriptions/{subscription_id}" : {
      "get" : {
        "summary" : "Get subscription",
        "description" : "Get single subscription for specified subscription_id",
        "operationId" : "get_one",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Id of a subscription"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "platformId", "name", "ownerId", "regionId" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Id of a subscription"
                },
                "platformId" : {
                  "type" : "string",
                  "description" : "Id of a platform"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of a subscription"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region of a subscription"
                },
                "ownerId" : {
                  "type" : "string",
                  "description" : "Id of a subscription owner"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled",
                  "x-deprecated" : true
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "Date when subscription was created",
                  "readOnly" : true
                },
                "updatedAt" : {
                  "type" : "string",
                  "description" : "Date of last subscription update",
                  "readOnly" : true
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Subscription contract id for OpenStack|K5 account"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Subscription username for OpenStack|subscription"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password for a subscription for Openstack|K5 subscription"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key ID for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                },
                "tenantId" : {
                  "type" : "string",
                  "description" : "Tenant ID for Azure."
                },
                "platformSubscriptionId" : {
                  "type" : "string",
                  "description" : "Subscription ID for Azure."
                },
                "policy" : {
                  "type" : "object",
                  "description" : "Policy definition",
                  "properties" : {
                    "management" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "monitoring" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "backup" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "patching" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "workloadManagement" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "workshiftRule" : {
                      "type" : "object",
                      "properties" : {
                        "status" : {
                          "type" : "string",
                          "enum" : [ "optional", "required", "disabled" ]
                        },
                        "defaultWorkshift" : {
                          "type" : "object",
                          "description" : "Workshift definition",
                          "properties" : {
                            "start" : {
                              "type" : "object",
                              "properties" : {
                                "minute" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 59
                                },
                                "hour" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 23
                                },
                                "days" : {
                                  "type" : "array",
                                  "minItems" : 1,
                                  "items" : {
                                    "type" : "string",
                                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                  },
                                  "uniqueItems" : true
                                }
                              },
                              "x-nullable" : true
                            },
                            "stop" : {
                              "type" : "object",
                              "properties" : {
                                "minute" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 59
                                },
                                "hour" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 23
                                },
                                "days" : {
                                  "type" : "array",
                                  "minItems" : 1,
                                  "items" : {
                                    "type" : "string",
                                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                  },
                                  "uniqueItems" : true
                                }
                              },
                              "x-nullable" : true
                            }
                          },
                          "x-nullable" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "No subscription for given id"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "subscription" ]
      },
      "delete" : {
        "summary" : "Delete subscription",
        "description" : "Delete subscription for given id",
        "operationId" : "delete",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Id of a subscription"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "No subscription for given id"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "subscription" ]
      },
      "put" : {
        "summary" : "Modify subscription",
        "description" : "Modify subscription for given id",
        "operationId" : "update",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Id of a subscription"
        }, {
          "name" : "subscription",
          "in" : "body",
          "required" : true,
          "description" : "Details of the subscription that will be created",
          "schema" : {
            "type" : "object",
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name of a subscription. Must be 1 to 32 char long, no trailing whitespace allowed.",
                "pattern" : "^[\\w-][\\w -]{,31}(?<! )$"
              },
              "provisioning" : {
                "type" : "boolean",
                "description" : "States if provisioning is enabled",
                "x-deprecated" : true
              },
              "contractId" : {
                "type" : "string",
                "description" : "Subscription contract id for OpenStack|K5 account"
              },
              "username" : {
                "type" : "string",
                "description" : "Subscription username for OpenStack|subscription"
              },
              "password" : {
                "type" : "string",
                "description" : "Password for a subscription for Openstack|K5 subscription"
              },
              "accessKey" : {
                "type" : "string",
                "description" : "Access key ID for AWS subscription. Parameter for AWS subscription only"
              },
              "secretKey" : {
                "type" : "string",
                "description" : "Secret access key for AWS subscription. Parameter for AWS subscription only"
              },
              "policy" : {
                "type" : "object",
                "description" : "Policy definition",
                "properties" : {
                  "management" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "monitoring" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "backup" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "patching" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workloadManagement" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workshiftRule" : {
                    "type" : "object",
                    "properties" : {
                      "status" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "defaultWorkshift" : {
                        "type" : "object",
                        "description" : "Workshift definition",
                        "properties" : {
                          "start" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          },
                          "stop" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          }
                        },
                        "x-nullable" : true
                      }
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "platformId", "name", "ownerId", "regionId" ],
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Id of a subscription"
                },
                "platformId" : {
                  "type" : "string",
                  "description" : "Id of a platform"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Name of a subscription"
                },
                "regionId" : {
                  "type" : "string",
                  "description" : "Region of a subscription"
                },
                "ownerId" : {
                  "type" : "string",
                  "description" : "Id of a subscription owner"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled",
                  "x-deprecated" : true
                },
                "createdAt" : {
                  "type" : "string",
                  "description" : "Date when subscription was created",
                  "readOnly" : true
                },
                "updatedAt" : {
                  "type" : "string",
                  "description" : "Date of last subscription update",
                  "readOnly" : true
                },
                "contractId" : {
                  "type" : "string",
                  "description" : "Subscription contract id for OpenStack|K5 account"
                },
                "username" : {
                  "type" : "string",
                  "description" : "Subscription username for OpenStack|subscription"
                },
                "password" : {
                  "type" : "string",
                  "description" : "Password for a subscription for Openstack|K5 subscription"
                },
                "accessKey" : {
                  "type" : "string",
                  "description" : "Access key ID for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                },
                "secretKey" : {
                  "type" : "string",
                  "description" : "Secret access key for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"
                },
                "tenantId" : {
                  "type" : "string",
                  "description" : "Tenant ID for Azure."
                },
                "platformSubscriptionId" : {
                  "type" : "string",
                  "description" : "Subscription ID for Azure."
                },
                "policy" : {
                  "type" : "object",
                  "description" : "Policy definition",
                  "properties" : {
                    "management" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "monitoring" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "backup" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "patching" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "workloadManagement" : {
                      "type" : "string",
                      "enum" : [ "optional", "required", "disabled" ]
                    },
                    "workshiftRule" : {
                      "type" : "object",
                      "properties" : {
                        "status" : {
                          "type" : "string",
                          "enum" : [ "optional", "required", "disabled" ]
                        },
                        "defaultWorkshift" : {
                          "type" : "object",
                          "description" : "Workshift definition",
                          "properties" : {
                            "start" : {
                              "type" : "object",
                              "properties" : {
                                "minute" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 59
                                },
                                "hour" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 23
                                },
                                "days" : {
                                  "type" : "array",
                                  "minItems" : 1,
                                  "items" : {
                                    "type" : "string",
                                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                  },
                                  "uniqueItems" : true
                                }
                              },
                              "x-nullable" : true
                            },
                            "stop" : {
                              "type" : "object",
                              "properties" : {
                                "minute" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 59
                                },
                                "hour" : {
                                  "type" : "integer",
                                  "minimum" : 0,
                                  "maximum" : 23
                                },
                                "days" : {
                                  "type" : "array",
                                  "minItems" : 1,
                                  "items" : {
                                    "type" : "string",
                                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                  },
                                  "uniqueItems" : true
                                }
                              },
                              "x-nullable" : true
                            }
                          },
                          "x-nullable" : true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "204" : {
            "description" : "No parameter to modify given"
          },
          "400" : {
            "description" : "Parameter that cannot be modified given or invalid credentials"
          },
          "404" : {
            "description" : "No subscription for given id"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "subscription" ]
      }
    },
    "/api/v1/subscription/subscriptions/{subscription_id}/tokens" : {
      "get" : {
        "summary" : "Get token",
        "description" : "Get token for a subscription",
        "operationId" : "get_token",
        "parameters" : [ {
          "name" : "subscription_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Id of a subscription"
        }, {
          "name" : "projectId",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "description" : "Generate token for given project Id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Subscription token",
              "properties" : {
                "token" : {
                  "type" : "string",
                  "description" : "token"
                },
                "services" : {
                  "type" : "object",
                  "description" : "URLs to the platform services",
                  "properties" : {
                    "compute" : {
                      "type" : "string"
                    },
                    "volumev2" : {
                      "type" : "string"
                    },
                    "image" : {
                      "type" : "string"
                    },
                    "cloudformation" : {
                      "type" : "string"
                    },
                    "orchestration" : {
                      "type" : "string"
                    },
                    "network" : {
                      "type" : "string"
                    },
                    "identity" : {
                      "type" : "string"
                    },
                    "volume" : {
                      "type" : "string"
                    }
                  }
                },
                "domainId" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "userId" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Id of a subscription",
                  "readOnly" : true
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Name of a subscription"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled",
                  "x-deprecated" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Platform not supported"
          },
          "500" : {
            "description" : "Error during fetching token from platform"
          }
        },
        "tags" : [ "subscription" ]
      }
    },
    "/api/v1/subscription/validateVm" : {
      "put" : {
        "description" : "Validate a VM against a policy.",
        "parameters" : [ {
          "name" : "parameters",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "policy" : {
                "type" : "object",
                "description" : "Policy definition",
                "properties" : {
                  "management" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "monitoring" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "backup" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "patching" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workloadManagement" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workshiftRule" : {
                    "type" : "object",
                    "properties" : {
                      "status" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "defaultWorkshift" : {
                        "type" : "object",
                        "description" : "Workshift definition",
                        "properties" : {
                          "start" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          },
                          "stop" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          }
                        },
                        "x-nullable" : true
                      }
                    }
                  }
                }
              },
              "vm" : {
                "type" : "object",
                "properties" : {
                  "managementEnabled" : {
                    "type" : "boolean"
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "workshift" : {
                    "type" : "object",
                    "description" : "Workshift definition",
                    "properties" : {
                      "start" : {
                        "type" : "object",
                        "properties" : {
                          "minute" : {
                            "type" : "integer",
                            "minimum" : 0,
                            "maximum" : 59
                          },
                          "hour" : {
                            "type" : "integer",
                            "minimum" : 0,
                            "maximum" : 23
                          },
                          "days" : {
                            "type" : "array",
                            "minItems" : 1,
                            "items" : {
                              "type" : "string",
                              "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                            },
                            "uniqueItems" : true
                          }
                        },
                        "x-nullable" : true
                      },
                      "stop" : {
                        "type" : "object",
                        "properties" : {
                          "minute" : {
                            "type" : "integer",
                            "minimum" : 0,
                            "maximum" : 59
                          },
                          "hour" : {
                            "type" : "integer",
                            "minimum" : 0,
                            "maximum" : 23
                          },
                          "days" : {
                            "type" : "array",
                            "minItems" : 1,
                            "items" : {
                              "type" : "string",
                              "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                            },
                            "uniqueItems" : true
                          }
                        },
                        "x-nullable" : true
                      }
                    },
                    "x-nullable" : true
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Validation completed. Response will contain `message` property describing the reason for the failure, `isCompliant` will be set to `false` in this case. Response will be `{isCompliant: true}` in case of successfull validation.",
            "schema" : {
              "type" : "object",
              "required" : [ "isCompliant" ],
              "properties" : {
                "isCompliant" : {
                  "type" : "boolean"
                },
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "subscription" ],
        "operationId" : "put_subscription_validateVm"
      }
    },
    "/api/v1/subscription/validateWorkshift" : {
      "put" : {
        "description" : "Validate a workshift against a policy.",
        "parameters" : [ {
          "name" : "parameters",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "policy" : {
                "type" : "object",
                "description" : "Policy definition",
                "properties" : {
                  "management" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "monitoring" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "backup" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "patching" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workloadManagement" : {
                    "type" : "string",
                    "enum" : [ "optional", "required", "disabled" ]
                  },
                  "workshiftRule" : {
                    "type" : "object",
                    "properties" : {
                      "status" : {
                        "type" : "string",
                        "enum" : [ "optional", "required", "disabled" ]
                      },
                      "defaultWorkshift" : {
                        "type" : "object",
                        "description" : "Workshift definition",
                        "properties" : {
                          "start" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          },
                          "stop" : {
                            "type" : "object",
                            "properties" : {
                              "minute" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 59
                              },
                              "hour" : {
                                "type" : "integer",
                                "minimum" : 0,
                                "maximum" : 23
                              },
                              "days" : {
                                "type" : "array",
                                "minItems" : 1,
                                "items" : {
                                  "type" : "string",
                                  "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                                },
                                "uniqueItems" : true
                              }
                            },
                            "x-nullable" : true
                          }
                        },
                        "x-nullable" : true
                      }
                    }
                  }
                }
              },
              "workshift" : {
                "type" : "object",
                "description" : "Workshift definition",
                "properties" : {
                  "start" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    },
                    "x-nullable" : true
                  },
                  "stop" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    },
                    "x-nullable" : true
                  }
                },
                "x-nullable" : true
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Validation completed. Response will contain `message` property describing the reason for the failure, `isCompliant` will be set to `false` in this case. Response will be `{isCompliant: true}` in case of successful validation.",
            "schema" : {
              "type" : "object",
              "required" : [ "isCompliant" ],
              "properties" : {
                "isCompliant" : {
                  "type" : "boolean"
                },
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "subscription" ],
        "operationId" : "put_subscription_validateWorkshift"
      }
    },
    "/api/v1/tag/tags" : {
      "get" : {
        "description" : "Returns a list of all tags with values",
        "operationId" : "getTags",
        "responses" : {
          "200" : {
            "description" : "An array of Tag objects",
            "schema" : {
              "items" : {
                "properties" : {
                  "isRequired" : {
                    "type" : "boolean"
                  },
                  "name" : {
                    "maxLength" : 60,
                    "minLength" : 1,
                    "pattern" : "^[a-zA-Z0-9_-]+$",
                    "type" : "string"
                  },
                  "values" : {
                    "items" : {
                      "maxLength" : 60,
                      "minLength" : 1,
                      "pattern" : "^[a-zA-Z0-9_-]+$",
                      "type" : "string"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "name", "isRequired", "values" ],
                "type" : "object"
              },
              "type" : "array"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database is unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "tag" ]
      },
      "post" : {
        "description" : "Creates tag with given name and values",
        "operationId" : "createTag",
        "parameters" : [ {
          "description" : "The details of tag that will be created",
          "in" : "body",
          "name" : "tag",
          "required" : true,
          "schema" : {
            "properties" : {
              "isRequired" : {
                "type" : "boolean"
              },
              "name" : {
                "maxLength" : 60,
                "minLength" : 1,
                "pattern" : "^[a-zA-Z0-9_-]+$",
                "type" : "string"
              },
              "values" : {
                "items" : {
                  "maxLength" : 60,
                  "minLength" : 1,
                  "pattern" : "^[a-zA-Z0-9_-]+$",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "required" : [ "name", "isRequired", "values" ],
            "type" : "object"
          }
        }, {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        } ],
        "responses" : {
          "200" : {
            "description" : "The newly created tag",
            "schema" : {
              "properties" : {
                "isRequired" : {
                  "type" : "boolean"
                },
                "name" : {
                  "maxLength" : 60,
                  "minLength" : 1,
                  "pattern" : "^[a-zA-Z0-9_-]+$",
                  "type" : "string"
                },
                "values" : {
                  "items" : {
                    "maxLength" : 60,
                    "minLength" : 1,
                    "pattern" : "^[a-zA-Z0-9_-]+$",
                    "type" : "string"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "name", "isRequired", "values" ],
              "type" : "object"
            }
          },
          "400" : {
            "description" : "Invalid json payload",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Insufficient access rights",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database is unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "tag" ]
      }
    },
    "/api/v1/tag/tags/{tagName}" : {
      "delete" : {
        "description" : "Delete tag with given name",
        "operationId" : "deleteTag",
        "parameters" : [ {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        }, {
          "in" : "path",
          "name" : "tagName",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted tag"
          },
          "400" : {
            "description" : "Invalid roles",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Insufficient access rights",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown tagId",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database is unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "tag" ]
      },
      "get" : {
        "operationId" : "getTag",
        "responses" : {
          "200" : {
            "description" : "The tag data for given name",
            "schema" : {
              "properties" : {
                "isRequired" : {
                  "type" : "boolean"
                },
                "name" : {
                  "maxLength" : 60,
                  "minLength" : 1,
                  "pattern" : "^[a-zA-Z0-9_-]+$",
                  "type" : "string"
                },
                "values" : {
                  "items" : {
                    "maxLength" : 60,
                    "minLength" : 1,
                    "pattern" : "^[a-zA-Z0-9_-]+$",
                    "type" : "string"
                  },
                  "type" : "array"
                }
              },
              "required" : [ "name", "isRequired", "values" ],
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown tagName",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database is unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "summary" : "Returns the specified tag",
        "tags" : [ "tag" ],
        "parameters" : [ {
          "in" : "path",
          "name" : "tagName",
          "required" : true,
          "type" : "string"
        } ]
      },
      "put" : {
        "description" : "Update some fields of a tag",
        "operationId" : "updateTag",
        "parameters" : [ {
          "description" : "The details of tag that will be updated",
          "in" : "body",
          "name" : "tag",
          "required" : true,
          "schema" : {
            "properties" : {
              "isRequired" : {
                "type" : "boolean"
              },
              "values" : {
                "items" : {
                  "maxLength" : 60,
                  "minLength" : 1,
                  "pattern" : "^[a-zA-Z0-9_-]+$",
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "required" : [ "isRequired", "values" ],
            "type" : "object"
          }
        }, {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        }, {
          "in" : "path",
          "name" : "tagName",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated tag"
          },
          "400" : {
            "description" : "Invalid roles",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Insufficient access rights",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown tagId",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database is unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "tag" ]
      }
    },
    "/api/v1/auth/checkCredentials" : {
      "post" : {
        "operationId" : "checkCredentials",
        "parameters" : [ {
          "in" : "body",
          "name" : "credentials",
          "required" : true,
          "schema" : {
            "properties" : {
              "email" : {
                "type" : "string"
              },
              "password" : {
                "format" : "password",
                "maxLength" : 72,
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "email", "password" ],
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The user with those credentials",
            "schema" : {
              "properties" : {
                "email" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "roles" : {
                  "items" : {
                    "enum" : [ "read", "write", "admin" ],
                    "type" : "string"
                  },
                  "minItems" : 1,
                  "type" : "array",
                  "uniqueItems" : true
                }
              },
              "required" : [ "id", "name", "email", "roles" ],
              "type" : "object"
            }
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Invalid credentials",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/auth/forgotPassword" : {
      "post" : {
        "operationId" : "forgotPassword",
        "parameters" : [ {
          "in" : "body",
          "name" : "forgottenPassword",
          "required" : true,
          "schema" : {
            "properties" : {
              "email" : {
                "type" : "string"
              }
            },
            "required" : [ "email" ],
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Password reset request successfully received"
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Cannot send the password reset email or database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/auth/resetPassword" : {
      "post" : {
        "operationId" : "resetPassword",
        "parameters" : [ {
          "in" : "body",
          "name" : "passwordReset",
          "required" : true,
          "schema" : {
            "properties" : {
              "email" : {
                "type" : "string"
              },
              "newPassword" : {
                "format" : "password",
                "maxLength" : 72,
                "minLength" : 1,
                "type" : "string"
              },
              "token" : {
                "type" : "string"
              }
            },
            "required" : [ "email", "token", "newPassword" ],
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Password successfully reset"
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Invalid token",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/auth/users" : {
      "get" : {
        "operationId" : "getUsers",
        "responses" : {
          "200" : {
            "description" : "All users in the database",
            "schema" : {
              "items" : {
                "properties" : {
                  "email" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "roles" : {
                    "items" : {
                      "enum" : [ "read", "write", "admin" ],
                      "type" : "string"
                    },
                    "minItems" : 1,
                    "type" : "array",
                    "uniqueItems" : true
                  }
                },
                "required" : [ "id", "name", "email", "roles" ],
                "type" : "object"
              },
              "type" : "array"
            }
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Admin rights are required",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ],
        "parameters" : [ {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        } ]
      },
      "post" : {
        "operationId" : "createUser",
        "parameters" : [ {
          "in" : "body",
          "name" : "user",
          "required" : true,
          "schema" : {
            "properties" : {
              "email" : {
                "minLength" : 1,
                "type" : "string"
              },
              "id" : {
                "type" : "string"
              },
              "name" : {
                "minLength" : 1,
                "type" : "string"
              },
              "roles" : {
                "items" : {
                  "enum" : [ "read", "write", "admin" ],
                  "type" : "string"
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "id", "name", "email", "roles" ],
            "type" : "object"
          }
        }, {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        } ],
        "responses" : {
          "200" : {
            "description" : "The newly created user",
            "schema" : {
              "properties" : {
                "email" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "roles" : {
                  "items" : {
                    "enum" : [ "read", "write", "admin" ],
                    "type" : "string"
                  },
                  "minItems" : 1,
                  "type" : "array",
                  "uniqueItems" : true
                }
              },
              "required" : [ "id", "name", "email", "roles" ],
              "type" : "object"
            }
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Admin rights are required",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Cannot send the password reset email or database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/auth/users/{userId}" : {
      "delete" : {
        "operationId" : "deleteUser",
        "parameters" : [ {
          "in" : "header",
          "name" : "userId",
          "type" : "string"
        }, {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        }, {
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the user"
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Admin rights are required and admins cannot delete themselves",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown user id",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      },
      "get" : {
        "operationId" : "getUser",
        "parameters" : [ {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        }, {
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The user with the given user id",
            "schema" : {
              "properties" : {
                "email" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "roles" : {
                  "items" : {
                    "enum" : [ "read", "write", "admin" ],
                    "type" : "string"
                  },
                  "minItems" : 1,
                  "type" : "array",
                  "uniqueItems" : true
                }
              },
              "required" : [ "id", "name", "email", "roles" ],
              "type" : "object"
            }
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Admin rights are required",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown user id",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      },
      "put" : {
        "operationId" : "updateUser",
        "parameters" : [ {
          "in" : "body",
          "name" : "update",
          "required" : true,
          "schema" : {
            "properties" : {
              "name" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "name" ],
            "type" : "object"
          }
        }, {
          "in" : "header",
          "name" : "userId",
          "type" : "string"
        }, {
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated the user"
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Users can only update their own data",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown user id",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/auth/users/{userId}/setPassword" : {
      "put" : {
        "operationId" : "setPassword",
        "parameters" : [ {
          "in" : "body",
          "name" : "email",
          "required" : true,
          "schema" : {
            "properties" : {
              "currentPassword" : {
                "format" : "password",
                "maxLength" : 72,
                "minLength" : 1,
                "type" : "string"
              },
              "newPassword" : {
                "format" : "password",
                "maxLength" : 72,
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "currentPassword", "newPassword" ],
            "type" : "object"
          }
        }, {
          "in" : "header",
          "name" : "userId",
          "type" : "string"
        }, {
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated the password"
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Cannot change another user's password and the old password must be correct",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown user id",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/auth/users/{userId}/setRoles" : {
      "put" : {
        "operationId" : "setRoles",
        "parameters" : [ {
          "in" : "body",
          "name" : "rolesUpdate",
          "required" : true,
          "schema" : {
            "properties" : {
              "roles" : {
                "items" : {
                  "enum" : [ "read", "write", "admin" ],
                  "type" : "string"
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "roles" ],
            "type" : "object"
          }
        }, {
          "in" : "header",
          "name" : "userId",
          "type" : "string"
        }, {
          "in" : "path",
          "name" : "userId",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "header",
          "items" : {
            "enum" : [ "read", "write", "admin" ],
            "type" : "string"
          },
          "name" : "roles",
          "type" : "array"
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated the roles"
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Admin rights are required and admins cannot change their own roles",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "Unknown user id",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/auth/validateToken" : {
      "post" : {
        "operationId" : "validateToken",
        "parameters" : [ {
          "in" : "body",
          "name" : "token",
          "required" : true,
          "schema" : {
            "properties" : {
              "email" : {
                "type" : "string"
              },
              "token" : {
                "type" : "string"
              }
            },
            "required" : [ "email", "token" ],
            "type" : "object"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Valid token"
          },
          "400" : {
            "description" : "Input data is invalid",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "403" : {
            "description" : "Invalid or unknown token",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "404" : {
            "description" : "No user for this token found",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "503" : {
            "description" : "Database unavailable",
            "schema" : {
              "x-error" : true,
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "tags" : [ "auth" ]
      }
    },
    "/api/v1/aws/compute/vms" : {
      "get" : {
        "summary" : "Get VMs",
        "description" : "Get all VMs for specific subscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of vms",
              "items" : {
                "type" : "object",
                "description" : "VM",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "VM name"
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "VM id"
                  },
                  "createdAt" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date when the VM was created"
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date of the last update of the VM. Can be null"
                  },
                  "href" : {
                    "type" : "string",
                    "description" : "url to the VM"
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "VM status"
                  },
                  "powerState" : {
                    "type" : "string",
                    "description" : "VM power state. Possible states are no-state, pending, running, shutting-down, stopped, stopping, terminated, unknown"
                  },
                  "allowedPowerActions" : {
                    "type" : "array",
                    "description" : "List of allowed power actions for current power stated of a VM",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "flavorId" : {
                    "type" : "string",
                    "description" : "Flavor id"
                  },
                  "volumes" : {
                    "type" : "array",
                    "description" : "List of volume ids attached to a VM",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "interfaces" : {
                    "type" : "array",
                    "description" : "List of interface ids for the VM",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "publicIpAddress" : {
                    "type" : "string",
                    "description" : "Public IP address of a VM"
                  },
                  "privateIpAddress" : {
                    "type" : "string",
                    "description" : "Private IP address of a VM"
                  },
                  "publicDnsName" : {
                    "type" : "string",
                    "description" : "Public DNS name of a VM"
                  },
                  "imageId" : {
                    "type" : "string",
                    "description" : "Id of an image used for VM creation"
                  },
                  "keypairId" : {
                    "type" : "string",
                    "description" : "Keypir id"
                  },
                  "isManaged" : {
                    "type" : "boolean",
                    "description" : "Specifies if management of a VM in EOS is enabled"
                  },
                  "subscriptionId" : {
                    "type" : "string",
                    "description" : "Id of a subscription used for VM creation"
                  },
                  "subscriptionName" : {
                    "type" : "string",
                    "description" : "Name of a subscription used for VM cration"
                  },
                  "provisioning" : {
                    "type" : "boolean",
                    "description" : "Specifies if provisioning of applications is enabled"
                  },
                  "tags" : {
                    "type" : "array",
                    "description" : "Tags (name and value) assigned to this VM",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "description" : "Name (key) of the tag"
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Value of the tag"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_vms"
      },
      "post" : {
        "summary" : "Create VM",
        "description" : "Create new VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm",
          "in" : "body",
          "required" : true,
          "description" : "VM creation data",
          "schema" : {
            "type" : "object",
            "description" : "Create VM",
            "required" : [ "name", "imageId", "flavorId", "keypairId", "volumeSize", "securityGroups", "tags" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "VM name"
              },
              "imageId" : {
                "type" : "string",
                "description" : "Id of an image used for VM creation"
              },
              "flavorId" : {
                "type" : "string",
                "description" : "Flavor id"
              },
              "keypairId" : {
                "type" : "string",
                "description" : "Keypir id"
              },
              "volumeSize" : {
                "type" : "integer",
                "description" : "Volume size in GB"
              },
              "securityGroups" : {
                "type" : "array",
                "description" : "List of security group ids",
                "items" : {
                  "type" : "string"
                }
              },
              "managementEnabled" : {
                "type" : "boolean",
                "description" : "Specifies if management of a VM in EOS is enabled"
              },
              "tags" : {
                "type" : "array",
                "description" : "Tags (name and value) assigned to this VM",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name (key) of the tag"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value of the tag"
                    }
                  }
                }
              },
              "workshift" : {
                "type" : "object",
                "properties" : {
                  "start" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  },
                  "stop" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  }
                },
                "x-nullable" : true
              },
              "mangementToolId" : {
                "type" : "string",
                "x-nullable" : true
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "VM",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "VM name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "VM id"
                },
                "createdAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the VM was created"
                },
                "updatedAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date of the last update of the VM. Can be null"
                },
                "href" : {
                  "type" : "string",
                  "description" : "url to the VM"
                },
                "status" : {
                  "type" : "string",
                  "description" : "VM status"
                },
                "powerState" : {
                  "type" : "string",
                  "description" : "VM power state. Possible states are no-state, pending, running, shutting-down, stopped, stopping, terminated, unknown"
                },
                "allowedPowerActions" : {
                  "type" : "array",
                  "description" : "List of allowed power actions for current power stated of a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "flavorId" : {
                  "type" : "string",
                  "description" : "Flavor id"
                },
                "volumes" : {
                  "type" : "array",
                  "description" : "List of volume ids attached to a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "description" : "List of interface ids for the VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "publicIpAddress" : {
                  "type" : "string",
                  "description" : "Public IP address of a VM"
                },
                "privateIpAddress" : {
                  "type" : "string",
                  "description" : "Private IP address of a VM"
                },
                "publicDnsName" : {
                  "type" : "string",
                  "description" : "Public DNS name of a VM"
                },
                "imageId" : {
                  "type" : "string",
                  "description" : "Id of an image used for VM creation"
                },
                "keypairId" : {
                  "type" : "string",
                  "description" : "Keypir id"
                },
                "isManaged" : {
                  "type" : "boolean",
                  "description" : "Specifies if management of a VM in EOS is enabled"
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Id of a subscription used for VM creation"
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Name of a subscription used for VM cration"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "Specifies if provisioning of applications is enabled"
                },
                "tags" : {
                  "type" : "array",
                  "description" : "Tags (name and value) assigned to this VM",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Name (key) of the tag"
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Value of the tag"
                      }
                    }
                  }
                },
                "workshift" : {
                  "type" : "object",
                  "properties" : {
                    "start" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    },
                    "stop" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    }
                  },
                  "x-nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Disk size is 0 or VM name is empty"
          },
          "500" : {
            "description" : "Creating the VM failed"
          },
          "504" : {
            "description" : "Unable to set VM as managed (if option specified)"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "post_aws_compute_vms"
      }
    },
    "/api/v1/aws/compute/vms/{vm_id}" : {
      "get" : {
        "summary" : "Get VM",
        "description" : "Get VM for specified VM id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "VM",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "VM name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "VM id"
                },
                "createdAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the VM was created"
                },
                "updatedAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date of the last update of the VM. Can be null"
                },
                "href" : {
                  "type" : "string",
                  "description" : "url to the VM"
                },
                "status" : {
                  "type" : "string",
                  "description" : "VM status"
                },
                "powerState" : {
                  "type" : "string",
                  "description" : "VM power state. Possible states are no-state, pending, running, shutting-down, stopped, stopping, terminated, unknown"
                },
                "allowedPowerActions" : {
                  "type" : "array",
                  "description" : "List of allowed power actions for current power stated of a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "flavorId" : {
                  "type" : "string",
                  "description" : "Flavor id"
                },
                "volumes" : {
                  "type" : "array",
                  "description" : "List of volume ids attached to a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "description" : "List of interface ids for the VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "publicIpAddress" : {
                  "type" : "string",
                  "description" : "Public IP address of a VM"
                },
                "privateIpAddress" : {
                  "type" : "string",
                  "description" : "Private IP address of a VM"
                },
                "publicDnsName" : {
                  "type" : "string",
                  "description" : "Public DNS name of a VM"
                },
                "imageId" : {
                  "type" : "string",
                  "description" : "Id of an image used for VM creation"
                },
                "keypairId" : {
                  "type" : "string",
                  "description" : "Keypir id"
                },
                "isManaged" : {
                  "type" : "boolean",
                  "description" : "Specifies if management of a VM in EOS is enabled"
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Id of a subscription used for VM creation"
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Name of a subscription used for VM cration"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "Specifies if provisioning of applications is enabled"
                },
                "tags" : {
                  "type" : "array",
                  "description" : "Tags (name and value) assigned to this VM",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Name (key) of the tag"
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Value of the tag"
                      }
                    }
                  }
                },
                "workshift" : {
                  "type" : "object",
                  "properties" : {
                    "start" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    },
                    "stop" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    }
                  },
                  "x-nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "VM id not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_vm"
      },
      "delete" : {
        "summary" : "Delete VM",
        "description" : "Delete VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "204" : {
            "description" : "VM is deleted and marked as unmanaged"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Unable to set VM as unmanaged (if option specified)"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "delete_aws_compute_vm"
      }
    },
    "/api/v1/aws/compute/vms/{vm_id}/updateTags" : {
      "put" : {
        "description" : "Update tags for a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "vm",
          "in" : "body",
          "required" : true,
          "description" : "Tags update",
          "schema" : {
            "type" : "object",
            "description" : "Tags update",
            "required" : [ "tags" ],
            "properties" : {
              "tags" : {
                "type" : "array",
                "description" : "Tags (name and value) assigned to this VM",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name (key) of the tag"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value of the tag"
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid tags"
          },
          "404" : {
            "description" : "VM id not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "put_aws_compute_vm_updateTags"
      }
    },
    "/api/v1/aws/compute/vms/{vm_id}/setTag" : {
      "put" : {
        "description" : "Set tag value for vm",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "tag",
          "in" : "body",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name (key) of the tag"
              },
              "value" : {
                "type" : "string",
                "description" : "Value of the tag"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid tag"
          },
          "404" : {
            "description" : "VM id not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "put_aws_compute_vm_setTag"
      }
    },
    "/api/v1/aws/compute/vm/{vm_id}/command/{action}" : {
      "put" : {
        "summary" : "Execute action on a VM",
        "description" : "Execute action on a VM. Actions are start, poweroff, softReboot, hardReboot",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "action",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "start, poweroff, softReboot, hardReboot"
        } ],
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid command or VM state doesn't allow given action"
          },
          "404" : {
            "description" : "VM not found"
          },
          "409" : {
            "description" : "The command could not be executed due to conflicting VM state"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "put_aws_compute_vm_command"
      }
    },
    "/api/v1/aws/compute/vms/{vm_id}/details" : {
      "get" : {
        "summary" : "Get VM details",
        "description" : "Get VM details",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of VM details",
              "items" : {
                "type" : "array",
                "description" : "List of VM details",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Server not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_vm_details"
      }
    },
    "/api/v1/aws/compute/vms/{vm_id}/management" : {
      "get" : {
        "description" : "Get management status for a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Management status information",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "enum" : [ "notAvailable", "notEnabled", "available", "installing" ]
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_vm_management"
      },
      "delete" : {
        "summary" : "Delete apps for VM",
        "description" : "Delete applications for specified VM id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Unable to remove applications for VM"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "delete_aws_compute_vm_management"
      }
    },
    "/api/v1/aws/compute/vms/{vm_id}/password" : {
      "get" : {
        "summary" : "Get encrypted password for a VM",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Object with encrypted password",
            "schema" : {
              "type" : "object",
              "properties" : {
                "encryptedPassword" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_vm_password"
      }
    },
    "/api/v1/aws/compute/vms/{vm_id}/workshift" : {
      "post" : {
        "description" : "Create VM Workshift",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          },
          "required" : true
        } ],
        "responses" : {
          "201" : {
            "description" : "Workshift created successfully",
            "schema" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Workshift does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "post_aws_compute_vm_workshift"
      },
      "put" : {
        "description" : "Update VM Workshift",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "body",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "Workshift updated successfully",
            "schema" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Workshift does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "put_aws_compute_vm_workshift"
      },
      "delete" : {
        "description" : "Delete VM Workshift",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Workshift deleted successfully"
          },
          "400" : {
            "description" : "Bad request"
          },
          "404" : {
            "description" : "Workshift does not exist"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "delete_aws_compute_vm_workshift"
      }
    },
    "/api/v1/aws/compute/flavors" : {
      "get" : {
        "summary" : "Get flavors",
        "description" : "Get list of all flavors",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of flavors",
              "items" : {
                "type" : "object",
                "description" : "Flavor",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Flavor id"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Flavor name"
                  },
                  "diskInGb" : {
                    "type" : "integer",
                    "description" : "Disk size in GB"
                  },
                  "ramInMb" : {
                    "type" : "integer",
                    "description" : "Memory size in MB"
                  },
                  "vcpus" : {
                    "type" : "integer",
                    "description" : "Number of virtual CPUs"
                  },
                  "ephemeralDiskInGb" : {
                    "type" : "integer",
                    "description" : "VM ephemeral disk size in GB"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_flavors"
      }
    },
    "/api/v1/aws/compute/flavors/{flavor_id}" : {
      "get" : {
        "summary" : "Get flavor",
        "description" : "Get specific flavor by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "flavor_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Flavor id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Flavor",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Flavor id"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Flavor name"
                },
                "diskInGb" : {
                  "type" : "integer",
                  "description" : "Disk size in GB"
                },
                "ramInMb" : {
                  "type" : "integer",
                  "description" : "Memory size in MB"
                },
                "vcpus" : {
                  "type" : "integer",
                  "description" : "Number of virtual CPUs"
                },
                "ephemeralDiskInGb" : {
                  "type" : "integer",
                  "description" : "VM ephemeral disk size in GB"
                }
              }
            }
          },
          "404" : {
            "description" : "Flavor id does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_flavor"
      }
    },
    "/api/v1/aws/compute/images" : {
      "get" : {
        "summary" : "Get images",
        "description" : "Get list of all images",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of images",
              "items" : {
                "type" : "object",
                "description" : "Image",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Image id"
                  },
                  "href" : {
                    "type" : "string",
                    "description" : "URL for the image"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Image name"
                  },
                  "minRamInMb" : {
                    "type" : "integer",
                    "description" : "Minimum memory size in MB"
                  },
                  "minDiskInGb" : {
                    "type" : "integer",
                    "description" : "Minimum disk size in GB"
                  },
                  "maxDiskInGb" : {
                    "type" : "integer",
                    "description" : "Maximum disk size in GB"
                  },
                  "updated" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date when the image was last updated"
                  },
                  "created" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date when the image was created"
                  },
                  "subsciptionId" : {
                    "type" : "string",
                    "description" : "Subscription id"
                  },
                  "subsciptionName" : {
                    "type" : "string",
                    "description" : "Subscription name"
                  },
                  "provisioning" : {
                    "type" : "boolean",
                    "description" : "States if provisioning is enabled"
                  },
                  "compatibleFlavors" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "description" : "Flavor",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Flavor id"
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Flavor name"
                        },
                        "diskInGb" : {
                          "type" : "integer",
                          "description" : "Disk size in GB"
                        },
                        "ramInMb" : {
                          "type" : "integer",
                          "description" : "Memory size in MB"
                        },
                        "vcpus" : {
                          "type" : "integer",
                          "description" : "Number of virtual CPUs"
                        },
                        "ephemeralDiskInGb" : {
                          "type" : "integer",
                          "description" : "VM ephemeral disk size in GB"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_images"
      }
    },
    "/api/v1/aws/compute/images/{image_id}" : {
      "get" : {
        "summary" : "Get image",
        "description" : "Get specific images by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "image_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Image id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Image",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Image id"
                },
                "href" : {
                  "type" : "string",
                  "description" : "URL for the image"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Image name"
                },
                "minRamInMb" : {
                  "type" : "integer",
                  "description" : "Minimum memory size in MB"
                },
                "minDiskInGb" : {
                  "type" : "integer",
                  "description" : "Minimum disk size in GB"
                },
                "maxDiskInGb" : {
                  "type" : "integer",
                  "description" : "Maximum disk size in GB"
                },
                "updated" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the image was last updated"
                },
                "created" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the image was created"
                },
                "subsciptionId" : {
                  "type" : "string",
                  "description" : "Subscription id"
                },
                "subsciptionName" : {
                  "type" : "string",
                  "description" : "Subscription name"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled"
                },
                "compatibleFlavors" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "description" : "Flavor",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Flavor id"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Flavor name"
                      },
                      "diskInGb" : {
                        "type" : "integer",
                        "description" : "Disk size in GB"
                      },
                      "ramInMb" : {
                        "type" : "integer",
                        "description" : "Memory size in MB"
                      },
                      "vcpus" : {
                        "type" : "integer",
                        "description" : "Number of virtual CPUs"
                      },
                      "ephemeralDiskInGb" : {
                        "type" : "integer",
                        "description" : "VM ephemeral disk size in GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_image"
      }
    },
    "/api/v1/aws/compute/keypairs" : {
      "get" : {
        "summary" : "Get keypairs",
        "description" : "Get list of all keypairs",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of Keypairs",
              "items" : {
                "type" : "object",
                "description" : "Keypair",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Keypair name"
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "Keypair id"
                  },
                  "href" : {
                    "type" : "string",
                    "description" : "URL for the keypair"
                  },
                  "fingerprint" : {
                    "type" : "string",
                    "description" : "Keypair fingerprint"
                  },
                  "provisioning" : {
                    "type" : "boolean",
                    "description" : "States if provisioning is enabled"
                  },
                  "privateKey" : {
                    "type" : "string",
                    "description" : "Private key material. Only available when creating a new key."
                  },
                  "subscriptionId" : {
                    "type" : "string",
                    "description" : "Subscription id"
                  },
                  "subscriptionName" : {
                    "type" : "string",
                    "description" : "Subscription name"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_keypairs"
      }
    },
    "/api/v1/aws/compute/keypairs/{keypair_id}" : {
      "get" : {
        "summary" : "Get keypair",
        "description" : "Get specific keypair by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "keypair_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Keypair id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Keypair",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Keypair name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "Keypair id"
                },
                "href" : {
                  "type" : "string",
                  "description" : "URL for the keypair"
                },
                "fingerprint" : {
                  "type" : "string",
                  "description" : "Keypair fingerprint"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled"
                },
                "privateKey" : {
                  "type" : "string",
                  "description" : "Private key material. Only available when creating a new key."
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Subscription id"
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Subscription name"
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_keypair"
      },
      "delete" : {
        "summary" : "Delete keypair",
        "description" : "Delete specific keypair by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "keypair_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Keypair id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Key pair id does not exist"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "delete_aws_compute_keypair"
      }
    },
    "/api/v1/aws/compute/keypairs/generate" : {
      "post" : {
        "summary" : "Create a new keypair",
        "description" : "Create a new keypair (on server side).",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "keypair",
          "in" : "body",
          "required" : true,
          "description" : "Keypair creation data",
          "schema" : {
            "type" : "object",
            "description" : "Create a new keypair",
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Keypair name. 1-255 ASCII characters. Must be unique within AWS account."
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Keypair",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Keypair name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "Keypair id"
                },
                "href" : {
                  "type" : "string",
                  "description" : "URL for the keypair"
                },
                "fingerprint" : {
                  "type" : "string",
                  "description" : "Keypair fingerprint"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled"
                },
                "privateKey" : {
                  "type" : "string",
                  "description" : "Private key material. Only available when creating a new key."
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Subscription id"
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Subscription name"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "post_aws_compute_keypairs_generate"
      }
    },
    "/api/v1/aws/compute/keypairs/import" : {
      "post" : {
        "summary" : "Import a new public keypair",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : false,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "keypair",
          "in" : "body",
          "required" : true,
          "description" : "Public keypair to import",
          "schema" : {
            "type" : "object",
            "description" : "Create a new keypair",
            "required" : [ "name", "publicKey" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Keypair name. 1-255 ASCII characters. Must be unique within AWS account."
              },
              "publicKey" : {
                "type" : "string",
                "description" : "Public key to import"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Keypair",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Keypair name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "Keypair id"
                },
                "href" : {
                  "type" : "string",
                  "description" : "URL for the keypair"
                },
                "fingerprint" : {
                  "type" : "string",
                  "description" : "Keypair fingerprint"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled"
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Subscription id"
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Subscription name"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "post_aws_compute_keypairs_import"
      }
    },
    "/api/v1/aws/compute/validateSubscription" : {
      "get" : {
        "summary" : "Get keypairs",
        "description" : "Get list of all keypairs",
        "parameters" : [ {
          "name" : "subscription",
          "in" : "body",
          "description" : "subscription data",
          "required" : true,
          "schema" : {
            "properties" : {
              "accessKey" : {
                "type" : "string",
                "description" : "AWS subscription access key"
              },
              "secretKey" : {
                "type" : "string",
                "description" : "AWS subscription secret key"
              }
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Authentication failed"
          }
        },
        "tags" : [ "compute", "aws" ],
        "operationId" : "get_aws_compute_validateSubscription"
      }
    },
    "/api/v1/azure/compute/availabilityZones" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "default" : "default"
                  },
                  "name" : {
                    "type" : "string",
                    "default" : "Default"
                  },
                  "available" : {
                    "type" : "boolean",
                    "default" : true
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get availability zones",
        "operationId" : "get_availability_zones",
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/availabilityZones/{availability_zone_id}" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string",
                  "default" : "default"
                },
                "name" : {
                  "type" : "string",
                  "default" : "Default"
                },
                "available" : {
                  "type" : "boolean",
                  "default" : true
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get availability zone",
        "operationId" : "get_availability_zone",
        "tags" : [ "azure", "compute" ],
        "parameters" : [ {
          "name" : "availability_zone_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ]
      }
    },
    "/api/v1/azure/compute/flavors" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "diskInGb" : {
                    "type" : "integer"
                  },
                  "ramInMb" : {
                    "type" : "integer"
                  },
                  "vcpus" : {
                    "type" : "integer"
                  },
                  "ephemeralDiskInGb" : {
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get list of available flavors.",
        "operationId" : "get_flavors",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "regionName",
          "in" : "query",
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/flavors/{flavor_name}" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "diskInGb" : {
                  "type" : "integer"
                },
                "ramInMb" : {
                  "type" : "integer"
                },
                "vcpus" : {
                  "type" : "integer"
                },
                "ephemeralDiskInGb" : {
                  "type" : "integer"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get details for a single flavor.",
        "operationId" : "get_flavor",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "flavor_name",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/images" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "minDiskInGb" : {
                    "type" : "integer"
                  },
                  "maxDiskInGb" : {
                    "type" : "integer"
                  },
                  "compatibleFlavors" : {
                    "type" : "array",
                    "items" : {
                      "properties" : {
                        "name" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "diskInGb" : {
                          "type" : "integer"
                        },
                        "ramInMb" : {
                          "type" : "integer"
                        },
                        "vcpus" : {
                          "type" : "integer"
                        },
                        "ephemeralDiskInGb" : {
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    }
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get a list of available images. Currently this is a static, limited list. No server-side filtering is available.",
        "operationId" : "get_images",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/images/{image_id}" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "minDiskInGb" : {
                  "type" : "integer"
                },
                "maxDiskInGb" : {
                  "type" : "integer"
                },
                "compatibleFlavors" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "diskInGb" : {
                        "type" : "integer"
                      },
                      "ramInMb" : {
                        "type" : "integer"
                      },
                      "vcpus" : {
                        "type" : "integer"
                      },
                      "ephemeralDiskInGb" : {
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Details for a single image.",
        "operationId" : "get_image",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "image_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/keypairs" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "required" : [ "fingerprint", "id", "name", "publicKey" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "publicKey" : {
                    "type" : "string"
                  },
                  "fingerprint" : {
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get list of available keypairs",
        "operationId" : "get_keypairs_list_resource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/keypairs/generate" : {
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "required" : [ "fingerprint", "id", "name", "privateKey", "publicKey" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "publicKey" : {
                  "type" : "string"
                },
                "fingerprint" : {
                  "type" : "string"
                },
                "privateKey" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Generate a keypair",
        "operationId" : "post_keypair_create",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name"
              }
            },
            "type" : "object"
          }
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/keypairs/import" : {
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "required" : [ "fingerprint", "id", "name", "publicKey" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "publicKey" : {
                  "type" : "string"
                },
                "fingerprint" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Import a public key",
        "operationId" : "post_keypair_import",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "name", "publicKey" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name"
              },
              "publicKey" : {
                "type" : "string",
                "title" : "publicKey"
              }
            },
            "type" : "object"
          }
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/keypairs/{keypair_id}" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Keypair deleted successfully"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete a keypair",
        "operationId" : "delete_keypair_resource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "keypair_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "required" : [ "fingerprint", "id", "name", "publicKey" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "publicKey" : {
                  "type" : "string"
                },
                "fingerprint" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get a keypair",
        "operationId" : "get_keypair_resource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "keypair_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/regions" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string"
                  },
                  "latitude" : {
                    "type" : "number"
                  },
                  "longitude" : {
                    "type" : "number"
                  },
                  "flavorsHref" : {
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get list of regions (locations) available for Azure subscription.",
        "operationId" : "get_regions",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/regions/{region_id}" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "latitude" : {
                  "type" : "number"
                },
                "longitude" : {
                  "type" : "number"
                },
                "flavorsHref" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get details for a single region (location).",
        "operationId" : "get_region",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string"
        }, {
          "name" : "region_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/resourceGroups" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "platformId" : {
                    "type" : "string"
                  },
                  "regionId" : {
                    "type" : "string"
                  },
                  "tags" : {
                    "default" : { },
                    "properties" : { },
                    "type" : "object"
                  },
                  "href" : {
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get list of resource groups",
        "operationId" : "get_resource_groups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        } ],
        "tags" : [ "azure", "compute" ]
      },
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "regionId" : {
                  "type" : "string"
                },
                "tags" : {
                  "default" : { },
                  "properties" : { },
                  "type" : "object"
                },
                "href" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Create a new resource group",
        "operationId" : "post_resource_groups",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name",
                "description" : "name: name for the a resource group"
              }
            },
            "type" : "object"
          }
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/resourceGroups/{resource_group_id}" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Resource group was deleted successfully "
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete a resource group.",
        "operationId" : "delete_resource_group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "resource_group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "regionId" : {
                  "type" : "string"
                },
                "tags" : {
                  "default" : { },
                  "properties" : { },
                  "type" : "object"
                },
                "href" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get details for a single resource group.",
        "operationId" : "get_resource_group",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "resource_group_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/validateSubscription" : { },
    "/api/v1/azure/compute/vms" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "flavorId" : {
                  "type" : "string"
                },
                "regionId" : {
                  "type" : "string"
                },
                "interfaceIds" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "azureId" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "imageId" : {
                  "type" : "string"
                },
                "isManaged" : {
                  "type" : "boolean"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "name", "value" ],
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "List virtual machines",
        "operationId" : "get_v_ms",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        } ],
        "tags" : [ "azure", "compute" ]
      },
      "post" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "flavorId" : {
                  "type" : "string"
                },
                "regionId" : {
                  "type" : "string"
                },
                "interfaceIds" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "azureId" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "imageId" : {
                  "type" : "string"
                },
                "isManaged" : {
                  "type" : "boolean"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "name", "value" ],
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Create a new virtual machine",
        "operationId" : "post_v_ms",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "flavorId", "imageId", "name", "nics", "volumeSize" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name",
                "description" : "name for virtual machine"
              },
              "imageId" : {
                "type" : "string",
                "title" : "imageId",
                "description" : "imageId: id of the image used to create a new machine"
              },
              "flavorId" : {
                "type" : "string",
                "title" : "flavorId",
                "description" : "flavorId: flavor (size) of new machine"
              },
              "keypairId" : {
                "type" : "string",
                "title" : "keypairId",
                "description" : "keypairId or adminUsername/adminPassword is required to create a new machine"
              },
              "managementEnabled" : {
                "type" : "boolean",
                "title" : "managementEnabled",
                "description" : "managementEnabled: if set to true, management service is installed to virtual machine"
              },
              "volumeSize" : {
                "type" : "integer",
                "title" : "volumeSize",
                "description" : "volumeSize (in GB) specifies size of the data volume."
              },
              "nics" : {
                "type" : "string",
                "title" : "nics",
                "description" : "nics (list). List of network interfaces to be attached to new instance."
              },
              "securityGroups" : {
                "type" : "string",
                "title" : "securityGroups",
                "description" : "securityGroups (list). List of security groups to be attached to each network interface."
              },
              "publicIp" : {
                "type" : "boolean",
                "title" : "publicIp",
                "description" : "publicIp. Set to true to automatically assign public IP"
              },
              "resourceGroupId" : {
                "type" : "string",
                "title" : "resourceGroupId",
                "description" : "Name of the resource group for new machine. If not specified, new resource group will be created. If non-existant, creating a new machine will fail."
              },
              "tags" : {
                "type" : "array",
                "items" : {
                  "required" : [ "name", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              },
              "workshift" : {
                "properties" : {
                  "start" : {
                    "required" : [ "days", "hour", "minute" ],
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "string",
                        "example" : "mon",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      }
                    },
                    "type" : "object"
                  },
                  "stop" : {
                    "required" : [ "days", "hour", "minute" ],
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "string",
                        "example" : "mon",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object"
              },
              "managementToolId" : {
                "type" : "string",
                "title" : "managementToolId",
                "description" : "Id of the management tool. Required if managementEnabled is set to True"
              }
            },
            "type" : "object"
          }
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Virtual machine was deleted"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete a virtual machine. This will not destroy associated resources, such as interfaces, disks and networks. Delete a resource group to delete associated resources.",
        "operationId" : "delete_vm",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      },
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "resourceGroupId" : {
                  "type" : "string"
                },
                "platformId" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "flavorId" : {
                  "type" : "string"
                },
                "regionId" : {
                  "type" : "string"
                },
                "interfaceIds" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "resourceGroupId" : {
                        "type" : "string"
                      },
                      "azureId" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "imageId" : {
                  "type" : "string"
                },
                "isManaged" : {
                  "type" : "boolean"
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "name", "value" ],
                    "properties" : {
                      "name" : {
                        "type" : "string"
                      },
                      "value" : {
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "items" : {
                    "properties" : {
                      "portId" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "mac" : {
                        "type" : "string"
                      },
                      "publicIps" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      },
                      "privateIps" : {
                        "type" : "array",
                        "items" : {
                          "type" : "string"
                        }
                      }
                    },
                    "type" : "object"
                  }
                },
                "flavor" : {
                  "properties" : {
                    "name" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "diskInGb" : {
                      "type" : "integer"
                    },
                    "ramInMb" : {
                      "type" : "integer"
                    },
                    "vcpus" : {
                      "type" : "integer"
                    },
                    "ephemeralDiskInGb" : {
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "powerState" : {
                  "type" : "string",
                  "example" : "terminated",
                  "enum" : [ "terminated", "terminating", "running", "pending", "stopped" ]
                },
                "rawPowerState" : {
                  "type" : "string"
                },
                "allowedPowerActions" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string",
                    "example" : "poweroff",
                    "enum" : [ "poweroff", "softReboot", "hardReboot", "start" ]
                  }
                },
                "status" : {
                  "type" : "string",
                  "example" : "ok",
                  "enum" : [ "ok", "error", "pending" ]
                },
                "statusMessage" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Details for a single virtual machine",
        "operationId" : "get_vm",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}/command/{action}" : {
      "put" : {
        "responses" : {
          "204" : {
            "description" : "Command was executed successfully"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Perform power action on specified virtual machine.",
        "operationId" : "put_vm_command",
        "parameters" : [ {
          "name" : "action",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "Action to perform on the virtual machine.",
          "enum" : [ "start", "poweroff", "softReboot", "hardReboot" ]
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}/details" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "required" : [ "key", "value" ],
                "properties" : {
                  "key" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get virtual machine details. Currently for Azure this only returns information if management tool is installed and responding.",
        "operationId" : "get_vm_details",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}/management" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "required" : [ "status" ],
              "properties" : {
                "status" : {
                  "type" : "string",
                  "example" : "available",
                  "enum" : [ "available", "notAvailable", "notEnabled" ]
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get VM management status",
        "operationId" : "get_vm_management",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}/password" : {
      "get" : {
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "required" : [ "encryptedPassword" ],
              "properties" : {
                "encryptedPassword" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Get virtual machine encrypted password",
        "operationId" : "get_vm_password",
        "tags" : [ "azure", "compute" ],
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}/setTag" : {
      "put" : {
        "responses" : {
          "204" : {
            "description" : "Success"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "summary" : "Set tag for VM",
        "description" : "Set tag for a VM\nTag's format is validated against vm_tag function,\nthat it's a dictionary with name and value fields.\nTag's is also validated against the tag service.\n\nExample tag json object: {\"name\": \"abc\", \"value\": \"qwe\"}",
        "operationId" : "put_vm_set_tag",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "required" : [ "name", "value" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "title" : "name",
                "description" : "name is required"
              },
              "value" : {
                "type" : "string",
                "title" : "value",
                "description" : "value is required"
              }
            },
            "type" : "object"
          }
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}/updateTags" : {
      "put" : {
        "responses" : {
          "204" : {
            "description" : "Tags were updated successfully"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Update tags for a VM",
        "operationId" : "put_vm_update_tags",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "properties" : {
              "tags" : {
                "type" : "array",
                "items" : {
                  "required" : [ "name", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string"
                    },
                    "value" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                }
              }
            },
            "type" : "object"
          }
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/azure/compute/vms/{vm_id}/workshift" : {
      "delete" : {
        "responses" : {
          "204" : {
            "description" : "Workshift deleted successfully"
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Delete VM Workshift",
        "operationId" : "delete_vm_workshift_resource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      },
      "post" : {
        "responses" : {
          "201" : {
            "description" : "Workshift exists",
            "schema" : {
              "properties" : {
                "start" : {
                  "required" : [ "days", "hour", "minute" ],
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "string",
                      "example" : "mon",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    }
                  },
                  "type" : "object"
                },
                "stop" : {
                  "required" : [ "days", "hour", "minute" ],
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "string",
                      "example" : "mon",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    }
                  },
                  "type" : "object"
                }
              },
              "type" : "object"
            }
          },
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Create VM Workshift",
        "operationId" : "post_vm_workshift_resource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "properties" : {
              "start" : {
                "required" : [ "days", "hour", "minute" ],
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "string",
                    "example" : "mon",
                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                  }
                },
                "type" : "object"
              },
              "stop" : {
                "required" : [ "days", "hour", "minute" ],
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "string",
                    "example" : "mon",
                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      },
      "put" : {
        "responses" : {
          "default" : {
            "description" : "Error",
            "schema" : {
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              },
              "type" : "object"
            }
          }
        },
        "description" : "Update VM Workshift",
        "operationId" : "put_vm_workshift_resource",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "type" : "string",
          "required" : true
        }, {
          "name" : "payload",
          "required" : true,
          "in" : "body",
          "schema" : {
            "properties" : {
              "start" : {
                "required" : [ "days", "hour", "minute" ],
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "string",
                    "example" : "mon",
                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                  }
                },
                "type" : "object"
              },
              "stop" : {
                "required" : [ "days", "hour", "minute" ],
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "string",
                    "example" : "mon",
                    "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "tags" : [ "azure", "compute" ]
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/flavors" : {
      "get" : {
        "summary" : "Return list of flavors for specified project",
        "operationId" : "get_many",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of flavors",
              "items" : {
                "type" : "object",
                "required" : [ "id", "href", "name", "diskInGb", "ramInMb", "vcpus", "ephemeralDiskInGb" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "href" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "diskInGb" : {
                    "type" : "integer"
                  },
                  "ramInMb" : {
                    "type" : "integer"
                  },
                  "vcpus" : {
                    "type" : "integer"
                  },
                  "ephemeralDiskInGb" : {
                    "type" : "integer"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/flavors/{id}" : {
      "get" : {
        "summary" : "Get specified flavor for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Flavor ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Flavor object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "href", "name", "diskInGb", "ramInMb", "vcpus", "ephemeralDiskInGb" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "diskInGb" : {
                  "type" : "integer"
                },
                "ramInMb" : {
                  "type" : "integer"
                },
                "vcpus" : {
                  "type" : "integer"
                },
                "ephemeralDiskInGb" : {
                  "type" : "integer"
                }
              }
            }
          },
          "404" : {
            "description" : "Not found",
            "schema" : {
              "description" : "Resource on requested url does not Exist",
              "properties" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "message" ],
                  "properties" : {
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Internal error",
            "schema" : {
              "description" : "Poor Implementation",
              "properties" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "message" ],
                  "properties" : {
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_flavor"
      }
    },
    "/api/v1/k5/compute/keypairs" : {
      "get" : {
        "summary" : "Return list of keypairs for specified project",
        "operationId" : "get_keypairs",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of keypairs",
              "items" : {
                "type" : "object",
                "required" : [ "name", "id", "href", "fingerprint" ],
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "href" : {
                    "type" : "string"
                  },
                  "fingerprint" : {
                    "type" : "string"
                  },
                  "subscriptionId" : {
                    "type" : "string"
                  },
                  "subscriptionName" : {
                    "type" : "string"
                  },
                  "provisioning" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      }
    },
    "/api/v1/k5/compute/keypairs/{id}" : {
      "get" : {
        "summary" : "Get specified keypair for specified project",
        "operationId" : "get_keypair",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Keypair ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Keypair object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "id", "href", "fingerprint" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "fingerprint" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Keypair was not found",
            "schema" : {
              "description" : "Resource on requested url does not Exist",
              "properties" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "message" ],
                  "properties" : {
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "default" : {
            "description" : "Unknown error occurred",
            "schema" : {
              "description" : "Poor Implementation",
              "properties" : {
                "schema" : {
                  "type" : "object",
                  "required" : [ "message" ],
                  "properties" : {
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      },
      "delete" : {
        "summary" : "Delete keypair",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of keypair",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Keypair deleted successfully"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "delete_k5_compute_keypair"
      }
    },
    "/api/v1/k5/compute/keypairs/generate" : {
      "post" : {
        "summary" : "Create a new Keypair",
        "description" : "Creates a new keypair in k5",
        "parameters" : [ {
          "name" : "keypair",
          "in" : "body",
          "description" : "the details of the keypair that will be created",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "availabilityZone" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "availabilityZone" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "The created Keypair",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "publicKey", "privateKey", "fingerprint" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "fingerprint" : {
                  "type" : "string"
                },
                "publicKey" : {
                  "type" : "string"
                },
                "privateKey" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "post_k5_compute_keypairs_generate"
      }
    },
    "/api/v1/k5/compute/keypairs/import" : {
      "post" : {
        "summary" : "Import a new public key",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of a subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "keypair",
          "in" : "body",
          "description" : "the details of the public keypairs to be uploaded",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name", "publicKey", "availabilityZone" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "publicKey" : {
                "type" : "string",
                "description" : "Public Key"
              },
              "availabilityZone" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The created Keypair",
            "schema" : {
              "type" : "object",
              "required" : [ "name", "publicKey", "fingerprint" ],
              "properties" : {
                "name" : {
                  "type" : "string"
                },
                "fingerprint" : {
                  "type" : "string"
                },
                "publicKey" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "post_k5_compute_keypairs_import"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/images" : {
      "get" : {
        "summary" : "List all images for specified project",
        "description" : "List all images available",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of images",
              "items" : {
                "type" : "object",
                "required" : [ "id", "href", "name", "minRamInMb", "minDiskInGb", "maxDiskInGb", "updated", "created", "compatibleFlavors" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "href" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "minRamInMb" : {
                    "type" : "string",
                    "description" : "minimum RAM required for successful server creation with this image"
                  },
                  "minDiskInGb" : {
                    "type" : "string",
                    "description" : "minimum disk required for successful server creation with this image"
                  },
                  "maxDiskInGb" : {
                    "type" : "string",
                    "description" : "maximum disk required for successful server creation with this image"
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "timestamp when images was last updated"
                  },
                  "created" : {
                    "type" : "string",
                    "description" : "timestamp when image was created"
                  },
                  "compatibleFlavors" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "id", "href", "name", "diskInGb", "ramInMb", "vcpus", "ephemeralDiskInGb" ],
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        },
                        "href" : {
                          "type" : "string"
                        },
                        "name" : {
                          "type" : "string"
                        },
                        "diskInGb" : {
                          "type" : "integer"
                        },
                        "ramInMb" : {
                          "type" : "integer"
                        },
                        "vcpus" : {
                          "type" : "integer"
                        },
                        "ephemeralDiskInGb" : {
                          "type" : "integer"
                        }
                      }
                    },
                    "description" : "a list of all flavors that have ram >= minRamInMb and disk >= minDiskInGb"
                  },
                  "subscriptionId" : {
                    "type" : "string"
                  },
                  "subscriptionName" : {
                    "type" : "string"
                  },
                  "provisioning" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_images"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/images/{id}" : {
      "get" : {
        "summary" : "Get details of specified image for specified project",
        "description" : "details of specified image",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of image",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Image object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "href", "name", "minRamInMb", "minDiskInGb", "maxDiskInGb", "updated", "created", "compatibleFlavors" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "minRamInMb" : {
                  "type" : "string",
                  "description" : "minimum RAM required for successful server creation with this image"
                },
                "minDiskInGb" : {
                  "type" : "string",
                  "description" : "minimum disk required for successful server creation with this image"
                },
                "maxDiskInGb" : {
                  "type" : "string",
                  "description" : "maximum disk required for successful server creation with this image"
                },
                "updated" : {
                  "type" : "string",
                  "description" : "timestamp when images was last updated"
                },
                "created" : {
                  "type" : "string",
                  "description" : "timestamp when image was created"
                },
                "compatibleFlavors" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id", "href", "name", "diskInGb", "ramInMb", "vcpus", "ephemeralDiskInGb" ],
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "href" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "diskInGb" : {
                        "type" : "integer"
                      },
                      "ramInMb" : {
                        "type" : "integer"
                      },
                      "vcpus" : {
                        "type" : "integer"
                      },
                      "ephemeralDiskInGb" : {
                        "type" : "integer"
                      }
                    }
                  },
                  "description" : "a list of all flavors that have ram >= minRamInMb and disk >= minDiskInGb"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_image"
      }
    },
    "/api/v1/k5/compute/availabilityZones" : {
      "get" : {
        "summary" : "List all Availability Zones",
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "required" : [ "available", "name", "id", "regionId" ],
                "properties" : {
                  "available" : {
                    "type" : "boolean",
                    "description" : "Can this availability zone be used"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  },
                  "regionId" : {
                    "type" : "string",
                    "description" : "the regionId this availability zone belongs to"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_availabilityZones"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms" : {
      "get" : {
        "summary" : "List all virtual machines for specified project",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of virtual machine",
              "items" : {
                "type" : "object",
                "required" : [ "id", "name", "createdAt", "updatedAt", "href", "powerState", "allowedPowerActions", "status", "flavorId", "isManaged", "tags" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "createdAt" : {
                    "type" : "string"
                  },
                  "updatedAt" : {
                    "type" : "string"
                  },
                  "href" : {
                    "type" : "string"
                  },
                  "powerState" : {
                    "type" : "string"
                  },
                  "allowedPowerActions" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "status" : {
                    "type" : "string"
                  },
                  "statusMessage" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "taskState" : {
                    "type" : "string"
                  },
                  "flavorId" : {
                    "type" : "string"
                  },
                  "volumes" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "id" ],
                      "properties" : {
                        "id" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "interfaces" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "isManaged" : {
                    "type" : "boolean"
                  },
                  "imageId" : {
                    "type" : "string"
                  },
                  "keypairId" : {
                    "type" : "string"
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  },
                  "fault" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "tags" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "name", "value" ],
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "description" : "Name (key) of the tag"
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Value of the tag"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_vms"
      },
      "post" : {
        "summary" : "Create new virtual machine for specified project",
        "parameters" : [ {
          "name" : "vm",
          "in" : "body",
          "description" : "vm details",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "sourceType", "name", "imageId", "flavorId", "availabilityZone", "keypairId", "managementEnabled", "volumeSize", "securityGroups" ],
            "properties" : {
              "sourceType" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "imageId" : {
                "type" : "string"
              },
              "flavorId" : {
                "type" : "string"
              },
              "availabilityZone" : {
                "type" : "string"
              },
              "keypairId" : {
                "type" : "string"
              },
              "managementEnabled" : {
                "type" : "boolean"
              },
              "volumeSize" : {
                "type" : "integer"
              },
              "nics" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "portIds" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "securityGroups" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "setUpFloatingIp" : {
                "type" : "boolean"
              },
              "workshift" : {
                "type" : "object",
                "properties" : {
                  "start" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  },
                  "stop" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  }
                },
                "x-nullable" : true
              },
              "managementToolId" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "new vm",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "createdAt", "updatedAt", "href", "powerState", "allowedPowerActions", "status", "flavorId", "isManaged", "tags" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "createdAt" : {
                  "type" : "string"
                },
                "updatedAt" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "powerState" : {
                  "type" : "string"
                },
                "allowedPowerActions" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "status" : {
                  "type" : "string"
                },
                "statusMessage" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "taskState" : {
                  "type" : "string"
                },
                "flavorId" : {
                  "type" : "string"
                },
                "volumes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id" ],
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "isManaged" : {
                  "type" : "boolean"
                },
                "imageId" : {
                  "type" : "string"
                },
                "keypairId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "fault" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "name", "value" ],
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Name (key) of the tag"
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Value of the tag"
                      }
                    }
                  }
                },
                "workshift" : {
                  "type" : "object",
                  "properties" : {
                    "start" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    },
                    "stop" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    }
                  },
                  "x-nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "post_k5_compute_project_vms"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}/management" : {
      "get" : {
        "summary" : "Get management status for a single virtual machine.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "ID of the project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Management status information",
            "schema" : {
              "type" : "object",
              "description" : "Management status information",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "enum" : [ "notAvailable", "notEnabled", "available", "installing" ]
                }
              }
            }
          },
          "404" : {
            "description" : "Vm does not exist"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_vm_management"
      },
      "delete" : {
        "summary" : "Delete managed services and management for a single virtual machine.",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "ID of the project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Ok"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "delete_k5_compute_project_vm_management"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}" : {
      "get" : {
        "summary" : "Get details of specified vm for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Vm object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "createdAt", "updatedAt", "href", "powerState", "allowedPowerActions", "status", "flavorId", "isManaged", "tags" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "createdAt" : {
                  "type" : "string"
                },
                "updatedAt" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "powerState" : {
                  "type" : "string"
                },
                "allowedPowerActions" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "status" : {
                  "type" : "string"
                },
                "statusMessage" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "taskState" : {
                  "type" : "string"
                },
                "flavorId" : {
                  "type" : "string"
                },
                "volumes" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "id" ],
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "isManaged" : {
                  "type" : "boolean"
                },
                "imageId" : {
                  "type" : "string"
                },
                "keypairId" : {
                  "type" : "string"
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "fault" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "tags" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "name", "value" ],
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Name (key) of the tag"
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Value of the tag"
                      }
                    }
                  }
                },
                "workshift" : {
                  "type" : "object",
                  "properties" : {
                    "start" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    },
                    "stop" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    }
                  },
                  "x-nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "Vm does not exist"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_vm"
      },
      "delete" : {
        "summary" : "Deletes Vm for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Vm marked for deletion successfully"
          },
          "404" : {
            "description" : "Vm does not exist"
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "delete_k5_compute_project_vm"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}/updateTags" : {
      "put" : {
        "description" : "Update tags for a VM",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "Tags update",
          "schema" : {
            "type" : "object",
            "description" : "Tags update",
            "required" : [ "tags" ],
            "properties" : {
              "tags" : {
                "type" : "array",
                "description" : "Tags (name and value) assigned to this VM",
                "items" : {
                  "type" : "object",
                  "required" : [ "name", "value" ],
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name (key) of the tag"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value of the tag"
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid tags"
          },
          "404" : {
            "description" : "VM id not found"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "put_k5_compute_project_vm_updateTags"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}/setTag" : {
      "put" : {
        "description" : "Update tag for a VM",
        "parameters" : [ {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "body",
          "in" : "body",
          "required" : true,
          "description" : "Tag update",
          "schema" : {
            "type" : "object",
            "required" : [ "name", "value" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name (key) of the tag"
              },
              "value" : {
                "type" : "string",
                "description" : "Value of the tag"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid tag"
          },
          "404" : {
            "description" : "VM id not found"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "put_k5_compute_project_vm_setTag"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}/command/{action}" : {
      "put" : {
        "summary" : "Manage power state of virtual machine for specified project",
        "description" : "Available actions start|poweroff|softReboot|hardReboot",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "action",
          "in" : "path",
          "description" : "action to execute",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "202" : {
            "description" : "Action executed"
          },
          "404" : {
            "description" : "Vm does not exist"
          },
          "409" : {
            "description" : "The command could not be executed due to conflicting VM state"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "put_k5_compute_project_vm_command"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}/details" : {
      "get" : {
        "summary" : "Virtual machine detailed information for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "List of vm statistics",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "key" : {
                    "type" : "string"
                  },
                  "value" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "404" : {
            "description" : "Vm does not exist"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_vm_details"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}/password" : {
      "get" : {
        "summary" : "Get encrypted password for a VM",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Object with encrypted password",
            "schema" : {
              "type" : "object",
              "properties" : {
                "encryptedPassword" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Vm does not exist"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_vm_password"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/volumes" : {
      "get" : {
        "summary" : "List all Volumes for specified project",
        "description" : "List all volumes",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "availabilityZone",
          "in" : "query",
          "description" : "K5 Availability Zone to filter",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of volumes",
              "items" : {
                "type" : "object",
                "required" : [ "id", "encrypted", "createdAt", "sizeInGb", "status", "name", "description", "createdFromImage", "attachments", "bootable", "availabilityZone" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "encrypted" : {
                    "type" : "boolean"
                  },
                  "createdAt" : {
                    "type" : "string"
                  },
                  "sizeInGb" : {
                    "type" : "integer"
                  },
                  "status" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string"
                  },
                  "createdFromImage" : {
                    "type" : "object",
                    "x-nullable" : true,
                    "required" : [ "imageName", "imageId" ],
                    "properties" : {
                      "imageName" : {
                        "type" : "string"
                      },
                      "imageId" : {
                        "type" : "string"
                      }
                    }
                  },
                  "attachments" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "required" : [ "volumeId", "id", "device", "hostName", "serverId" ],
                      "properties" : {
                        "volumeId" : {
                          "type" : "string"
                        },
                        "id" : {
                          "type" : "string"
                        },
                        "device" : {
                          "type" : "string"
                        },
                        "hostName" : {
                          "type" : "string"
                        },
                        "serverId" : {
                          "type" : "string"
                        }
                      }
                    }
                  },
                  "bootable" : {
                    "type" : "boolean"
                  },
                  "availabilityZone" : {
                    "type" : "string"
                  },
                  "subscriptionId" : {
                    "type" : "string"
                  },
                  "subscriptionName" : {
                    "type" : "string"
                  },
                  "provisioning" : {
                    "type" : "string"
                  },
                  "projectId" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_volumes"
      },
      "post" : {
        "summary" : "Create new volume for specified project",
        "parameters" : [ {
          "name" : "volume",
          "in" : "body",
          "description" : "volume details",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "volumeSize", "availabilityZone", "volumeType" ],
            "properties" : {
              "volumeSize" : {
                "type" : "integer",
                "description" : "in GB"
              },
              "availabilityZone" : {
                "type" : "string"
              },
              "volumeType" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "new volume",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "encrypted", "createdAt", "sizeInGb", "status", "name", "description", "createdFromImage", "attachments", "bootable", "availabilityZone" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "encrypted" : {
                  "type" : "boolean"
                },
                "createdAt" : {
                  "type" : "string"
                },
                "sizeInGb" : {
                  "type" : "integer"
                },
                "status" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "createdFromImage" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "required" : [ "imageName", "imageId" ],
                  "properties" : {
                    "imageName" : {
                      "type" : "string"
                    },
                    "imageId" : {
                      "type" : "string"
                    }
                  }
                },
                "attachments" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "volumeId", "id", "device", "hostName", "serverId" ],
                    "properties" : {
                      "volumeId" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "device" : {
                        "type" : "string"
                      },
                      "hostName" : {
                        "type" : "string"
                      },
                      "serverId" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "bootable" : {
                  "type" : "boolean"
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "post_k5_compute_project_volumes"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/volumes/{id}" : {
      "get" : {
        "summary" : "Get details of specified volume for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of volume",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Volume object with specified id",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "encrypted", "createdAt", "sizeInGb", "status", "name", "description", "createdFromImage", "attachments", "bootable", "availabilityZone" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "encrypted" : {
                  "type" : "boolean"
                },
                "createdAt" : {
                  "type" : "string"
                },
                "sizeInGb" : {
                  "type" : "integer"
                },
                "status" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "createdFromImage" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "required" : [ "imageName", "imageId" ],
                  "properties" : {
                    "imageName" : {
                      "type" : "string"
                    },
                    "imageId" : {
                      "type" : "string"
                    }
                  }
                },
                "attachments" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "volumeId", "id", "device", "hostName", "serverId" ],
                    "properties" : {
                      "volumeId" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "device" : {
                        "type" : "string"
                      },
                      "hostName" : {
                        "type" : "string"
                      },
                      "serverId" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "bootable" : {
                  "type" : "boolean"
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_project_volume"
      },
      "delete" : {
        "summary" : "Deletes volume for specified project",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of volume",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Volume marked for deletion successfully"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "delete_k5_compute_project_volume"
      },
      "put" : {
        "summary" : "Update volume name and/or description for specified project",
        "description" : "",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "ID of volume",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "volume",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Volume object with specified id, after update",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "encrypted", "createdAt", "sizeInGb", "status", "name", "description", "createdFromImage", "attachments", "bootable", "availabilityZone" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "encrypted" : {
                  "type" : "boolean"
                },
                "createdAt" : {
                  "type" : "string"
                },
                "sizeInGb" : {
                  "type" : "integer"
                },
                "status" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string"
                },
                "createdFromImage" : {
                  "type" : "object",
                  "x-nullable" : true,
                  "required" : [ "imageName", "imageId" ],
                  "properties" : {
                    "imageName" : {
                      "type" : "string"
                    },
                    "imageId" : {
                      "type" : "string"
                    }
                  }
                },
                "attachments" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "required" : [ "volumeId", "id", "device", "hostName", "serverId" ],
                    "properties" : {
                      "volumeId" : {
                        "type" : "string"
                      },
                      "id" : {
                        "type" : "string"
                      },
                      "device" : {
                        "type" : "string"
                      },
                      "hostName" : {
                        "type" : "string"
                      },
                      "serverId" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "bootable" : {
                  "type" : "boolean"
                },
                "availabilityZone" : {
                  "type" : "string"
                },
                "subscriptionId" : {
                  "type" : "string"
                },
                "subscriptionName" : {
                  "type" : "string"
                },
                "provisioning" : {
                  "type" : "string"
                },
                "projectId" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "put_k5_compute_project_volume"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/volumes/{volume_id}/detach" : {
      "put" : {
        "summary" : "Detach volume from vm for specifed project",
        "parameters" : [ {
          "name" : "volume_id",
          "in" : "path",
          "description" : "ID of volume",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Volume detached from vm successfully"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "put_k5_compute_project_volume_detach"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/volumes/{volume_id}/attach" : {
      "put" : {
        "summary" : "Attach volume to vm for specified project",
        "parameters" : [ {
          "name" : "volume_id",
          "in" : "path",
          "description" : "ID of volume",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "details",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "required" : [ "vmId", "mountPoint" ],
            "properties" : {
              "vmId" : {
                "type" : "string"
              },
              "mountPoint" : {
                "type" : "string"
              },
              "accessMode" : {
                "type" : "string",
                "description" : "Possible values: rw;ro. Defaults to rw if left unspecified"
              }
            }
          }
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Volume attached to vm successfully"
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "put_k5_compute_project_volume_attach"
      }
    },
    "/api/v1/k5/compute/projects" : {
      "get" : {
        "summary" : "List all projects for given subscription",
        "operationId" : "get_projects",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "enabled",
          "in" : "query",
          "description" : "Filter projects by their enabled state",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "description" : "list of projects",
              "items" : {
                "type" : "object",
                "required" : [ "id", "name", "description", "enabled" ],
                "properties" : {
                  "id" : {
                    "type" : "string"
                  },
                  "name" : {
                    "type" : "string"
                  },
                  "description" : {
                    "type" : "string",
                    "x-nullable" : true
                  },
                  "enabled" : {
                    "type" : "boolean"
                  },
                  "domainId" : {
                    "type" : "string"
                  },
                  "parentId" : {
                    "type" : "string",
                    "x-nullable" : true
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      },
      "post" : {
        "summary" : "Create project",
        "operationId" : "create_project",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "enabled" : {
                "type" : "boolean"
              },
              "parentId" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Project created successfully",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "description", "enabled" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "enabled" : {
                  "type" : "boolean"
                },
                "domainId" : {
                  "type" : "string"
                },
                "parentId" : {
                  "type" : "string",
                  "x-nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "409" : {
            "description" : "Resource limit exceeded",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      }
    },
    "/api/v1/k5/compute/projects/{project_id}" : {
      "get" : {
        "summary" : "Get project",
        "operationId" : "get_project",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "description", "enabled" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "enabled" : {
                  "type" : "boolean"
                },
                "domainId" : {
                  "type" : "string"
                },
                "parentId" : {
                  "type" : "string",
                  "x-nullable" : true
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      },
      "put" : {
        "summary" : "Update project",
        "operationId" : "update_project",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "arguments",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string"
              },
              "description" : {
                "type" : "string"
              },
              "enabled" : {
                "type" : "boolean"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Project updated successfully",
            "schema" : {
              "type" : "object",
              "required" : [ "id", "name", "description", "enabled" ],
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "name" : {
                  "type" : "string"
                },
                "description" : {
                  "type" : "string",
                  "x-nullable" : true
                },
                "enabled" : {
                  "type" : "boolean"
                },
                "domainId" : {
                  "type" : "string"
                },
                "parentId" : {
                  "type" : "string",
                  "x-nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid json payload"
          },
          "409" : {
            "description" : "Resource limit exceeded",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/becomeAffiliated" : {
      "post" : {
        "summary" : "Assign _member_ role for the current user on the specified project.",
        "operationId" : "become_affiliated",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Role assigned successfully"
          },
          "400" : {
            "description" : "Bad request"
          },
          "409" : {
            "description" : "Resource limit exceeded",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          },
          "500" : {
            "description" : "Internal error",
            "schema" : {
              "type" : "object",
              "required" : [ "message" ],
              "properties" : {
                "message" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ]
      }
    },
    "/api/v1/k5/compute/regions" : {
      "get" : {
        "summary" : "List all regions in K5",
        "responses" : {
          "200" : {
            "description" : "",
            "schema" : {
              "type" : "array",
              "items" : {
                "type" : "object",
                "properties" : {
                  "name" : {
                    "type" : "string"
                  },
                  "id" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        },
        "tags" : [ "compute", "k5" ],
        "operationId" : "get_k5_compute_regions"
      }
    },
    "/api/v1/k5/compute/projects/{project_id}/vms/{id}/workshift" : {
      "put" : {
        "summary" : "Update workshift",
        "operationId" : "update_workshift",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "Details of the workshift that will be updated",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Workshift updated successfully",
            "schema" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "k5" ]
      },
      "post" : {
        "summary" : "Create workshift",
        "operationId" : "create_workshift",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "Details of the workshift that will be created",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Workshift created successfully",
            "schema" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad request"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "k5" ]
      },
      "delete" : {
        "summary" : "Delete workshift",
        "operationId" : "delete_workshift",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Workshift deleted successfully"
          },
          "400" : {
            "description" : "Bad request"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "k5" ]
      }
    },
    "/api/v1/openstack/compute/vms" : {
      "get" : {
        "summary" : "Get VMs",
        "description" : "Get all VMs for specific subscription",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of vms",
              "items" : {
                "type" : "object",
                "description" : "VM",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "VM name"
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "VM id"
                  },
                  "createdAt" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date when the VM was created"
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date of the last update of the VM. Can be null"
                  },
                  "href" : {
                    "type" : "string",
                    "description" : "url to the VM"
                  },
                  "powerState" : {
                    "type" : "string",
                    "description" : "VM power state. Possible states are no-state, pending, running, shutting-down, stopped, stopping, terminated, unknown"
                  },
                  "allowedPowerActions" : {
                    "type" : "array",
                    "description" : "List of allowed power actions for current power stated of a VM",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "VM status"
                  },
                  "taskState" : {
                    "type" : "string",
                    "description" : "State"
                  },
                  "flavorId" : {
                    "type" : "string",
                    "description" : "Flavor id"
                  },
                  "volumes" : {
                    "type" : "array",
                    "description" : "List of volume ids attached to a VM",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "interfaces" : {
                    "type" : "array",
                    "description" : "List of interface ids for the VM",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "isManaged" : {
                    "type" : "boolean",
                    "description" : "Specifies if management of a VM in EOS is enabled"
                  },
                  "keypairId" : {
                    "type" : "string",
                    "description" : "Keypir id"
                  },
                  "imageId" : {
                    "type" : "string",
                    "description" : "Id of an image used for VM creation"
                  },
                  "subscriptionId" : {
                    "type" : "string",
                    "description" : "Id of a subscription used for VM creation"
                  },
                  "subscriptionName" : {
                    "type" : "string",
                    "description" : "Name of a subscription used for VM cration"
                  },
                  "provisioning" : {
                    "type" : "boolean",
                    "description" : "Specifies if provisioning of applications is enabled"
                  },
                  "tags" : {
                    "type" : "array",
                    "description" : "Tags (name and value) assigned to this VM",
                    "items" : {
                      "type" : "object",
                      "properties" : {
                        "name" : {
                          "type" : "string",
                          "description" : "Name (key) of the tag"
                        },
                        "value" : {
                          "type" : "string",
                          "description" : "Value of the tag"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_vms"
      },
      "post" : {
        "summary" : "Create VM",
        "description" : "Create new VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm",
          "in" : "body",
          "required" : true,
          "description" : "VM creation data",
          "schema" : {
            "type" : "object",
            "description" : "Create VM",
            "required" : [ "sourceType", "name", "imageId", "flavorId", "availabilityZone", "keypairId", "volumeSize", "nics", "securityGroups", "tags" ],
            "properties" : {
              "sourceType" : {
                "type" : "string",
                "description" : "Source type can be \"image\" (internal EOS OpenStack does not allow now imageNewVolume)"
              },
              "name" : {
                "type" : "string",
                "description" : "VM name"
              },
              "imageId" : {
                "type" : "string",
                "description" : "Id of an image used for VM creation"
              },
              "flavorId" : {
                "type" : "string",
                "description" : "Flavor id"
              },
              "availabilityZone" : {
                "type" : "string",
                "description" : "Availability zone"
              },
              "keypairId" : {
                "type" : "string",
                "description" : "Keypir id"
              },
              "managementEnabled" : {
                "type" : "boolean",
                "description" : "Specifies if management of a VM in EOS is enabled"
              },
              "volumeSize" : {
                "type" : "integer",
                "description" : "Volume size in GB"
              },
              "nics" : {
                "type" : "array",
                "description" : "List of network ids",
                "items" : {
                  "type" : "string"
                }
              },
              "securityGroups" : {
                "type" : "array",
                "description" : "List of security group ids",
                "items" : {
                  "type" : "string"
                }
              },
              "publicIp" : {
                "type" : "boolean",
                "description" : "Automatically assign free floating IP for VM"
              },
              "tags" : {
                "type" : "array",
                "description" : "Tags (name and value) assigned to this VM",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name (key) of the tag"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value of the tag"
                    }
                  }
                }
              },
              "workshift" : {
                "type" : "object",
                "properties" : {
                  "start" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  },
                  "stop" : {
                    "type" : "object",
                    "properties" : {
                      "minute" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 59
                      },
                      "hour" : {
                        "type" : "integer",
                        "minimum" : 0,
                        "maximum" : 23
                      },
                      "days" : {
                        "type" : "array",
                        "minItems" : 1,
                        "items" : {
                          "type" : "string",
                          "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                        },
                        "uniqueItems" : true
                      }
                    }
                  }
                },
                "x-nullable" : true
              },
              "managementToolId" : {
                "type" : "string"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "VM",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "VM name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "VM id"
                },
                "createdAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the VM was created"
                },
                "updatedAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date of the last update of the VM. Can be null"
                },
                "href" : {
                  "type" : "string",
                  "description" : "url to the VM"
                },
                "powerState" : {
                  "type" : "string",
                  "description" : "VM power state. Possible states are no-state, pending, running, shutting-down, stopped, stopping, terminated, unknown"
                },
                "allowedPowerActions" : {
                  "type" : "array",
                  "description" : "List of allowed power actions for current power stated of a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "status" : {
                  "type" : "string",
                  "description" : "VM status"
                },
                "taskState" : {
                  "type" : "string",
                  "description" : "State"
                },
                "flavorId" : {
                  "type" : "string",
                  "description" : "Flavor id"
                },
                "volumes" : {
                  "type" : "array",
                  "description" : "List of volume ids attached to a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "description" : "List of interface ids for the VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "isManaged" : {
                  "type" : "boolean",
                  "description" : "Specifies if management of a VM in EOS is enabled"
                },
                "keypairId" : {
                  "type" : "string",
                  "description" : "Keypir id"
                },
                "imageId" : {
                  "type" : "string",
                  "description" : "Id of an image used for VM creation"
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Id of a subscription used for VM creation"
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Name of a subscription used for VM cration"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "Specifies if provisioning of applications is enabled"
                },
                "tags" : {
                  "type" : "array",
                  "description" : "Tags (name and value) assigned to this VM",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Name (key) of the tag"
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Value of the tag"
                      }
                    }
                  }
                },
                "workshift" : {
                  "type" : "object",
                  "properties" : {
                    "start" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    },
                    "stop" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    }
                  },
                  "x-nullable" : true
                }
              }
            }
          },
          "400" : {
            "description" : "Disk size is 0 or VM name is invalid or empty"
          },
          "500" : {
            "description" : "Creating VM failed"
          },
          "504" : {
            "description" : "Unable to set VM as managed (if option specified) or timeout when waiting for VM to get active during assigning floating IP"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "post_openstack_compute_vms"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}" : {
      "get" : {
        "summary" : "Get VM",
        "description" : "Get VM for specified VM id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "VM",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "VM name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "VM id"
                },
                "createdAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the VM was created"
                },
                "updatedAt" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date of the last update of the VM. Can be null"
                },
                "href" : {
                  "type" : "string",
                  "description" : "url to the VM"
                },
                "powerState" : {
                  "type" : "string",
                  "description" : "VM power state. Possible states are no-state, pending, running, shutting-down, stopped, stopping, terminated, unknown"
                },
                "allowedPowerActions" : {
                  "type" : "array",
                  "description" : "List of allowed power actions for current power stated of a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "status" : {
                  "type" : "string",
                  "description" : "VM status"
                },
                "taskState" : {
                  "type" : "string",
                  "description" : "State"
                },
                "flavorId" : {
                  "type" : "string",
                  "description" : "Flavor id"
                },
                "volumes" : {
                  "type" : "array",
                  "description" : "List of volume ids attached to a VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "interfaces" : {
                  "type" : "array",
                  "description" : "List of interface ids for the VM",
                  "items" : {
                    "type" : "string"
                  }
                },
                "isManaged" : {
                  "type" : "boolean",
                  "description" : "Specifies if management of a VM in EOS is enabled"
                },
                "keypairId" : {
                  "type" : "string",
                  "description" : "Keypir id"
                },
                "imageId" : {
                  "type" : "string",
                  "description" : "Id of an image used for VM creation"
                },
                "subscriptionId" : {
                  "type" : "string",
                  "description" : "Id of a subscription used for VM creation"
                },
                "subscriptionName" : {
                  "type" : "string",
                  "description" : "Name of a subscription used for VM cration"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "Specifies if provisioning of applications is enabled"
                },
                "tags" : {
                  "type" : "array",
                  "description" : "Tags (name and value) assigned to this VM",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "name" : {
                        "type" : "string",
                        "description" : "Name (key) of the tag"
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Value of the tag"
                      }
                    }
                  }
                },
                "workshift" : {
                  "type" : "object",
                  "properties" : {
                    "start" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    },
                    "stop" : {
                      "type" : "object",
                      "properties" : {
                        "minute" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 59
                        },
                        "hour" : {
                          "type" : "integer",
                          "minimum" : 0,
                          "maximum" : 23
                        },
                        "days" : {
                          "type" : "array",
                          "minItems" : 1,
                          "items" : {
                            "type" : "string",
                            "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                          },
                          "uniqueItems" : true
                        }
                      }
                    }
                  },
                  "x-nullable" : true
                }
              }
            }
          },
          "404" : {
            "description" : "VM not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Fetching VM information timed out"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_vm"
      },
      "delete" : {
        "summary" : "Delete VM",
        "description" : "Delete VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "204" : {
            "description" : "VM is deleted and marked as unmanaged"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Unable to set VM as unmanaged (if option specified)"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "delete_openstack_compute_vm"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}/updateTags" : {
      "put" : {
        "description" : "Update tags for a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "vm",
          "in" : "body",
          "required" : true,
          "description" : "Tags update",
          "schema" : {
            "type" : "object",
            "description" : "Tags update",
            "required" : [ "tags" ],
            "properties" : {
              "tags" : {
                "type" : "array",
                "description" : "Tags (name and value) assigned to this VM",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "name" : {
                      "type" : "string",
                      "description" : "Name (key) of the tag"
                    },
                    "value" : {
                      "type" : "string",
                      "description" : "Value of the tag"
                    }
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid tags"
          },
          "404" : {
            "description" : "VM id not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "put_openstack_compute_vm_updateTags"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}/setTag" : {
      "put" : {
        "description" : "Set tag for a VM",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "vm",
          "in" : "body",
          "required" : true,
          "description" : "Tag set",
          "schema" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Name (key) of the tag"
              },
              "value" : {
                "type" : "string",
                "description" : "Value of the tag"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid tag"
          },
          "404" : {
            "description" : "VM id not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "put_openstack_compute_vm_setTag"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}/command/{action}" : {
      "put" : {
        "summary" : "Execute action on a VM",
        "description" : "Execute action on a VM. Actions are start, poweroff, softReboot, hardReboot",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        }, {
          "name" : "action",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "start, poweroff, softReboot, hardReboot"
        } ],
        "responses" : {
          "202" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Invalid command or VM state doesn't allow given action"
          },
          "404" : {
            "description" : "VM not found"
          },
          "409" : {
            "description" : "The command could not be executed due to conflicting VM state"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "put_openstack_compute_vm_command"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}/details" : {
      "get" : {
        "summary" : "Get VM details",
        "description" : "Get VM details",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of VM details",
              "items" : {
                "type" : "array",
                "description" : "List of VM details",
                "items" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "Server not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_vm_details"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}/management" : {
      "delete" : {
        "summary" : "Delete apps for VM",
        "description" : "Delete applications for specified VM id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          },
          "504" : {
            "description" : "Unable to remove applications for VM"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "delete_openstack_compute_vm_management"
      },
      "get" : {
        "summary" : "Get VM management status",
        "description" : "Get VM management status validated from the virtual machine.",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OKKK",
            "schema" : {
              "type" : "object",
              "description" : "Management status information",
              "properties" : {
                "status" : {
                  "type" : "string",
                  "enum" : [ "notAvailable", "notEnabled", "available", "installing" ]
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_vm_management"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}/password" : {
      "get" : {
        "summary" : "Get encrypted password for a VM",
        "parameters" : [ {
          "name" : "vm_id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Object with encrypted password",
            "schema" : {
              "type" : "object",
              "properties" : {
                "encryptedPassword" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_vm_password"
      }
    },
    "/api/v1/openstack/compute/flavors" : {
      "get" : {
        "summary" : "Get flavors",
        "description" : "Get list of all flavors",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of flavors",
              "items" : {
                "type" : "object",
                "description" : "Flavor",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Flavor id"
                  },
                  "href" : {
                    "type" : "string",
                    "description" : "Url to a flavor"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Flavor name"
                  },
                  "diskInGb" : {
                    "type" : "integer",
                    "description" : "Disk size in GB"
                  },
                  "ramInMb" : {
                    "type" : "integer",
                    "description" : "Memory size in MB"
                  },
                  "vcpus" : {
                    "type" : "integer",
                    "description" : "Number of virtual CPUs"
                  },
                  "ephemeralDiskInGb" : {
                    "type" : "integer",
                    "description" : "VM ephemeral disk size in GB"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_flavors"
      }
    },
    "/api/v1/openstack/compute/flavors/{flavor_id}" : {
      "get" : {
        "summary" : "Get flavor",
        "description" : "Get specific flavor by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "flavor_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Flavor id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Flavor",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Flavor id"
                },
                "href" : {
                  "type" : "string",
                  "description" : "Url to a flavor"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Flavor name"
                },
                "diskInGb" : {
                  "type" : "integer",
                  "description" : "Disk size in GB"
                },
                "ramInMb" : {
                  "type" : "integer",
                  "description" : "Memory size in MB"
                },
                "vcpus" : {
                  "type" : "integer",
                  "description" : "Number of virtual CPUs"
                },
                "ephemeralDiskInGb" : {
                  "type" : "integer",
                  "description" : "VM ephemeral disk size in GB"
                }
              }
            }
          },
          "404" : {
            "description" : "Flavor id does not exist"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_flavor"
      }
    },
    "/api/v1/openstack/compute/images" : {
      "get" : {
        "summary" : "Get images",
        "description" : "Get list of all images",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of images",
              "items" : {
                "type" : "object",
                "description" : "Image",
                "properties" : {
                  "id" : {
                    "type" : "string",
                    "description" : "Image id"
                  },
                  "href" : {
                    "type" : "string",
                    "description" : "URL for the image"
                  },
                  "name" : {
                    "type" : "string",
                    "description" : "Image name"
                  },
                  "minRamInMb" : {
                    "type" : "integer",
                    "description" : "Minimum memory size in MB"
                  },
                  "minDiskInGb" : {
                    "type" : "integer",
                    "description" : "Maximum disk size in GB"
                  },
                  "updated" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date when the image was last updated"
                  },
                  "created" : {
                    "type" : "string",
                    "format" : "date-time",
                    "description" : "Date when the image was created"
                  },
                  "subsciption-id" : {
                    "type" : "string",
                    "description" : "Subscription id"
                  },
                  "subsciption-name" : {
                    "type" : "string",
                    "description" : "Subscription name"
                  },
                  "provisioning" : {
                    "type" : "boolean",
                    "description" : "States if provisioning is enabled"
                  },
                  "compatibleFlavors" : {
                    "type" : "array",
                    "items" : {
                      "type" : "object",
                      "description" : "Flavor",
                      "properties" : {
                        "id" : {
                          "type" : "string",
                          "description" : "Flavor id"
                        },
                        "href" : {
                          "type" : "string",
                          "description" : "Url to a flavor"
                        },
                        "name" : {
                          "type" : "string",
                          "description" : "Flavor name"
                        },
                        "diskInGb" : {
                          "type" : "integer",
                          "description" : "Disk size in GB"
                        },
                        "ramInMb" : {
                          "type" : "integer",
                          "description" : "Memory size in MB"
                        },
                        "vcpus" : {
                          "type" : "integer",
                          "description" : "Number of virtual CPUs"
                        },
                        "ephemeralDiskInGb" : {
                          "type" : "integer",
                          "description" : "VM ephemeral disk size in GB"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_images"
      }
    },
    "/api/v1/openstack/compute/images/{image_id}" : {
      "get" : {
        "summary" : "Get image",
        "description" : "Get specific images by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "image_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Image id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Image",
              "properties" : {
                "id" : {
                  "type" : "string",
                  "description" : "Image id"
                },
                "href" : {
                  "type" : "string",
                  "description" : "URL for the image"
                },
                "name" : {
                  "type" : "string",
                  "description" : "Image name"
                },
                "minRamInMb" : {
                  "type" : "integer",
                  "description" : "Minimum memory size in MB"
                },
                "minDiskInGb" : {
                  "type" : "integer",
                  "description" : "Maximum disk size in GB"
                },
                "updated" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the image was last updated"
                },
                "created" : {
                  "type" : "string",
                  "format" : "date-time",
                  "description" : "Date when the image was created"
                },
                "subsciption-id" : {
                  "type" : "string",
                  "description" : "Subscription id"
                },
                "subsciption-name" : {
                  "type" : "string",
                  "description" : "Subscription name"
                },
                "provisioning" : {
                  "type" : "boolean",
                  "description" : "States if provisioning is enabled"
                },
                "compatibleFlavors" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "description" : "Flavor",
                    "properties" : {
                      "id" : {
                        "type" : "string",
                        "description" : "Flavor id"
                      },
                      "href" : {
                        "type" : "string",
                        "description" : "Url to a flavor"
                      },
                      "name" : {
                        "type" : "string",
                        "description" : "Flavor name"
                      },
                      "diskInGb" : {
                        "type" : "integer",
                        "description" : "Disk size in GB"
                      },
                      "ramInMb" : {
                        "type" : "integer",
                        "description" : "Memory size in MB"
                      },
                      "vcpus" : {
                        "type" : "integer",
                        "description" : "Number of virtual CPUs"
                      },
                      "ephemeralDiskInGb" : {
                        "type" : "integer",
                        "description" : "VM ephemeral disk size in GB"
                      }
                    }
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_image"
      }
    },
    "/api/v1/openstack/compute/keypairs" : {
      "get" : {
        "summary" : "Get keypairs",
        "description" : "Get list of all keypairs",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "array",
              "description" : "List of Keypairs",
              "items" : {
                "type" : "object",
                "description" : "Keypair",
                "properties" : {
                  "name" : {
                    "type" : "string",
                    "description" : "Keypair name"
                  },
                  "id" : {
                    "type" : "string",
                    "description" : "Keypair id"
                  },
                  "href" : {
                    "type" : "string",
                    "description" : "URL for the keypair"
                  },
                  "fingerprint" : {
                    "type" : "string",
                    "description" : "Keypair fingerprint"
                  }
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_keypairs"
      }
    },
    "/api/v1/openstack/compute/keypairs/{keypair_id}" : {
      "get" : {
        "summary" : "Get keypair",
        "description" : "Get specific keypair by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "keypair_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Keypair id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Keypair",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Keypair name"
                },
                "id" : {
                  "type" : "string",
                  "description" : "Keypair id"
                },
                "href" : {
                  "type" : "string",
                  "description" : "URL for the keypair"
                },
                "fingerprint" : {
                  "type" : "string",
                  "description" : "Keypair fingerprint"
                }
              }
            }
          },
          "404" : {
            "description" : "Keypair not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_keypair"
      },
      "delete" : {
        "summary" : "Delete keypair",
        "description" : "Delete specific keypair by id",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "keypair_id",
          "type" : "string",
          "in" : "path",
          "required" : true,
          "description" : "Keypair id"
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "Keypair not found"
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "delete_openstack_compute_keypair"
      }
    },
    "/api/v1/openstack/compute/keypairs/generate" : {
      "post" : {
        "summary" : "Create keypair",
        "description" : "Create new keypair",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "keypair data",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "description" : "Keypair data",
            "required" : [ "name" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Keypair name"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Keypair",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Keypair name"
                },
                "fingerprint" : {
                  "type" : "string",
                  "description" : "Keypair fingerprint"
                },
                "publicKey" : {
                  "type" : "string",
                  "description" : "Public key"
                },
                "privateKey" : {
                  "type" : "string",
                  "description" : "Private key",
                  "x-nullable" : true
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "post_openstack_compute_keypairs_generate"
      }
    },
    "/api/v1/openstack/compute/keypairs/import" : {
      "post" : {
        "summary" : "Import a new public keypair",
        "parameters" : [ {
          "name" : "keypair",
          "in" : "body",
          "schema" : {
            "type" : "object",
            "description" : "Upload public key",
            "required" : [ "name", "publicKey" ],
            "properties" : {
              "name" : {
                "type" : "string",
                "description" : "Keypair name"
              },
              "publicKey" : {
                "type" : "string",
                "description" : "Public key"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "type" : "object",
              "description" : "Keypair",
              "properties" : {
                "name" : {
                  "type" : "string",
                  "description" : "Keypair name"
                },
                "fingerprint" : {
                  "type" : "string",
                  "description" : "Keypair fingerprint"
                },
                "publicKey" : {
                  "type" : "string",
                  "description" : "Public key"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "post_openstack_compute_keypairs_import"
      }
    },
    "/api/v1/openstack/compute/validateSubscription" : {
      "get" : {
        "summary" : "Validate subscription",
        "description" : "Validate subscription",
        "parameters" : [ {
          "name" : "subscription",
          "in" : "body",
          "description" : "subscription data",
          "required" : true,
          "schema" : {
            "properties" : {
              "username" : {
                "type" : "string",
                "description" : "OpenStack subscription username"
              },
              "password" : {
                "type" : "string",
                "description" : "OpenStack subscription password"
              },
              "project-id" : {
                "type" : "string",
                "description" : "OpenStack subscription project id"
              }
            }
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "OK"
          },
          "400" : {
            "description" : "Authentication failed"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_validateSubscription"
      }
    },
    "/api/v1/openstack/compute/vms/{vm_id}/consoleUrl" : {
      "get" : {
        "summary" : "Get console url",
        "description" : "Get console url",
        "parameters" : [ {
          "name" : "subscriptionId",
          "required" : true,
          "in" : "query",
          "type" : "string",
          "description" : "subscription id"
        }, {
          "name" : "vm_id",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "description" : "VM id"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "properties" : {
                "url" : {
                  "type" : "string",
                  "description" : "Url to the VM console"
                }
              }
            }
          },
          "500" : {
            "description" : "An unexpected error occurred",
            "schema" : {
              "type" : "object",
              "properties" : {
                "status" : {
                  "type" : "integer",
                  "default" : 500
                },
                "exec_info" : {
                  "type" : "string"
                },
                "timestamp" : {
                  "type" : "string"
                },
                "url" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "get_openstack_compute_vm_consoleUrl"
      }
    },
    "/api/v1/openstack/compute/vms/{id}/workshift" : {
      "post" : {
        "summary" : "Create workshift",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "Details of the workshift that will be created",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Workshift successfully created",
            "schema" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "post_openstack_compute_vm_workshift"
      },
      "put" : {
        "summary" : "Update workshift",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "data",
          "in" : "body",
          "description" : "Details of the workshift that will be updated",
          "required" : true,
          "schema" : {
            "type" : "object",
            "properties" : {
              "start" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              },
              "stop" : {
                "type" : "object",
                "properties" : {
                  "minute" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 59
                  },
                  "hour" : {
                    "type" : "integer",
                    "minimum" : 0,
                    "maximum" : 23
                  },
                  "days" : {
                    "type" : "array",
                    "minItems" : 1,
                    "items" : {
                      "type" : "string",
                      "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                    },
                    "uniqueItems" : true
                  }
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Workshift successfully updated",
            "schema" : {
              "type" : "object",
              "properties" : {
                "start" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                },
                "stop" : {
                  "type" : "object",
                  "properties" : {
                    "minute" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 59
                    },
                    "hour" : {
                      "type" : "integer",
                      "minimum" : 0,
                      "maximum" : 23
                    },
                    "days" : {
                      "type" : "array",
                      "minItems" : 1,
                      "items" : {
                        "type" : "string",
                        "enum" : [ "mon", "tue", "wed", "thu", "fri", "sat", "sun" ]
                      },
                      "uniqueItems" : true
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "put_openstack_compute_vm_workshift"
      },
      "delete" : {
        "summary" : "Delete workshift",
        "parameters" : [ {
          "name" : "subscriptionId",
          "in" : "query",
          "description" : "Id of subscription",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "project_id",
          "in" : "path",
          "description" : "Id of K5 project",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "description" : "ID of vm",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Workshift successfully deleted"
          },
          "400" : {
            "description" : "Bad Request"
          },
          "500" : {
            "description" : "Internal server error"
          }
        },
        "tags" : [ "compute", "openstack" ],
        "operationId" : "delete_openstack_compute_vm_workshift"
      }
    }
  }
}