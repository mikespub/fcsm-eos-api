{
  "definitions": {
    "ChangeStatusError": {
      "$ref": "#/definitions/Error",
      "x-error": true
    },
    "ContentType": {
      "type": "string"
    },
    "ContentTypes": {
      "items": {
        "$ref": "#/definitions/ContentType"
      },
      "type": "array"
    },
    "Error": {
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "type": "object",
      "x-error": true
    },
    "EventType": {
      "properties": {
        "description": {
          "type": "string"
        },
        "eventType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "EventTypes": {
      "items": {
        "$ref": "#/definitions/EventType"
      },
      "type": "array"
    },
    "InvalidInput": {
      "$ref": "#/definitions/Error",
      "x-error": true
    },
    "ServiceUnavailable": {
      "$ref": "#/definitions/Error",
      "x-error": true
    },
    "Unauthorized": {
      "$ref": "#/definitions/Error",
      "x-error": true
    },
    "UnexpectedError": {
      "$ref": "#/definitions/Error",
      "x-error": true
    },
    "Webhook": {
      "properties": {
        "contentType": {
          "minLength": 1,
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "eventTypesIds": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "readOnly": true,
          "type": "string"
        },
        "secret": {
          "type": "string"
        },
        "url": {
          "maxLength": 256,
          "minLength": 1,
          "type": "string"
        }
      },
      "required": [
        "id",
        "url",
        "contentType",
        "enabled"
      ],
      "type": "object"
    },
    "WebhookNotFound": {
      "$ref": "#/definitions/Error",
      "x-error": true
    },
    "Webhooks": {
      "items": {
        "$ref": "#/definitions/Webhook"
      },
      "type": "array"
    }
  },
  "host": "emeia-eos.fcsm.io",
  "info": {
    "description": "Webhook service",
    "title": "Fujitsu webhook service",
    "version": "1.0.0"
  },
  "paths": {
    "/contentTypes": {
      "get": {
        "operationId": "getContentTypes",
        "responses": {
          "200": {
            "description": "An array of Content Types",
            "schema": {
              "$ref": "#/definitions/ContentTypes"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Get available content types for webhooks"
      }
    },
    "/eventTypes": {
      "get": {
        "operationId": "getEventTypes",
        "responses": {
          "200": {
            "description": "An array of Event Types objects",
            "schema": {
              "$ref": "#/definitions/EventTypes"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Get available event types for webhooks"
      }
    },
    "/webhooks": {
      "get": {
        "operationId": "getWebhooks",
        "responses": {
          "200": {
            "description": "An array of Webhooks",
            "schema": {
              "$ref": "#/definitions/Webhooks"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Get list of defined webhooks"
      },
      "post": {
        "operationId": "createWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "email",
            "type": "string"
          },
          {
            "description": "The details of the new webhook",
            "in": "body",
            "name": "webhook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Properly created a new webhook"
          },
          "400": {
            "description": "Invalid JSON payload",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "403": {
            "description": "Insufficient access rights",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Create a new webhook"
      }
    },
    "/webhooks/{webhook_id}": {
      "delete": {
        "operationId": "deleteWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "email",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Webhook was deleted properly"
          },
          "400": {
            "description": "Invalid role",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "403": {
            "description": "Insufficient access rights",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "404": {
            "description": "Unknown webhook id",
            "schema": {
              "$ref": "#/definitions/WebhookNotFound"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Delete specified webhook"
      },
      "get": {
        "operationId": "getSingleWebhook",
        "responses": {
          "200": {
            "description": "Webhook for give id",
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          },
          "404": {
            "description": "Unknown webhook id",
            "schema": {
              "$ref": "#/definitions/WebhookNotFound"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Get single webhook"
      },
      "parameters": [
        {
          "in": "path",
          "name": "webhook_id",
          "required": true,
          "type": "string"
        }
      ],
      "put": {
        "operationId": "updateWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "email",
            "type": "string"
          },
          {
            "description": "The details of the webhook",
            "in": "body",
            "name": "webhook",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Webhook"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook was updated properly"
          },
          "400": {
            "description": "Invalid JSON payload",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "403": {
            "description": "Insufficient access rights",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "404": {
            "description": "Unknown webhook id",
            "schema": {
              "$ref": "#/definitions/WebhookNotFound"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Update specified webhook"
      }
    },
    "/webhooks/{webhook_id}/disable": {
      "delete": {
        "operationId": "disableWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "email",
            "type": "string"
          },
          {
            "in": "path",
            "name": "webhook_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook was disabled properly"
          },
          "400": {
            "description": "Invalid role",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "403": {
            "description": "Insufficient access rights",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "404": {
            "description": "Unknown webhook id",
            "schema": {
              "$ref": "#/definitions/WebhookNotFound"
            }
          },
          "409": {
            "description": "Changing status error",
            "schema": {
              "$ref": "#/definitions/ChangeStatusError"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Disable specified webhook"
      }
    },
    "/webhooks/{webhook_id}/enable": {
      "put": {
        "operationId": "enableWebhook",
        "parameters": [
          {
            "in": "header",
            "name": "email",
            "type": "string"
          },
          {
            "in": "path",
            "name": "webhook_id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook was enabled properly"
          },
          "400": {
            "description": "Invalid role",
            "schema": {
              "$ref": "#/definitions/InvalidInput"
            }
          },
          "403": {
            "description": "Insufficient access rights",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "404": {
            "description": "Unknown webhook id",
            "schema": {
              "$ref": "#/definitions/WebhookNotFound"
            }
          },
          "409": {
            "description": "Changing status error",
            "schema": {
              "$ref": "#/definitions/ChangeStatusError"
            }
          },
          "500": {
            "description": "An unexpected error occured",
            "schema": {
              "$ref": "#/definitions/UnexpectedError"
            }
          },
          "503": {
            "description": "Database is unavailable",
            "schema": {
              "$ref": "#/definitions/ServiceUnavailable"
            }
          }
        },
        "summary": "Enable specified webhook"
      }
    }
  },
  "produces": [
    "application/json"
  ],
  "schemes": [
    "https"
  ],
  "swagger": "2.0",
  "basePath": "/api/v1/webhook"
}