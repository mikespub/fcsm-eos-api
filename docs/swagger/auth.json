{"consumes": ["application/json"], "definitions": {"Credentials": {"properties": {"password": {"type": "string"}, "username": {"type": "string"}}, "required": ["username", "password"], "type": "object"}, "Error": {"properties": {"message": {"type": "string"}}, "type": "object", "x-error": true}, "Forbidden": {"$ref": "#/definitions/Error", "x-error": true}, "InvalidCredentials": {"$ref": "#/definitions/Error", "x-error": true}, "InvalidInput": {"$ref": "#/definitions/Error", "x-error": true}, "NotFound": {"$ref": "#/definitions/Error", "x-error": true}, "SamlConfig": {"properties": {"certificate": {"type": "string"}, "emailAttribute": {"maxLength": 256, "minLength": 1, "type": "string"}, "groupsAttribute": {"maxLength": 256, "minLength": 1, "type": "string"}, "name": {"maxLength": 32, "minLength": 1, "type": "string"}, "providerId": {"maxLength": 32, "minLength": 1, "pattern": "^[a-z0-9]+(-[a-z0-9]+)*$", "type": "string"}, "redirectURL": {"readOnly": true, "type": "string"}, "ssoURL": {"type": "string"}, "usernameAttribute": {"maxLength": 256, "minLength": 1, "type": "string"}}, "required": ["ssoURL", "providerId", "certificate", "name", "usernameAttribute", "emailAttribute", "groupsAttribute"], "type": "object"}, "SamlConfigs": {"items": {"$ref": "#/definitions/SamlConfig"}, "type": "array"}, "Token": {"properties": {"token": {"type": "string"}}, "required": ["token"], "type": "object"}, "UnexpectedError": {"$ref": "#/definitions/Error", "x-error": true}}, "host": "emeia-eos.fcsm.io", "info": {"description": "Creates JWT tokens", "title": "Fujitsu auth service", "version": "1.0.0"}, "paths": {"/externalProviders": {"get": {"description": "List of configured external identity providers", "operationId": "getExternalProviders", "responses": {"200": {"description": "List of providers", "schema": {"$ref": "#/definitions/SamlConfigs"}}, "400": {"description": "Input data is invalid", "schema": {"$ref": "#/definitions/InvalidInput"}}, "403": {"description": "Admin rights are required", "schema": {"$ref": "#/definitions/Forbidden"}}, "500": {"description": "An unexpected error occurred", "schema": {"$ref": "#/definitions/UnexpectedError"}}}}, "parameters": [{"enum": ["admin", "user"], "in": "header", "name": "role", "type": "string"}], "post": {"description": "Adds new external identity provider for saml", "operationId": "addExternalProvider", "parameters": [{"in": "body", "name": "config", "required": true, "schema": {"$ref": "#/definitions/SamlConfig"}}], "responses": {"200": {"description": "Saml IdP provider added successfully", "schema": {"$ref": "#/definitions/SamlConfig"}}, "400": {"description": "Input data is invalid", "schema": {"$ref": "#/definitions/InvalidInput"}}, "403": {"description": "Admin rights are required", "schema": {"$ref": "#/definitions/Forbidden"}}, "500": {"description": "An unexpected error occurred", "schema": {"$ref": "#/definitions/UnexpectedError"}}}}}, "/externalProviders/{providerId}": {"delete": {"description": "Delete external identity provider", "operationId": "deleteExternalProvider", "responses": {"200": {"description": "Provider deleted successfully"}, "400": {"description": "Input data is invalid", "schema": {"$ref": "#/definitions/InvalidInput"}}, "403": {"description": "Admin rights are required", "schema": {"$ref": "#/definitions/Forbidden"}}, "500": {"description": "An unexpected error occurred", "schema": {"$ref": "#/definitions/UnexpectedError"}}}}, "get": {"description": "Configured external identity provider by id", "operationId": "getExternalProvider", "responses": {"200": {"description": "Providers configuration", "schema": {"$ref": "#/definitions/SamlConfig"}}, "400": {"description": "Input data is invalid", "schema": {"$ref": "#/definitions/InvalidInput"}}, "403": {"description": "Admin rights are required", "schema": {"$ref": "#/definitions/Forbidden"}}, "404": {"description": "Provider with this id does not exist", "schema": {"$ref": "#/definitions/NotFound"}}, "500": {"description": "An unexpected error occurred", "schema": {"$ref": "#/definitions/UnexpectedError"}}}}, "parameters": [{"enum": ["admin", "user"], "in": "header", "name": "role", "type": "string"}, {"in": "path", "name": "providerId", "required": true, "type": "string"}]}, "/login": {"post": {"operationId": "login", "parameters": [{"in": "body", "name": "credentials", "required": true, "schema": {"$ref": "#/definitions/Credentials"}}], "responses": {"200": {"description": "Token created successfully", "schema": {"$ref": "#/definitions/Token"}}, "400": {"description": "Input data is invalid", "schema": {"$ref": "#/definitions/InvalidInput"}}, "403": {"description": "Incorrect credentials", "schema": {"$ref": "#/definitions/InvalidCredentials"}}, "500": {"description": "An unexpected error occurred", "schema": {"$ref": "#/definitions/UnexpectedError"}}}}}}, "produces": ["application/json"], "schemes": ["https"], "swagger": "2.0", "basePath": "/api/v1/auth"}