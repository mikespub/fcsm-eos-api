{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Configuration service",
    "description": "Service administration configration management"
  },
  "host": "emeia-eos.fcsm.io",
  "schemes": [
    "https"
  ],
  "basePath": "/api/v1/configuration",
  "paths": {
    "/platformAccess": {
      "get": {
        "summary": "Get platform access configutation",
        "description": "Get platform access configutation",
        "operationId": "get_all_platform_access",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PlatformConfigs"
            }
          }
        }
      },
      "put": {
        "summary": "Set platform access configutation",
        "description": "Set platform access configutation",
        "operationId": "edit_platform_access",
        "parameters": [
          {
            "name": "configuration",
            "in": "body",
            "required": true,
            "description": "Configuration to set",
            "schema": {
              "$ref": "#/definitions/Configuration"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Empty configuration given"
          }
        }
      }
    },
    "/platformAccess/{platform_id}": {
      "get": {
        "summary": "Get platform access value",
        "description": "Get platform access value",
        "operationId": "get_platform_access",
        "parameters": [
          {
            "name": "platform_id",
            "in": "path",
            "required": true,
            "description": "Platform id",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "boolean",
              "description": "True or False if platform is enabled or not"
            }
          }
        }
      }
    },
    "/mailProviders": {
      "get": {
        "summary": "Get mail providers",
        "description": "Get all mail providers",
        "operationId": "get_mail_providers",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "description": "List of mail providers",
              "items": {
                "$ref": "#/definitions/MailProvider"
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add provider data",
        "description": "Add new provider data",
        "operationId": "add_mail_provider",
        "parameters": [
          {
            "$ref": "#/parameters/provider_data"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MailProvider"
            }
          },
          "400": {
            "description": "Wrong provider service or provider name already exists"
          }
        }
      }
    },
    "/mailProviders/{provider_id}": {
      "get": {
        "summary": "Get provider data",
        "description": "Get provider data",
        "operationId": "get_mail_provider",
        "parameters": [
          {
            "$ref": "#/parameters/provider_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MailProvider"
            }
          },
          "404": {
            "description": "Provider id does not exist"
          }
        }
      },
      "put": {
        "summary": "Edit provider",
        "description": "Edit provider",
        "operationId": "edit_mail_provider",
        "parameters": [
          {
            "$ref": "#/parameters/provider_id"
          },
          {
            "$ref": "#/parameters/provider_data"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MailProvider"
            }
          },
          "404": {
            "description": "Provider id does not exist"
          }
        }
      },
      "delete": {
        "summary": "Delete provider",
        "description": "Delete provider",
        "parameters": [
          {
            "$ref": "#/parameters/provider_id"
          }
        ],
        "responses": {
          "204": {
            "description": "OK"
          },
          "400": {
            "description": "Provider is currently set as default and cannot be deleted"
          },
          "404": {
            "description": "Provider id does not exist"
          }
        }
      }
    },
    "/mailProviders/default": {
      "get": {
        "summary": "Get default mail provider",
        "description": "Get data for default mail provider",
        "operationId": "set_default_mail_provider",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MailProvider"
            }
          },
          "404": {
            "description": "No default mail provider set"
          },
          "500": {
            "description": "More than one default provider set"
          }
        }
      }
    },
    "/mailProviders/default/{provider_id}": {
      "put": {
        "summary": "Set default mail provider",
        "description": "Set default mail provider",
        "parameters": [
          {
            "$ref": "#/parameters/provider_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MailProvider"
            }
          },
          "404": {
            "description": "Provider id does not exist"
          }
        }
      },
      "delete": {
        "summary": "Unset default mail provider",
        "description": "Unset mail provider as default",
        "parameters": [
          {
            "$ref": "#/parameters/provider_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Provider id does not exist"
          }
        }
      }
    },
    "/managementToolTypes": {
      "get": {
        "summary": "Get management tool types",
        "description": "Get management tool types",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagementToolTypes"
            }
          }
        }
      }
    },
    "/managementTools": {
      "get": {
        "summary": "Get all mangement tools",
        "description": "Get all management tools",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagementTools"
            }
          }
        }
      },
      "post": {
        "summary": "Create new management tool",
        "description": "Create new management tool",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "description": "arguments",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateManagementTool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagementTool"
            }
          },
          "400": {
            "description": "Invalid management tool type or url format or error saving data in database"
          }
        }
      }
    },
    "/managementTools/{tool_id}": {
      "get": {
        "summary": "Get specified management tool",
        "description": "Get specified management tool",
        "parameters": [
          {
            "$ref": "#/parameters/tool_id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagementTool"
            }
          },
          "400": {
            "description": "Wrong tool id format"
          },
          "404": {
            "description": "Unknown tool id"
          }
        }
      },
      "put": {
        "summary": "Update specified management tool",
        "description": "Update specified management tool",
        "parameters": [
          {
            "$ref": "#/parameters/tool_id"
          },
          {
            "name": "data",
            "in": "body",
            "description": "arguments",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateManagementTool"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ManagementTool"
            }
          },
          "400": {
            "description": "Wrong tool id or url format"
          },
          "404": {
            "description": "Unknown tool id"
          }
        }
      }
    },
    "/logo": {
      "post": {
        "summary": "Send logo image to be stored",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "logo",
            "in": "formData",
            "description": "Uploaded logo image",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request headers, unsupported image extension, error saving image."
          },
          "411": {
            "description": "Missing request header Content-Length"
          },
          "413": {
            "description": "Image is to large. Maximum image size is 0.5MB."
          },
          "415": {
            "description": "Unsupported Media Type"
          },
          "500": {
            "description": "Error while saving logo image"
          }
        }
      },
      "get": {
        "summary": "Get logo image",
        "produces": [
          "image/png",
          "image/jpg",
          "image/jpeg",
          "image/svg+xml"
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "There is no image stored yet"
          }
        }
      }
    }
  },
  "definitions": {
    "PlatformConfig": {
      "type": "object",
      "properties": {
        "platformId": {
          "type": "string",
          "description": "platform id"
        },
        "value": {
          "type": "boolean",
          "description": "Specifies if platform is enabled"
        }
      }
    },
    "PlatformConfigs": {
      "type": "array",
      "description": "List of configurations for platforms",
      "items": {
        "$ref": "#/definitions/PlatformConfig"
      }
    },
    "Configuration": {
      "type": "object",
      "description": "Configuration to set",
      "properties": {
        "configuration": {
          "type": "array",
          "description": "List of configurations for platforms",
          "items": {
            "$ref": "#/definitions/PlatformConfig"
          }
        }
      }
    },
    "MailProvider": {
      "type": "object",
      "description": "Default mail provider",
      "required": [
        "name",
        "service"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Name for a provider instance"
        },
        "service": {
          "type": "string",
          "description": "\"aws_ses\""
        },
        "accessKey": {
          "type": "string",
          "description": "Access key credentaials for AWS SES service"
        },
        "secretKey": {
          "type": "string",
          "description": "Secret access key credentaials for AWS SES service"
        },
        "regionId": {
          "type": "string",
          "description": "Region for AWS SES service (optional parameter)"
        }
      }
    },
    "UnexpectedError": {
      "type": "object",
      "properties": {
        "status": {
          "type": "integer",
          "default": 500
        },
        "exec_info": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ManagementToolType": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-deprecated": true
        },
        "value": {
          "type": "string",
          "x-deprecated": true
        }
      }
    },
    "ManagementToolTypes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ManagementToolType"
      }
    },
    "ManagementTool": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-deprecated": true
        },
        "toolTypeId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "endpointUrl": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "ManagementTools": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ManagementTool"
      }
    },
    "CreateManagementTool": {
      "type": "object",
      "required": [
        "name",
        "endpointUrl"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "x-deprecated": true
        },
        "toolTypeId": {
          "type": "string"
        },
        "endpointUrl": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "UpdateManagementTool": {
      "type": "object",
      "required": [
        "name",
        "endpointUrl"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "endpointUrl": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    }
  },
  "responses": {
    "500Error": {
      "description": "An unexpected error occurred",
      "schema": {
        "$ref": "#/definitions/UnexpectedError"
      }
    }
  },
  "parameters": {
    "provider_data": {
      "name": "provider_data",
      "in": "body",
      "required": true,
      "description": "Provider data",
      "schema": {
        "$ref": "#/definitions/MailProvider"
      }
    },
    "provider_id": {
      "name": "provider_id",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Provider id"
    },
    "tool_id": {
      "name": "tool_id",
      "type": "string",
      "in": "path",
      "required": true,
      "description": "Management tool id"
    },
    "platform_id": {
      "name": "platform_id",
      "type": "string",
      "enum": [
        "aws",
        "azure",
        "vmware"
      ],
      "in": "path",
      "required": true,
      "description": "Platform id"
    }
  }
}