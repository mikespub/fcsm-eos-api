{"swagger": "2.0", "info": {"version": "1.0.0", "title": "Subscription service", "description": "Service for subscriptions management"}, "host": "emeia-eos.fcsm.io", "schemes": ["https"], "basePath": "/api/v1/subscription", "paths": {"/subscriptions": {"get": {"summary": "Get subscriptions", "description": "Retrieve list of all subscriptions", "operationId": "getSubscriptions", "parameters": [{"name": "role", "in": "header", "type": "string", "required": true}, {"name": "subscriptions", "in": "header", "type": "string"}, {"name": "username", "in": "query", "type": "string", "description": "Return only subscriptions to which given user has an access to"}, {"name": "platformId", "in": "query", "type": "string", "description": "Filter subscription by given platform id (openStack , aws, k5, ...)."}], "responses": {"200": {"description": "List of subscriptions", "schema": {"$ref": "#/definitions/Subscriptions"}}, "400": {"$ref": "#/responses/BadRequest"}, "500": {"$ref": "#/responses/InternalError"}}}, "post": {"summary": "Create subscription", "description": "Create new subscription. Provided credentials are validated against target platform", "operationId": "createSubscription", "parameters": [{"name": "subscription", "in": "body", "required": true, "description": "Details of the subscription that will be created", "schema": {"$ref": "#/definitions/CreateSubscription"}}, {"name": "userid", "in": "header", "required": true, "type": "string", "description": "User ID"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Subscription"}}, "400": {"description": "Invalid parameters or credentials validation failure"}, "500": {"description": "Subscription validation failed", "schema": {"$ref": "#/definitions/Error"}}}}}, "/subscriptions/{subscription_id}": {"get": {"summary": "Get subscription", "description": "Get single subscription for specified subscription_id", "operationId": "getSubscription", "parameters": [{"$ref": "#/parameters/subscription_id"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Subscription"}}, "404": {"description": "No subscription for given id"}, "500": {"$ref": "#/responses/InternalError"}}}, "delete": {"summary": "Delete subscription", "description": "Delete subscription for given id", "operationId": "deleteSubscription", "parameters": [{"$ref": "#/parameters/subscription_id"}], "responses": {"204": {"description": "OK"}, "404": {"description": "No subscription for given id"}, "500": {"$ref": "#/responses/InternalError"}}}, "put": {"summary": "Modify subscription", "description": "Modify subscription for given id", "operationId": "updateSubscription", "parameters": [{"$ref": "#/parameters/subscription_id"}, {"name": "subscription", "in": "body", "required": true, "description": "Details of the subscription that will be created", "schema": {"$ref": "#/definitions/ModifySubscription"}}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Subscription"}}, "204": {"description": "No parameter to modify given"}, "400": {"description": "Parameter that cannot be modified given or invalid credentials"}, "404": {"description": "No subscription for given id"}, "500": {"$ref": "#/responses/InternalError"}}}}, "/subscriptions/{subscription_id}/tokens": {"get": {"summary": "Get token", "description": "Get token for a subscription", "operationId": "get_token", "parameters": [{"$ref": "#/parameters/subscription_id"}], "responses": {"200": {"description": "OK", "schema": {"$ref": "#/definitions/Token"}}, "400": {"description": "Platform not supported"}, "500": {"description": "Error during fetching token from platform"}}}}, "/validateVm": {"put": {"description": "Validate a VM against a policy.", "parameters": [{"name": "parameters", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VirtualMachineValidationParameters"}}], "responses": {"200": {"description": "Validation completed. Response will contain `message` property describing the reason for the failure, `isCompliant` will be set to `false` in this case. Response will be `{isCompliant: true}` in case of successfull validation.", "schema": {"type": "object", "required": ["isCompliant"], "properties": {"isCompliant": {"type": "boolean"}, "message": {"type": "string"}}}}, "500": {"$ref": "#/responses/InternalError"}}}}, "/validateWorkshift": {"put": {"description": "Validate a workshift against a policy.", "parameters": [{"name": "parameters", "in": "body", "required": true, "schema": {"$ref": "#/definitions/WorkshiftValidationParameters"}}], "responses": {"200": {"description": "Validation completed. Response will contain `message` property describing the reason for the failure, `isCompliant` will be set to `false` in this case. Response will be `{isCompliant: true}` in case of successful validation.", "schema": {"type": "object", "required": ["isCompliant"], "properties": {"isCompliant": {"type": "boolean"}, "message": {"type": "string"}}}}, "500": {"$ref": "#/responses/InternalError"}}}}}, "definitions": {"Subscriptions": {"type": "array", "description": "List of subscriptions", "items": {"$ref": "#/definitions/Subscription"}}, "Subscription": {"type": "object", "required": ["id", "platformId", "name", "ownerId", "regionId"], "properties": {"id": {"type": "string", "description": "Id of a subscription", "readOnly": true}, "platformId": {"type": "string", "description": "Id of a platform"}, "name": {"type": "string", "description": "Name of a subscription"}, "regionId": {"type": "string", "description": "Region of a subscription"}, "ownerId": {"type": "string", "description": "Id of a subscription owner", "readOnly": true}, "provisioning": {"type": "boolean", "description": "States if provisioning is enabled", "x-deprecated": true}, "createdAt": {"type": "string", "description": "Date when subscription was created", "readOnly": true}, "updatedAt": {"type": "string", "description": "Date of last subscription update", "readOnly": true}, "contractId": {"type": "string", "description": "Subscription contract id for OpenStack|K5 account"}, "projectId": {"type": "string", "description": "Project ID for OpenStack|K5"}, "username": {"type": "string", "description": "Subscription username for OpenStack|K5|VMware subscription"}, "password": {"type": "string", "description": "Password for a subscription for OpenStack|K5|VMware subscription"}, "accessKey": {"type": "string", "description": "Access key ID for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"}, "secretKey": {"type": "string", "description": "Secret access key for AWS/Azure subscriptions. Parameter for AWS/Azure subscriptions only"}, "tenantId": {"type": "string", "description": "Tenant ID for Azure."}, "platformSubscriptionId": {"type": "string", "description": "Subscription ID for Azure."}, "authenticationUrl": {"type": "string", "description": "The URL which is used for authentication and token generation. Parameter for VMware subscription only"}, "apiUrl": {"type": "string", "description": "The URL which is used for communication with vRO API. Parameter for VMware subscription only"}, "policy": {"$ref": "#/definitions/Policy"}}}, "Token": {"type": "object", "description": "Subscription token", "properties": {"token": {"type": "string", "description": "token"}, "services": {"type": "object", "description": "URLs to the platform services", "properties": {"compute": {"type": "string"}, "volumev2": {"type": "string"}, "image": {"type": "string"}, "cloudformation": {"type": "string"}, "orchestration": {"type": "string"}, "network": {"type": "string"}, "identity": {"type": "string"}, "volume": {"type": "string"}}}, "domainId": {"type": "string", "x-nullable": true}, "userId": {"type": "string", "x-nullable": true}, "subscriptionId": {"type": "string", "description": "Id of a subscription", "readOnly": true}, "subscriptionName": {"type": "string", "description": "Name of a subscription"}, "provisioning": {"type": "boolean", "description": "States if provisioning is enabled", "x-deprecated": true}}}, "CreateSubscription": {"type": "object", "required": ["platformId", "name", "policy", "regionId"], "properties": {"platformId": {"type": "string", "description": "Id of a platform"}, "name": {"type": "string", "description": "Name of a subscription. Must be 1 to 32 char long, no trailing whitespace allowed.", "pattern": "^[\\w-][\\w -]{,31}(?<! )$"}, "provisioning": {"type": "boolean", "description": "States if provisioning is enabled", "x-deprecated": true}, "contractId": {"type": "string", "description": "Subscription contract id for OpenStack|K5 account"}, "projectId": {"type": "string", "description": "Project ID for OpenStack|K5 platform"}, "username": {"type": "string", "description": "Subscription username for OpenStack|K5|Vmware subscription"}, "password": {"type": "string", "description": "Password for a subscription for Openstack|K5|VMware subscription"}, "accessKey": {"type": "string", "description": "Access key ID for AWS subscription. Parameter for AWS subscription only"}, "secretKey": {"type": "string", "description": "Secret access key for AWS subscription. Parameter for AWS subscription only"}, "platformSubscriptionId": {"type": "string", "description": "Platform subscription ID for Azure subscription. Parameter for Azure subscription"}, "tenantId": {"type": "string", "description": "Tenant ID in Azure subscription. Parameter for Azure subscription"}, "authenticationUrl": {"type": "string", "description": "The URL which is used for authentication and token generation. Parameter for VMware subscription only"}, "apiUrl": {"type": "string", "description": "The URL which is used for communication with vRO API. Parameter for VMware subscription only"}, "policy": {"$ref": "#/definitions/Policy"}, "regionId": {"type": "string", "description": "Region of a subscription"}}}, "ModifySubscription": {"type": "object", "required": ["name"], "properties": {"name": {"type": "string", "description": "Name of a subscription. Must be 1 to 32 char long, no trailing whitespace allowed.", "pattern": "^[\\w-][\\w -]{,31}(?<! )$"}, "username": {"type": "string", "description": "Subscription username for OpenStack|K5|VMware subscription"}, "password": {"type": "string", "description": "Password for a subscription for Openstack|K5|VMware subscription"}, "provisioning": {"type": "boolean", "description": "States if provisioning is enabled", "x-deprecated": true}, "contractId": {"type": "string", "description": "Subscription contract id for OpenStack|K5 account", "x-deprecated": true}, "accessKey": {"type": "string", "description": "Access key ID for AWS subscription. Parameter for AWS subscription only", "x-deprecated": true}, "secretKey": {"type": "string", "description": "Secret access key for AWS subscription. Parameter for AWS subscription only", "x-deprecated": true}, "platformSubscriptionId": {"type": "string", "description": "Platform subscription ID for Azure subscription. Parameter for Azure subscription", "x-deprecated": true}, "tenantId": {"type": "string", "description": "Tenant ID in Azure subscription. Parameter for Azure subscription", "x-deprecated": true}, "policy": {"$ref": "#/definitions/Policy"}}}, "VirtualMachineValidationParameters": {"type": "object", "properties": {"policy": {"$ref": "#/definitions/Policy"}, "vm": {"$ref": "#/definitions/VirtualMachine"}}}, "WorkshiftValidationParameters": {"type": "object", "properties": {"policy": {"$ref": "#/definitions/Policy"}, "workshift": {"$ref": "#/definitions/Workshift"}}}, "Policy": {"type": "object", "description": "Policy definition", "properties": {"management": {"$ref": "#/definitions/Status"}, "monitoring": {"$ref": "#/definitions/Status"}, "backup": {"$ref": "#/definitions/Status"}, "patching": {"$ref": "#/definitions/Status"}, "workloadManagement": {"$ref": "#/definitions/Status"}, "workshiftRule": {"$ref": "#/definitions/WorkshiftRule"}}}, "VirtualMachine": {"type": "object", "properties": {"managementEnabled": {"type": "boolean"}, "tags": {"type": "array", "items": {"$ref": "#/definitions/Tag"}}, "workshift": {"$ref": "#/definitions/Workshift"}}}, "WorkshiftRule": {"type": "object", "properties": {"status": {"$ref": "#/definitions/Status"}, "defaultWorkshift": {"$ref": "#/definitions/Workshift"}}}, "Workshift": {"type": "object", "description": "Workshift definition", "properties": {"start": {"$ref": "#/definitions/WorkshiftSchedule"}, "stop": {"$ref": "#/definitions/WorkshiftSchedule"}}, "x-nullable": true}, "Tag": {"type": "object", "properties": {"name": {"type": "string"}, "value": {"type": "string"}}}, "TagRule": {"type": "object", "description": "Policy rule that is applied to tags.", "properties": {"name": {"type": "string", "description": "Name of the tag the rule will be applied to."}, "status": {"$ref": "#/definitions/Status"}}}, "Status": {"type": "string", "enum": ["optional", "required", "disabled"]}, "WorkshiftSchedule": {"type": "object", "properties": {"minute": {"type": "integer", "minimum": 0, "maximum": 59}, "hour": {"type": "integer", "minimum": 0, "maximum": 23}, "days": {"type": "array", "minItems": 1, "items": {"type": "string", "enum": ["mon", "tue", "wed", "thu", "fri", "sat", "sun"]}, "uniqueItems": true}}, "x-nullable": true}, "Error": {"type": "object", "required": ["message"], "properties": {"message": {"type": "string"}}}, "BadRequest": {"type": "object", "properties": {"message": {"type": "string"}}}}, "parameters": {"subscription_id": {"name": "subscription_id", "in": "path", "required": true, "type": "string", "description": "Id of a subscription"}, "vm_uid": {"name": "vm_uid", "in": "path", "required": true, "type": "string", "description": "VM id"}}, "responses": {"InternalError": {"description": "Internal error", "schema": {"$ref": "#/definitions/Error"}}, "BadRequest": {"description": "Bad request parameters/data", "schema": {"$ref": "#/definitions/BadRequest"}}}}